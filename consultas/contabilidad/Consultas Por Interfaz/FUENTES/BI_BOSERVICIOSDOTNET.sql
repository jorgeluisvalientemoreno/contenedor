CREATE OR REPLACE PACKAGE BODY BI_BOSERVICIOSDOTNET IS
   CSBVERSION CONSTANT VARCHAR2( 250 ) := 'SAO87043';
   GCNURUTATRAZA CONSTANT PARAMETR.PAMECODI%TYPE := 'RUTA_TRAZA';
   GCSBRUTATRAZA CONSTANT PARAMETR.PAMECHAR%TYPE := '/tmp';
   GCSBSEMILLADEFECTO CONSTANT VARCHAR2( 32 ) := '0001011100101';
   GCNUFORMATOCONEXION CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 2978;
   GCNUFORMATOHORA CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 2992;
   SBMENSAJEERROR GE_ERROR_LOG.DESCRIPTION%TYPE;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      PKERRORS.PUSH( 'BI_BOServiciosDotNET.fsbVersion' );
      PKERRORS.POP;
      RETURN CSBVERSION;
    EXCEPTION
      WHEN LOGIN_DENIED THEN
         PKERRORS.POP;
         RAISE LOGIN_DENIED;
      WHEN PKCONSTANTE.EXERROR_LEVEL2 THEN
         PKERRORS.POP;
         RAISE PKCONSTANTE.EXERROR_LEVEL2;
      WHEN OTHERS THEN
         PKERRORS.NOTIFYERROR( PKERRORS.FSBLASTOBJECT, SQLERRM, SBMENSAJEERROR );
         PKERRORS.POP;
         RAISE_APPLICATION_ERROR( PKCONSTANTE.NUERROR_LEVEL2, SBMENSAJEERROR );
   END FSBVERSION;
   PROCEDURE INVOCARPROC( ISBNOMBRE IN VARCHAR2, ISBCONEXION IN VARCHAR2, ISBPARAMETROS IN VARCHAR2, INUNIVELTRAZA IN NUMBER := GCNUNIVELTRAZA )
    IS
      SBCOMANDO VARCHAR2( 2000 );
      SBRUTATRAZA PARAMETR.PAMECHAR%TYPE;
      SBFECHA VARCHAR2( 14 );
      PROCEDURE INICIALIZAR
       IS
       BEGIN
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.InvocarProC.Inicializar] INICIO', INUNIVELTRAZA );
         SBRUTATRAZA := PKGENERALPARAMETERSMGR.FSBGETSTRINGVALUE( GCNURUTATRAZA );
         SBRUTATRAZA := TRIM( SBRUTATRAZA );
         IF ( SBRUTATRAZA IS NULL ) THEN
            SBRUTATRAZA := GCSBRUTATRAZA;
         END IF;
         SBFECHA := TO_CHAR( SYSDATE, 'DDMMYYYYHHMISS' );
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.InvocarProC.Inicializar] FIN', INUNIVELTRAZA );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END INICIALIZAR;
      PROCEDURE ARMARCOMANDO
       IS
       BEGIN
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.InvocarProC.ArmarComando] INICIO', INUNIVELTRAZA );
         SBCOMANDO := TRIM( ISBNOMBRE ) || ' ' || TRIM( ISBCONEXION ) || ' ' || TRIM( ISBPARAMETROS ) || ' ' || '> ' || SBRUTATRAZA || '/' || TRIM( ISBNOMBRE ) || '_' || SBFECHA || '.trc' || ' 2>' || CHR( 38 ) || '1 ' || CHR( 38 );
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.InvocarProC.ArmarComando] FIN', INUNIVELTRAZA );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END ARMARCOMANDO;
    BEGIN
      UT_TRACE.TRACE( '[BI_BOServiciosDotNET.InvocarProC] INICIO', INUNIVELTRAZA );
      INICIALIZAR;
      ARMARCOMANDO;
      LLAMASIST( SBCOMANDO );
      UT_TRACE.TRACE( '[BI_BOServiciosDotNET.InvocarProC] FIN', INUNIVELTRAZA );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END INVOCARPROC;
   FUNCTION FSBCODIFICARCONTRASENA( ISBCONEXION IN VARCHAR2, IBLCODIFICAR IN BOOLEAN := TRUE, ISBSEMILLA IN VARCHAR2 := NULL, INUNIVELTRAZA IN NUMBER := GCNUNIVELTRAZA )
    RETURN VARCHAR2
    IS
      SBSEMILLA VARCHAR2( 32 );
      SBUSUARIO VARCHAR2( 100 );
      SBCONTRASENAV VARCHAR2( 100 );
      SBCONTRASENAN VARCHAR2( 100 );
      SBINSTANCIA VARCHAR2( 100 );
      SBCONEXION VARCHAR2( 1000 );
      PROCEDURE VALIDARDATOS
       IS
       BEGIN
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.fsbCodificarContrasena.ValidarDatos] INICIO', INUNIVELTRAZA );
         IF ( INSTR( ISBCONEXION, '/' ) = 0 OR INSTR( ISBCONEXION, '@' ) = 0 OR INSTR( ISBCONEXION, '/' ) > INSTR( ISBCONEXION, '@' ) ) THEN
            ERRORS.SETERROR( GCNUFORMATOCONEXION );
            RAISE EX.CONTROLLED_ERROR;
         END IF;
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.fsbCodificarContrasena.ValidarDatos] FIN', INUNIVELTRAZA );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END VALIDARDATOS;
      PROCEDURE INICIALIZAR
       IS
       BEGIN
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.fsbCodificarContrasena.Inicializar] INICIO', INUNIVELTRAZA );
         IF ( ISBSEMILLA IS NULL ) THEN
            SBSEMILLA := GCSBSEMILLADEFECTO;
          ELSE
            SBSEMILLA := ISBSEMILLA;
         END IF;
         SBUSUARIO := SUBSTR( ISBCONEXION, 1, INSTR( ISBCONEXION, '/' ) - 1 );
         SBINSTANCIA := SUBSTR( ISBCONEXION, INSTR( ISBCONEXION, '@' ) + 1, LENGTH( ISBCONEXION ) );
         SBCONTRASENAV := SUBSTR( ISBCONEXION, LENGTH( SBUSUARIO ) + 2, LENGTH( ISBCONEXION ) - LENGTH( SBUSUARIO ) - LENGTH( SBINSTANCIA ) - 2 );
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.fsbCodificarContrasena.Inicializar] FIN', INUNIVELTRAZA );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END INICIALIZAR;
      PROCEDURE CODIFICAR
       IS
       BEGIN
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.fsbCodificarContrasena.Codificar] INICIO', INUNIVELTRAZA );
         IF ( IBLCODIFICAR ) THEN
            PKCONTROLCONEXION.ENCRIPTA( SBCONTRASENAV, SBCONTRASENAN, SBSEMILLA, PKCONTROLCONEXION.CNUENCRIPTA );
          ELSE
            PKCONTROLCONEXION.ENCRIPTA( SBCONTRASENAV, SBCONTRASENAN, SBSEMILLA, PKCONTROLCONEXION.CNUDESENCRIPTA );
         END IF;
         SBCONEXION := SBUSUARIO || '/' || SBCONTRASENAN || '@' || SBINSTANCIA;
         UT_TRACE.TRACE( '[BI_BOServiciosDotNET.fsbCodificarContrasena.Codificar] FIN', INUNIVELTRAZA );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END CODIFICAR;
    BEGIN
      UT_TRACE.TRACE( '[BI_BOServiciosDotNET.fsbCodificarContrasena] INICIO', INUNIVELTRAZA );
      VALIDARDATOS;
      INICIALIZAR;
      CODIFICAR;
      UT_TRACE.TRACE( '[BI_BOServiciosDotNET.fsbCodificarContrasena] FIN', INUNIVELTRAZA );
      RETURN SBCONEXION;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END FSBCODIFICARCONTRASENA;
   PROCEDURE VALIDARFORMATOHORA( ISBHORA IN VARCHAR2, ISBFORMATO IN VARCHAR2 := GCSBHORADEFECTO, INUNIVELTRAZA IN NUMBER := GCNUNIVELTRAZA )
    IS
      DTHORA DATE;
    BEGIN
      UT_TRACE.TRACE( '[BI_BOServiciosDotNET.ValidarFormatoHora] INICIO', INUNIVELTRAZA );
      BEGIN
         DTHORA := TO_DATE( ISBHORA, ISBFORMATO );
       EXCEPTION
         WHEN OTHERS THEN
            ERRORS.SETERROR( GCNUFORMATOHORA, ISBHORA || '|' || ISBFORMATO );
            RAISE EX.CONTROLLED_ERROR;
      END;
      UT_TRACE.TRACE( '[BI_BOServiciosDotNET.ValidarFormatoHora] FIN', INUNIVELTRAZA );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END VALIDARFORMATOHORA;
END BI_BOSERVICIOSDOTNET;
/


