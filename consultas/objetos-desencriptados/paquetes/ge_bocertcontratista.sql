PACKAGE BODY GE_BOCertContratista
IS



















































    
    
    
    
    TYPE TYVALORITEMLISTA IS RECORD
    (
        LIST_UNITARY_COST_ID GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE,
        PRICE                GE_UNIT_COST_ITE_LIS.PRICE%TYPE,
        SALES_VALUE          GE_UNIT_COST_ITE_LIS.SALES_VALUE%TYPE
    );

    
    TYPE TYTBVALORITEMLISTA IS TABLE OF TYVALORITEMLISTA INDEX BY VARCHAR2(42);

    
    
    
    CSBVERSION                  CONSTANT VARCHAR2(10) := 'SAO212600';
    CSBABIERTA                  CONSTANT VARCHAR2(1) := 'A'; 
    CSBSEPARADOR                CONSTANT VARCHAR2(3) := ' - ';

    
    
    
    
    CNUBALANCEQUOTAERROR CONSTANT NUMBER := 111943;
    
    CNUERRORBALANCENOLESSCERO  CONSTANT NUMBER := 5182;

    
    
    
    TBCACHEVALORITEMLISTA TYTBVALORITEMLISTA;

    
    
    
    
    FUNCTION FSBVERSION
    RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;

    
















    PROCEDURE LIMPIARCACHEVALORITEMLISTA
    IS
    BEGIN
        TBCACHEVALORITEMLISTA.DELETE;

        GE_BCCERTCONTRATISTA.LIMPIARCACHEVALORITEMLISTA;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END LIMPIARCACHEVALORITEMLISTA;

    











































    PROCEDURE OBTENERVALORITEMLISTA
    (
        INUORDERID     IN  OR_ORDER.ORDER_ID%TYPE,
        INUITEMID      IN  GE_ITEMS.ITEMS_ID%TYPE,
        ISBCAMPO       IN  VARCHAR2,
        ONUPRICELISTID OUT GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE,
        ONUVALUE       OUT GE_UNIT_COST_ITE_LIS.PRICE%TYPE,
        IDTDATE        IN  OR_ORDER.LEGALIZATION_DATE%TYPE DEFAULT NULL
    )
    IS
        SBCACHE VARCHAR2(31);

        DTDATE            OR_ORDER.LEGALIZATION_DATE%TYPE;

        NUASSIGNEDDATE     OR_ORDER.ASSIGNED_DATE%TYPE;
        NUOPERATINGUNITID  OR_ORDER.OPERATING_UNIT_ID%TYPE;
        NUGEOGRALOCATIONID GE_GEOGRA_LOCATION.GEOGRAP_LOCATION_ID%TYPE;

        NUIDCONTRATISTA   GE_CONTRATISTA.ID_CONTRATISTA%TYPE;
        
        NUPRICE           GE_UNIT_COST_ITE_LIS.PRICE%TYPE;
        NUSALESVALUE      GE_UNIT_COST_ITE_LIS.SALES_VALUE%TYPE;
        
        SBCONTRACT      GE_BOINSTANCECONTROL.STYSBVALUE;
        NUCONTRACT      GE_CONTRATO.ID_CONTRATO%TYPE := NULL;

        PROCEDURE CARGARDATOS
        IS
        BEGIN
            
            GE_BCCERTCONTRATISTA.OBTENERDATOSORDEN
            (
                INUORDERID,
                NUASSIGNEDDATE,
                NUOPERATINGUNITID,
                NUGEOGRALOCATIONID
            );

            
            GE_BCCERTCONTRATISTA.OBTENERDATOSUNIDADTRABAJO(NUOPERATINGUNITID,
                                                           NUIDCONTRATISTA);
                                                           
                                                           
            

            GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
            (
                CT_BOCONSTANTS.FSBGETCONTRACTORINSTANCENAME,
                NULL,
                'GE_CONTRATO',
                'ID_CONTRATO',
                SBCONTRACT
            );
            
            IF SBCONTRACT IS NOT NULL THEN
                NUCONTRACT := TO_NUMBER(SBCONTRACT);
            END IF;
            
    		
        END;
    BEGIN
        
        SBCACHE := INUORDERID||'_'||INUITEMID||'_'||TO_CHAR(IDTDATE,'dd_mm_yyyy');
        IF (TBCACHEVALORITEMLISTA.EXISTS(SBCACHE)) THEN
            ONUPRICELISTID := TBCACHEVALORITEMLISTA(SBCACHE).LIST_UNITARY_COST_ID;
            IF (ISBCAMPO = GE_BOCONSTANTS.FSBGETITEMPRICECOLNAME) THEN
                ONUVALUE   := TBCACHEVALORITEMLISTA(SBCACHE).PRICE;
            ELSIF (ISBCAMPO = GE_BOCONSTANTS.FSBGETITEMSALESVALUECOLNAME) THEN
                ONUVALUE   := TBCACHEVALORITEMLISTA(SBCACHE).SALES_VALUE;
            END IF;
            RETURN;
        END IF;

        CARGARDATOS;

        
        DTDATE := NVL(IDTDATE,
                      NUASSIGNEDDATE);
                      
        DTDATE := TRUNC(DTDATE);

        
        GE_BCCERTCONTRATISTA.OBTENERCOSTOITEMLISTA
        (
            INUITEMID,
            DTDATE,
            NUGEOGRALOCATIONID,
            NUIDCONTRATISTA,
            NUOPERATINGUNITID,
            NUCONTRACT,
            ONUPRICELISTID,
            NUPRICE,
            NUSALESVALUE
        );

        
        NUSALESVALUE := NVL(NUSALESVALUE,0);

        
        TBCACHEVALORITEMLISTA(SBCACHE).LIST_UNITARY_COST_ID := ONUPRICELISTID;
        TBCACHEVALORITEMLISTA(SBCACHE).PRICE                := NUPRICE;
        TBCACHEVALORITEMLISTA(SBCACHE).SALES_VALUE          := NUSALESVALUE;
        
        IF (ISBCAMPO = GE_BOCONSTANTS.FSBGETITEMPRICECOLNAME) THEN
            ONUVALUE := NUPRICE;
        ELSIF (ISBCAMPO = GE_BOCONSTANTS.FSBGETITEMSALESVALUECOLNAME) THEN
               ONUVALUE := NUSALESVALUE;
        END IF;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END OBTENERVALORITEMLISTA;

    




























    FUNCTION FNUOBTENERVALORITEM
    (
        INUORDERID     IN  OR_ORDER.ORDER_ID%TYPE,
        INUITEMID      IN  GE_ITEMS.ITEMS_ID%TYPE,
        ISBCAMPO       IN  VARCHAR2,
        IDTDATE        IN  OR_ORDER.LEGALIZATION_DATE%TYPE DEFAULT NULL
    )
    RETURN GE_UNIT_COST_ITE_LIS.PRICE%TYPE
    IS
        NUPRICELISTID GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE;
        NUVALUE       GE_UNIT_COST_ITE_LIS.PRICE%TYPE;
    BEGIN
        OBTENERVALORITEMLISTA(INUORDERID,
                              INUITEMID,
                              ISBCAMPO,
                              NUPRICELISTID,
                              NUVALUE,
                              IDTDATE);
        RETURN NUVALUE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUOBTENERVALORITEM;
    
    














    PROCEDURE VALIDARACTUALIZARLISTA
    (
        INUIDLISTA  IN  GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE
    )
    IS
        RCDETALLEACTA   DAGE_DETALLE_ACTA.STYGE_DETALLE_ACTA;
    BEGIN
        UT_TRACE.TRACE('BEGIN GE_BOCertContratista.ValidarActualizarLista', 2);
        
        UT_TRACE.TRACE('Parï¿½metro: inuIdLista -> ' || INUIDLISTA, 3);
    
        IF GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS%ISOPEN THEN
            CLOSE GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS;
        END IF;
    
        
        OPEN GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS(INUIDLISTA);
        FETCH GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS INTO RCDETALLEACTA;
        CLOSE GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS;
        
        
        IF RCDETALLEACTA.ID_DETALLE_ACTA IS NOT NULL THEN
            ERRORS.SETERROR(9561, INUIDLISTA);
            RAISE EX.CONTROLLED_ERROR;
        END IF;
        
        UT_TRACE.TRACE('END GE_BOCertContratista.ValidarActualizarLista', 2);
    
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR GE_BOCertContratista.ValidarActualizarLista', 2);
            IF GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS%ISOPEN THEN
                CLOSE GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS;
            END IF;
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('others GE_BOCertContratista.ValidarActualizarLista', 2);
            IF GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS%ISOPEN THEN
                CLOSE GE_BCDETALLE_ACTA.CUDETALLEPORLISTACOSTOS;
            END IF;
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    


















    PROCEDURE VALIDARCOMBLISTAS
    (
        INUBASEADMINISTRATIVA   IN  GE_BASE_ADMINISTRA.ID_BASE_ADMINISTRA%TYPE,
        INUCONTRATISTA          IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
        INUUNIDADOPERATIVA      IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE
    )
    IS
    BEGIN
    
        
        IF NOT OR_BCOPERATINGUNIT.FBLEXISTECOMBINACION
               (
                    INUBASEADMINISTRATIVA,
                    INUCONTRATISTA,
                    INUUNIDADOPERATIVA
               )
        THEN
        
            ERRORS.SETERROR
            (
                9741,
                NVL(TO_CHAR(INUBASEADMINISTRATIVA), 'NULL' )
                ||'|'
                ||NVL(TO_CHAR(INUCONTRATISTA),'NULL')
                ||'|'
                ||NVL(TO_CHAR(INUUNIDADOPERATIVA),'NULL')
            );
            RAISE EX.CONTROLLED_ERROR;
            
        END IF;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    





















    PROCEDURE CONSULORDMODIFPORACTFEC
    (
        INUIDACTA       IN  GE_ACTA.ID_ACTA%TYPE,
        IDTFECHADESDE   IN  GE_ACTA.FECHA_INICIO%TYPE,
        IDTFECHAHASTA   IN  GE_ACTA.FECHA_FIN%TYPE,
        ORFREFCURSOR    OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
        GE_BCCERTCONTRATISTA.CONSULORDMODIFPORACTFEC(INUIDACTA,
                                                     IDTFECHADESDE,
                                                     IDTFECHAHASTA,
                                                     ORFREFCURSOR);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END CONSULORDMODIFPORACTFEC;
    
    
























    PROCEDURE OBTDATOSACTA
    (
        INUIDACTA       IN  GE_ACTA.ID_ACTA%TYPE,
        OSBACTA         OUT VARCHAR2,
        OSBBASEADMIN    OUT VARCHAR2,
        OSBCONTRATISTA  OUT VARCHAR2,
        ODTFECHAINICIO  OUT GE_ACTA.FECHA_INICIO%TYPE,
        ODTFECHAFIN     OUT GE_ACTA.FECHA_FIN%TYPE
    )
    IS
        INUIDBASEADMIN   GE_BASE_ADMINISTRA.ID_BASE_ADMINISTRA%TYPE;
        INUIDCONTRATISTA GE_CONTRATISTA.ID_CONTRATISTA%TYPE;
        INUIDCONTRATO    GE_CONTRATO.ID_CONTRATO%TYPE;
    BEGIN
        OSBACTA := INUIDACTA || ' - ' || DAGE_ACTA.FSBGETNOMBRE(INUIDACTA);
        
        INUIDBASEADMIN := DAGE_ACTA.FNUGETID_BASE_ADMINISTRATIVA(INUIDACTA);
        IF(INUIDBASEADMIN IS NULL)THEN
          OSBBASEADMIN := GE_BOCONSTANTS.CSBNULLSB;
        ELSE
          OSBBASEADMIN := INUIDBASEADMIN || ' - ' || DAGE_BASE_ADMINISTRA.FSBGETDESCRIPCION(INUIDBASEADMIN);
        END IF ;
        
        INUIDCONTRATO := DAGE_ACTA.FNUGETID_CONTRATO(INUIDACTA);
        
        IF(INUIDCONTRATO IS NULL)THEN
            OSBCONTRATISTA :=  GE_BOCONSTANTS.CSBNULLSB;
        ELSE
            INUIDCONTRATISTA := DAGE_CONTRATO.FNUGETID_CONTRATISTA(INUIDCONTRATO);
            OSBCONTRATISTA := INUIDCONTRATISTA || ' - ' || DAGE_CONTRATISTA.FSBGETNOMBRE_CONTRATISTA(INUIDCONTRATISTA);
        END IF;
        
        ODTFECHAINICIO := DAGE_ACTA.FDTGETFECHA_INICIO(INUIDACTA);
        ODTFECHAFIN := DAGE_ACTA.FDTGETFECHA_FIN(INUIDACTA);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END OBTDATOSACTA;

    

















    PROCEDURE CREARORDENAJUSTE
    (
        INUORDERID            IN  OR_ORDER.ORDER_ID%TYPE,
        ONUADJORDERID         OUT OR_ORDER.ORDER_ID%TYPE
    )
    IS
        TBADJUSTEDITEMS OR_BCADJUSTMENTORDER.TYTBADJUSTEDITEMS;
    BEGIN
        OR_BOADJUSTMENTORDER.GETADJITEMFROMCERT(INUORDERID,
                                                TBADJUSTEDITEMS);
        
        IF (TBADJUSTEDITEMS.COUNT > 0) THEN
            
            OR_BOADJUSTMENTORDER.CREATEORDER(INUORDERID,
                                             TBADJUSTEDITEMS,
                                             ONUADJORDERID);
                                         
            OR_BCADJUSTMENTORDER.DELADJITEMFROMCERT(INUORDERID);
        END IF;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END CREARORDENAJUSTE;
    
    















    FUNCTION FNUGETGEOLOCATIONBYADDRESS
    (
        INUADDRESSID        IN      OR_ORDER.EXTERNAL_ADDRESS_ID%TYPE
    )
    RETURN GE_GEOGRA_LOCATION.GEOGRAP_LOCATION_ID%TYPE
    IS
    BEGIN

        
        IF(INUADDRESSID IS NULL) THEN
            RETURN NULL;
        
        ELSE
            RETURN DAAB_ADDRESS.FNUGETGEOGRAP_LOCATION_ID(INUADDRESSID);
        END IF;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETGEOLOCATIONBYADDRESS;
END GE_BOCERTCONTRATISTA;