
CREATE OR REPLACE PACKAGE BODY GE_BOHOST IS
   CSBVERSION CONSTANT VARCHAR2( 250 ) := 'SAO91700';
   CNUNOT_FOUND CONSTANT NUMBER( 4 ) := 463;
   CNUMANY_RECORDS CONSTANT NUMBER( 4 ) := 464;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   FUNCTION FNUGETHOSTIDBYNAME
    RETURN NUMBER
    IS
      NURECORDS PLS_INTEGER;
      NUHOSTID GE_HOST.HOST_ID%TYPE;
      SBHOSTNAME GE_HOST.HOST_NAME%TYPE;
    BEGIN
      SBHOSTNAME := UT_SESSION.GETMACHINE;
      IF SUBSTR( SBHOSTNAME, LENGTH( SBHOSTNAME ), 1 ) = CHR( 0 ) THEN
         SBHOSTNAME := SUBSTR( SBHOSTNAME, 1, LENGTH( SBHOSTNAME ) - 1 );
      END IF;
      NURECORDS := 0;
      FOR RCRECORD IN GE_BCHOST.CUHOSTNAME( SBHOSTNAME )
       LOOP
         NUHOSTID := RCRECORD.HOST_ID;
         NURECORDS := NURECORDS + 1;
      END LOOP;
      IF NURECORDS = 0 THEN
         ERRORS.SETERROR( CNUNOT_FOUND, SBHOSTNAME );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF NURECORDS > 1 THEN
         ERRORS.SETERROR( CNUMANY_RECORDS, SBHOSTNAME );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      RETURN NUHOSTID;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         IF GE_BCHOST.CUHOSTNAME%ISOPEN THEN
            CLOSE GE_BCHOST.CUHOSTNAME;
         END IF;
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         IF GE_BCHOST.CUHOSTNAME%ISOPEN THEN
            CLOSE GE_BCHOST.CUHOSTNAME;
         END IF;
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE GETHOST( ISBCRITERIA IN VARCHAR2, ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR )
    IS
    BEGIN
      ORFREFCURSOR := DAGE_HOST.FRFGETRECORDS( ISBCRITERIA );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE INSHOST( ISBHOSTNAME IN GE_HOST.HOST_NAME%TYPE, ISBDESCRIPION IN GE_HOST.DESCRIPTION%TYPE )
    IS
      RCRECORD DAGE_HOST.STYGE_HOST;
    BEGIN
      RCRECORD.HOST_ID := GE_BOSEQUENCE.FNUNEXTGE_HOST;
      RCRECORD.HOST_NAME := ISBHOSTNAME;
      RCRECORD.DESCRIPTION := ISBDESCRIPION;
      DAGE_HOST.INSRECORD( RCRECORD );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
END GE_BOHOST;
/


