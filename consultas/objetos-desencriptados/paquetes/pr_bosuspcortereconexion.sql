CREATE OR REPLACE PACKAGE BODY PR_BOSUSPCORTERECONEXION IS
   CSBVERSION CONSTANT VARCHAR2( 250 ) := 'SAO160087';
   GNUESTADOSINCORTE PARAMETR.PAMENUME%TYPE;
   GBOINSTPARAMETROS BOOLEAN := FALSE;
   PROCEDURE OBTENERPARAMETROS
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicio: [PR_BOSuspCorteReconexion.ObtenerParametros]', 6 );
      IF ( GBOINSTPARAMETROS ) THEN
         UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.ObtenerParametros]', 6 );
         RETURN;
      END IF;
      GNUESTADOSINCORTE := PKGENERALPARAMETERSMGR.FNUGETNUMBERVALUE( 'EST_SERVICIO_SIN_CORTE' );
      GBOINSTPARAMETROS := TRUE;
      UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.ObtenerParametros]', 6 );
    EXCEPTION
      WHEN LOGIN_DENIED OR EX.CONTROLLED_ERROR OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.ObtenerParametros]', 6 );
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.ObtenerParametros]', 6 );
         RAISE EX.CONTROLLED_ERROR;
   END;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   FUNCTION FBOESESTADOCORTEACTIVO( INUIDESTADOCORTE IN ESTACORT.ESCOCODI%TYPE )
    RETURN BOOLEAN
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicio: [PR_BOSuspCorteReconexion.fboEsValidoParaConexion]', 5 );
      OBTENERPARAMETROS;
      UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.fboEsEstadoCorteActivo]', 5 );
      IF ( INUIDESTADOCORTE = GNUESTADOSINCORTE ) THEN
         RETURN TRUE;
       ELSE
         RETURN FALSE;
      END IF;
    EXCEPTION
      WHEN LOGIN_DENIED OR EX.CONTROLLED_ERROR OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.fboEsEstadoCorteActivo]', 5 );
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.fboEsEstadoCorteActivo]', 5 );
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE SUSPENDERPRODUCTO( INUIDPRODUCTO IN PR_PRODUCT.PRODUCT_ID%TYPE, INUIDTIPOSUSPENSION IN GE_SUSPENSION_TYPE.SUSPENSION_TYPE_ID%TYPE, INUIDESTADOCORTE IN NUMBER, INUIDORDENEXTERNA IN NUMBER, INUIDTIPOPRODUCTO IN PR_PRODUCT.PRODUCT_TYPE_ID%TYPE, IDTFECHAATENCION IN DATE, ISBEJECACTIVCAMPO IN VARCHAR2 )
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicio: [PR_BOSuspCorteReconexion.SuspenderProducto]', 5 );
      PR_BOSUSPENSION.PRODUCTSUSPEND( INUIDPRODUCTO, INUIDTIPOSUSPENSION, INUIDESTADOCORTE, INUIDORDENEXTERNA, INUIDTIPOPRODUCTO, IDTFECHAATENCION, ISBEJECACTIVCAMPO );
      UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.SuspenderProducto]', 5 );
    EXCEPTION
      WHEN LOGIN_DENIED OR EX.CONTROLLED_ERROR OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.SuspenderProducto]', 5 );
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.SuspenderProducto]', 5 );
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE RETIRARPRODUCTO( INUIDPRODUCTO IN PR_PRODUCT.PRODUCT_ID%TYPE, INUIDTIPORETIRO IN GE_RETIRE_TYPE.RETIRE_TYPE_ID%TYPE, INUIDESTADOCORTE IN NUMBER, INUIDORDENEXTERNA IN NUMBER, IDTFECHAATENCION IN DATE )
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicio: [PR_BOSuspCorteReconexion.RetirarProducto]', 5 );
      PR_BORETIRE.PRODUCTRETIREBYPAY( INUIDPRODUCTO, INUIDTIPORETIRO, INUIDESTADOCORTE, INUIDORDENEXTERNA, IDTFECHAATENCION );
      UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.RetirarProducto]', 5 );
    EXCEPTION
      WHEN LOGIN_DENIED OR EX.CONTROLLED_ERROR OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.RetirarProducto]', 5 );
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.RetirarProducto]', 5 );
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE RETIRARPRODUCTO( INUIDPRODUCTO IN PR_PRODUCT.PRODUCT_ID%TYPE, INUIDTIPORETIRO IN GE_RETIRE_TYPE.RETIRE_TYPE_ID%TYPE, IDTFECHAREGISTRO IN DATE, IDTFECHAATENCION IN DATE, INUIDMOTIVORETIRO IN MO_MOTIVE.MOTIVE_ID%TYPE )
    IS
      PROCEDURE ATENDERORDENRETIRO
       IS
         RCSUSPCONE SUSPCONE%ROWTYPE;
       BEGIN
         UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.RetirarProducto.AtenderOrdenRetiro]', 6 );
         RCSUSPCONE := PKBCSUSPCONE.FRCGETRECORDBYTYPE( INUIDPRODUCTO, PKSUSPCONNSERVICE.CSBRETIRO );
         IF ( RCSUSPCONE.SUCOIDSC IS NOT NULL ) THEN
            UT_TRACE.TRACE( 'Atendiendo Orden de Retiro en SUSPCONE [' || TO_CHAR( RCSUSPCONE.SUCOIDSC ) || ']', 7 );
            PKBCSUSPCONE.UPATTENTIONDATE( RCSUSPCONE.SUCOIDSC, NVL( IDTFECHAATENCION, UT_DATE.FDTSYSDATE ), NULL );
            PKSUSPCONNSERVICEMGR.ATTENDCOLLECTACTIVITY( RCSUSPCONE.SUCOIDSC );
          ELSE
            UT_TRACE.TRACE( 'No existe orden de retiro en SUSPCONE pendiente para el producto', 7 );
         END IF;
         UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.RetirarProducto.AtenderOrdenRetiro]', 6 );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR OR LOGIN_DENIED OR PKCONSTANTE.EXERROR_LEVEL2 THEN
            RAISE;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END ATENDERORDENRETIRO;
    BEGIN
      UT_TRACE.TRACE( 'Inicio: [PR_BOSuspCorteReconexion.RetirarProducto]', 5 );
      PR_BORETIRE.RETIREPRODUCT( INUIDPRODUCTO, INUIDTIPORETIRO, IDTFECHAREGISTRO, IDTFECHAATENCION, INUIDMOTIVORETIRO );
      ATENDERORDENRETIRO;
      UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.RetirarProducto]', 5 );
    EXCEPTION
      WHEN LOGIN_DENIED OR EX.CONTROLLED_ERROR OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.RetirarProducto]', 5 );
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.RetirarProducto]', 5 );
         RAISE EX.CONTROLLED_ERROR;
   END RETIRARPRODUCTO;
   PROCEDURE CONECTARPRODUCTO( INUIDPRODUCTO IN PR_PRODUCT.PRODUCT_ID%TYPE, INUIDTIPOSUSPENSION IN GE_SUSPENSION_TYPE.SUSPENSION_TYPE_ID%TYPE, INUIDESTADOCORTE IN NUMBER, INUIDORDENEXTERNA IN NUMBER, INUIDTIPOPRODUCTO IN PR_PRODUCT.PRODUCT_TYPE_ID%TYPE, IDTFECHAATENCION IN DATE, ISBEJECACTIVCAMPO IN VARCHAR2 )
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicio: [PR_BOSuspCorteReconexion.ConectarProducto]', 5 );
      PR_BOSUSPENSION.PRODUCTCONNECT( INUIDPRODUCTO, INUIDTIPOSUSPENSION, INUIDESTADOCORTE, INUIDORDENEXTERNA, INUIDTIPOPRODUCTO, IDTFECHAATENCION, ISBEJECACTIVCAMPO );
      UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.ConectarProducto]', 5 );
    EXCEPTION
      WHEN LOGIN_DENIED OR EX.CONTROLLED_ERROR OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.ConectarProducto]', 5 );
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.ConectarProducto]', 5 );
         RAISE EX.CONTROLLED_ERROR;
   END;
   FUNCTION FBOESVALIDOPARACONEXION( INUIDPRODUCTO IN PR_PRODUCT.PRODUCT_ID%TYPE )
    RETURN BOOLEAN
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicio: [PR_BOSuspCorteReconexion.fboEsValidoParaConexion]', 5 );
      UT_TRACE.TRACE( 'Fin: [PR_BOSuspCorteReconexion.fboEsValidoParaConexion]', 5 );
      RETURN TRUE;
    EXCEPTION
      WHEN LOGIN_DENIED OR EX.CONTROLLED_ERROR OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.fboEsValidoParaConexion]', 5 );
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         UT_TRACE.TRACE( 'Error: [PR_BOSuspCorteReconexion.fboEsValidoParaConexion]', 5 );
         RAISE EX.CONTROLLED_ERROR;
   END;
END PR_BOSUSPCORTERECONEXION;
/


