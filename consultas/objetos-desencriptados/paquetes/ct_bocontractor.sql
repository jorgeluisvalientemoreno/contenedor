PACKAGE BODY CT_BOContractor
IS





















































    
    
    
    CSBVERSION                  CONSTANT VARCHAR2(10) := 'SAO424305';

    CNUERRORSUSPENDUO            CONSTANT NUMBER(18)   :=  901076;   
    CNUERRORAVAILABUO            CONSTANT NUMBER(18)   :=  901077;   
    
    
    
    TYPE TYTBSUCUBANC IS TABLE OF SUCUBANC.SUBACODI%TYPE INDEX BY BINARY_INTEGER;
    
    
    
    
    FUNCTION FSBVERSION
    RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END FSBVERSION;

    






















    FUNCTION FBLITEMCONSIGCTRL
    (
        INUOPERUNITID  IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        INUITEMSID	   IN  GE_ITEMS.ITEMS_ID%TYPE
    )
    RETURN BOOLEAN
    IS
        NUCONTRACTORID   OR_OPERATING_UNIT.CONTRACTOR_ID%TYPE;
        NUCONTRACTID     GE_CONTRATO.ID_CONTRATO%TYPE;
        NUCONTRACTTYPEID GE_CONTRATO.ID_TIPO_CONTRATO%TYPE;
        NUCONDPLANID     CT_CONDITIONS_PLAN.CONDITIONS_PLAN_ID%TYPE;
        
        RCCONDITION      CT_BCLIQUIDATIONSUPPORT.TYFORMCONDITION;
    BEGIN
        
        NUCONTRACTORID := DAOR_OPERATING_UNIT.FNUGETCONTRACTOR_ID(INUOPERUNITID);
        
        
        IF (NUCONTRACTORID IS NULL) THEN
            RETURN FALSE;
        END IF;
        
        
        CT_BCCONTRACTOR.GETACTIVECONTRACT(NUCONTRACTORID,
                                          UT_DATE.FDTSYSDATE,
                                          NUCONTRACTID,
                                          NUCONTRACTTYPEID);
        
        
        IF (NUCONTRACTID IS NULL) THEN
            RETURN FALSE;
        END IF;
        
        
        CT_BCCONTRACT.GETCONDITIONSPLAN(NUCONTRACTID,
                                        UT_DATE.FDTSYSDATE,
                                        NUCONDPLANID);

        
        IF (NUCONDPLANID IS NULL) THEN
            CT_BCCONTRACTTYPE.GETCONDITIONSPLAN(NUCONTRACTTYPEID,
                                                UT_DATE.FDTSYSDATE,
                                                NUCONDPLANID);
        END IF;

        
        IF (NUCONDPLANID IS NULL) THEN
            RETURN FALSE;
        END IF;
        
        
        
        CT_BCCONDITIONS.GETITEMCONDBYCONPLAN(NUCONDPLANID,
                                             INUITEMSID,
                                             CT_BOCONSTANTS.FNUGETBILLINGCERTITYPE,
                                             CT_BOCONSTANTS.FSBGETITEMCONDLEVEL,
                                             RCCONDITION);

        
        IF (RCCONDITION.CONDITIONS_ID IS NOT NULL) THEN
            RETURN TRUE;
        END IF;
        
        
        
        CT_BCCONDITIONS.GETITEMCONDBYCONPLAN(NUCONDPLANID,
                                             INUITEMSID,
                                             CT_BOCONSTANTS.FNUGETBILLINGCERTITYPE,
                                             CT_BOCONSTANTS.FSBGETORDERCONDLEVEL,
                                             RCCONDITION);

        
        IF (RCCONDITION.CONDITIONS_ID IS NOT NULL) THEN
            RETURN TRUE;
        END IF;
                                             
        
        
        CT_BCCONDITIONS.GETITEMCLASSIFCONDBYCONPLAN(NUCONDPLANID,
                                                    DAGE_ITEMS.FNUGETITEM_CLASSIF_ID(INUITEMSID),
                                                    CT_BOCONSTANTS.FNUGETBILLINGCERTITYPE,
                                                    CT_BOCONSTANTS.FSBGETITEMCONDLEVEL,
                                                    RCCONDITION);

        
        IF (RCCONDITION.CONDITIONS_ID IS NOT NULL) THEN
            RETURN TRUE;
        END IF;

        
        RETURN FALSE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FBLITEMCONSIGCTRL;
    

    






















    PROCEDURE CHANGESTATUSCONTRACTOR (  INUCONTRACTORID     IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
                                        INUOPERATINGUNITID  IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
                                        INUCOMMENTTYPEID    IN  GE_ACTA.COMMENT_TYPE_ID%TYPE,
                                        ISBCOMMENT          IN  GE_ACTA.COMMENT_%TYPE,
                                        INUNEWSTATUS        IN  GE_CONTRATISTA.STATUS%TYPE)
    IS

        

         SBNEWSTATUSCONTRACTOR  GE_CONTRATISTA.STATUS%TYPE;
         SBNEWSTATUSCONTRACT    GE_CONTRATISTA.STATUS%TYPE;
         SBVALIDFORASSIGNACTUAL VARCHAR(1);
         SBVALIDFORASSIGN       VARCHAR(1);
         NUCERTIFICATETYPE      GE_ACTA.ID_TIPO_ACTA%TYPE;
         RFCONTRACTS            CONSTANTS.TYREFCURSOR;
         TBCONTRACTS            DAGE_CONTRATO.TYTBGE_CONTRATO;
         RFOPERATINGUNITS       DAOR_OPERATING_UNIT.TYREFCURSOR;
         TBOPERATINGUNITS       DAOR_OPERATING_UNIT.TYTBOR_OPERATING_UNIT;
         CNUERRORUO             NUMBER(18);
    BEGIN
        
        UT_TRACE.TRACE('INICIO CT_BOContractor.changeStatusContractor',10);

        
        
        IF INUNEWSTATUS = CT_BOCONSTANTS.FSBGETAVAILABLESTATUS THEN
            
            SBNEWSTATUSCONTRACTOR := CT_BOCONSTANTS.FSBGETAVAILABLESTATUS;
            
            SBNEWSTATUSCONTRACT := CT_BOCONSTANTS.FSBGETOPENSTATUS;
            
            SBVALIDFORASSIGN := GE_BOCONSTANTS.CSBYES;
            
            NUCERTIFICATETYPE := CT_BOCONSTANTS.FNUGETACTIVATECERTITYPE;
            
            CNUERRORUO   :=  CNUERRORAVAILABUO;
        
        ELSIF INUNEWSTATUS = CT_BOCONSTANTS.FSBGETSUSPENDSTATUS THEN
            
            SBNEWSTATUSCONTRACTOR := CT_BOCONSTANTS.FSBGETSUSPENDSTATUS;
            
            SBNEWSTATUSCONTRACT := CT_BOCONSTANTS.FSBGETSUSPENDSTATUS;
            
            SBVALIDFORASSIGN := GE_BOCONSTANTS.CSBNO;
            
            NUCERTIFICATETYPE := CT_BOCONSTANTS.FNUGETSUSPENDCERTITYPE;
             
            CNUERRORUO   :=  CNUERRORSUSPENDUO;
        END IF;


        


        IF INUOPERATINGUNITID IS NULL THEN

            

            
            CT_BCCONTRACTOR.GETOPERUNITSBYCONTRACTOR(INUCONTRACTORID,RFOPERATINGUNITS);
            FETCH RFOPERATINGUNITS BULK COLLECT INTO TBOPERATINGUNITS;
            CLOSE RFOPERATINGUNITS;


            

            IF TBOPERATINGUNITS.FIRST IS NOT NULL THEN
                FOR I IN TBOPERATINGUNITS.FIRST .. TBOPERATINGUNITS.LAST LOOP
                    DAOR_OPERATING_UNIT.UPDVALID_FOR_ASSIGN(TBOPERATINGUNITS(I).OPERATING_UNIT_ID, SBVALIDFORASSIGN);
                END LOOP;
            END IF;

            

            
            CT_BCCONTRACTOR.GETCONTRACTSBYCONTRACTOR(INUCONTRACTORID,RFCONTRACTS);
            FETCH RFCONTRACTS BULK COLLECT INTO TBCONTRACTS;
            CLOSE RFCONTRACTS;

            
            IF TBCONTRACTS.FIRST IS NOT NULL THEN
                FOR I IN TBCONTRACTS.FIRST .. TBCONTRACTS.LAST LOOP
                    IF INUNEWSTATUS = CT_BOCONSTANTS.FSBGETSUSPENDSTATUS THEN
                        IF TBCONTRACTS(I).STATUS = CT_BOCONSTANTS.FSBGETOPENSTATUS THEN
                            DAGE_CONTRATO.UPDSTATUS(TBCONTRACTS(I).ID_CONTRATO, SBNEWSTATUSCONTRACT);
                        END IF;
                    ELSIF INUNEWSTATUS = CT_BOCONSTANTS.FSBGETAVAILABLESTATUS THEN
                        IF TBCONTRACTS(I).STATUS = CT_BOCONSTANTS.FSBGETSUSPENDSTATUS THEN
                            DAGE_CONTRATO.UPDSTATUS(TBCONTRACTS(I).ID_CONTRATO, SBNEWSTATUSCONTRACT);
                        END IF;
                    END IF;
                END LOOP;
            END IF;

            
            DAGE_CONTRATISTA.UPDSTATUS(INUCONTRACTORID,SBNEWSTATUSCONTRACTOR);
        ELSE
            


            
            SBVALIDFORASSIGNACTUAL := DAOR_OPERATING_UNIT.FSBGETVALID_FOR_ASSIGN(INUOPERATINGUNITID);

            IF SBVALIDFORASSIGN != SBVALIDFORASSIGNACTUAL THEN
                DAOR_OPERATING_UNIT.UPDVALID_FOR_ASSIGN(INUOPERATINGUNITID, SBVALIDFORASSIGN);
            ELSE
                
                ERRORS.SETERROR(CNUERRORUO, INUOPERATINGUNITID );
                RAISE EX.CONTROLLED_ERROR;
            END IF;
        END IF;

        
        CT_BOCERTIFICATE.CREATESTATUSCERTICONTRACTOR(NUCERTIFICATETYPE,INUCONTRACTORID, ISBCOMMENT, INUCOMMENTTYPEID, INUOPERATINGUNITID);

        UT_TRACE.TRACE('FIN CT_BOContractor.changeStatusContractor',10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('ERROR - CONTROLLED_ERROR CT_BOContractor.changeStatusContractor',10);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('ERROR - OTHERS CT_BOContractor.changeStatusContractor',10);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END CHANGESTATUSCONTRACTOR;

    
















    FUNCTION FSBGETSTATUSCONTRACTOR ( NUCONTRACTORID   GE_CONTRATISTA.ID_CONTRATISTA%TYPE)
    RETURN GE_CONTRATISTA.STATUS%TYPE
    IS

        
        SBSTATUS  GE_CONTRATISTA.STATUS%TYPE;

    BEGIN
        
        UT_TRACE.TRACE('INICIO CT_BOContractor.fsbGetStatusContractor',10);

        SBSTATUS := DAGE_CONTRATISTA.FSBGETSTATUS(NUCONTRACTORID,0);

        UT_TRACE.TRACE('FIN CT_BOContractor.fsbGetStatusContractor',10);
        
        RETURN SBSTATUS;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('ERROR - CONTROLLED_ERROR CT_BOContractor.fsbGetStatusContractor',10);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('ERROR - OTHERS CT_BOContractor.fsbGetStatusContractor',10);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETSTATUSCONTRACTOR;
    
     














    PROCEDURE GETCONTTYPELOV
    (
        ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
        UT_TRACE.TRACE('BEGIN CT_BOContractor.GetContTypeLov', 1);

        CT_BCCONTRACTOR.GETCONTTYPELOV(ORFREFCURSOR);

        UT_TRACE.TRACE('END CT_BOContractor.GetContTypeLov', 1);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETCONTTYPELOV;

    














    PROCEDURE GETPOSITYPELOV
    (
        ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
        UT_TRACE.TRACE('BEGIN CT_BOContractor.GetPosiTypeLov', 1);

        CT_BCCONTRACTOR.GETPOSITYPELOV(ORFREFCURSOR);

        UT_TRACE.TRACE('END CT_BOContractor.GetPosiTypeLov', 1);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETPOSITYPELOV;

    














    PROCEDURE GETAUTTYPELOV
    (
        ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
        UT_TRACE.TRACE('BEGIN CT_BOContractor.GetAutTypeLov', 1);

        CT_BCCONTRACTOR.GETAUTTYPELOV(ORFREFCURSOR);

        UT_TRACE.TRACE('END CT_BOContractor.GetAutTypeLov', 1);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETAUTTYPELOV;

    
















    PROCEDURE GETENTITYTYPELOV
    (
        ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
        UT_TRACE.TRACE('[INICIO]BEGIN CT_BOContractor.GetEntityTypeLov', 1);

        
        CT_BCCONTRACTOR.GETENTITYTYPELOV(ORFREFCURSOR);

        UT_TRACE.TRACE('[FIN]BEGIN CT_BOContractor.GetEntityTypeLov', 1);

        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETENTITYTYPELOV;

    


















    PROCEDURE GETOPERUNITBYCONTRACTOR
    (
      INUCONTRACTORID IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
      ORFREFCURSOR    OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
        UT_TRACE.TRACE('[INICIO]BEGIN CT_BOContractor.GetOperUnitByContractor',1);

        
        CT_BCCONTRACTOR.GETOPERUNITBYCONTRACTOR(INUCONTRACTORID,ORFREFCURSOR);

        UT_TRACE.TRACE('[FIN]BEGIN CT_BOContractor.GetOperUnitByContractor',1);
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETOPERUNITBYCONTRACTOR;

    






























    PROCEDURE GETOPERUNITBYCONTRACTORLOV
    (
        INUCONTRACTORID    IN             GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
        IBLGETALLOPERUNIT  IN             BOOLEAN,
        ORFDATA            IN OUT NOCOPY  CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN

        UT_TRACE.TRACE('Inicio - CT_BOContractor.GetOperUnitByContractorLov',1);

         
        CT_BOCONTRSECURITY.LOADSECURITYSETTINGS(CT_BOCONSTANTS.CSBSEC_INFO_TYPE_WORK_UDT);

        IF (INUCONTRACTORID IS NOT NULL) THEN

            OPEN ORFDATA
            FOR
            SELECT /*+ INDEX(or_operating_unit idx_or_operating_unit10)*/
                   OR_OPERATING_UNIT.OPERATING_UNIT_ID ID,
                   OR_OPERATING_UNIT.NAME DESCRIPTION
            FROM   OR_OPERATING_UNIT /*+ CT_BOContractor.GetOperUnitByContractorLov SAO181031 */
            WHERE  OR_OPERATING_UNIT.CONTRACTOR_ID =  INUCONTRACTORID
            AND    CT_BOCONTRSECURITY.FNUCANMANAGEWORKUNIT(OPERATING_UNIT_ID) = 1;

         ELSIF (IBLGETALLOPERUNIT) THEN

            OPEN ORFDATA
            FOR
            SELECT /*+ INDEX(or_operating_unit idx_or_operating_unit10)*/
                   OR_OPERATING_UNIT.OPERATING_UNIT_ID ID,
                   OR_OPERATING_UNIT.NAME DESCRIPTION
            FROM   OR_OPERATING_UNIT /*+ CT_BOContractor.GetOperUnitByContractorLov SAO181031 */
            WHERE   CT_BOCONTRSECURITY.FNUCANMANAGEWORKUNIT(OPERATING_UNIT_ID) = 1;

         ELSE

            OPEN ORFDATA
            FOR
            SELECT /*+ INDEX(or_operating_unit idx_or_operating_unit10)*/
                   OR_OPERATING_UNIT.OPERATING_UNIT_ID ID,
                   OR_OPERATING_UNIT.NAME DESCRIPTION
            FROM   OR_OPERATING_UNIT /*+ CT_BOContractor.GetOperUnitByContractorLov SAO181031 */
            WHERE  OR_OPERATING_UNIT.CONTRACTOR_ID IS NOT NULL
            AND    CT_BOCONTRSECURITY.FNUCANMANAGEWORKUNIT(OPERATING_UNIT_ID) = 1;

         END IF;

         UT_TRACE.TRACE('Fin - CT_BOContractor.GetOperUnitByContractorLov',1);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETOPERUNITBYCONTRACTORLOV;
    
    



















    PROCEDURE SAVERELCONTRACTORENTIT
    (
      INUENTITYID     IN  BANCO.BANCCODI%TYPE,
      INUCONTRACTORID IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE
    )
    IS
       RCENTITYREC       BANCO%ROWTYPE;

    BEGIN
        UT_TRACE.TRACE('[INICIO]BEGIN CT_BOContractor.SaveRelContractorEntit',1);
        
        RCENTITYREC:= PKTBLBANCO.FRCGETRECORD(INUENTITYID);
        
        RCENTITYREC.BANCCONT:= INUCONTRACTORID;
        
        PKTBLBANCO.UPRECORD(RCENTITYREC);
        
        UT_TRACE.TRACE('[FIN]BEGIN CT_BOContractor.SaveRelContractorEntit',1);

        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END SAVERELCONTRACTORENTIT;
    
    




















    PROCEDURE DELRELOFFICEOPERUNITACTIV
    (
      INUENTITYID  IN BANCO.BANCCODI%TYPE
    )
    IS
      RFREFCURSOR   CONSTANTS.TYREFCURSOR;
      TBSUCUBANC    TYTBSUCUBANC;
      NUINDEXSUBANC BINARY_INTEGER;
      RCSUCUBANC    SUCUBANC%ROWTYPE;
    BEGIN
         
         CT_BCCONTRACTOR.GETRELOFFICEOPERUNITACTIV(INUENTITYID,RFREFCURSOR);

         FETCH RFREFCURSOR BULK COLLECT INTO TBSUCUBANC;
         CLOSE RFREFCURSOR;

         NUINDEXSUBANC:= TBSUCUBANC.FIRST;
         WHILE NUINDEXSUBANC IS NOT NULL LOOP

           
           RCSUCUBANC:=PKTBLSUCUBANC.FRCGETRECORD(INUENTITYID,TBSUCUBANC(NUINDEXSUBANC));

           
           RCSUCUBANC.SUBAUNTR := NULL;
           RCSUCUBANC.SUBAITEM := NULL;

           
           PKTBLSUCUBANC.UPRECORD(RCSUCUBANC);
           
          NUINDEXSUBANC := TBSUCUBANC.NEXT(NUINDEXSUBANC);
          
         END LOOP;


        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END DELRELOFFICEOPERUNITACTIV;

    



















    PROCEDURE SAVERELOFFICEOPERUNITACTIV
    (
      INUOFFICEID        IN SUCUBANC.SUBACODI%TYPE,
      INUBANCID          IN SUCUBANC.SUBABANC%TYPE,
      INUOPERATINGUNITID IN SUCUBANC.SUBAUNTR%TYPE,
      INUITEMSID         IN SUCUBANC.SUBAITEM%TYPE
    )
    IS
      RCSUCUBANC         SUCUBANC%ROWTYPE;
    BEGIN

          
          RCSUCUBANC:= PKTBLSUCUBANC.FRCGETRECORD(INUBANCID,INUOFFICEID);

          RCSUCUBANC.SUBAUNTR:= INUOPERATINGUNITID;
          RCSUCUBANC.SUBAITEM:= INUITEMSID;
          
          
          PKTBLSUCUBANC.UPRECORD(RCSUCUBANC);


        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END SAVERELOFFICEOPERUNITACTIV;

    

















    PROCEDURE GETCONTRACTOR
    (
       INUCONTRACTORID IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
       ORFREFCURSOR    OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
       
       CT_BCCONTRACTOR.GETCONTRACTOR(INUCONTRACTORID, ORFREFCURSOR);

        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETCONTRACTOR;

    


















    PROCEDURE GETCONTRACTORIDBYORDER
    (
       INUORDERID      IN   OR_ORDER.ORDER_ID%TYPE,
       ONUOPERUNIT     OUT  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
       ONUCONTRACTORID OUT  GE_CONTRATISTA.ID_CONTRATISTA%TYPE
    )
    IS
    BEGIN
        UT_TRACE.TRACE('Inicio - CT_BOContractor.GetContractorIdByOrder',1);
        
        
        ONUOPERUNIT := DAOR_ORDER.FNUGETOPERATING_UNIT_ID(INUORDERID, 0);

        
        IF (ONUOPERUNIT IS NOT NULL) THEN

            
            ONUCONTRACTORID := DAOR_OPERATING_UNIT.FNUGETCONTRACTOR_ID(ONUOPERUNIT, 0);

       END IF;
       
       UT_TRACE.TRACE('Fin - CT_BOContractor.GetContractorIdByOrder',1);

    EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETCONTRACTORIDBYORDER;
    
    

































    PROCEDURE INSCONTRACTOR
    (
       ISBCONTRCTORNAME   IN GE_CONTRATISTA.NOMBRE_CONTRATISTA%TYPE,
       ISBDESCRIPTION     IN GE_CONTRATISTA.DESCRIPCION%TYPE,
       ISBEMAIL           IN GE_CONTRATISTA.CORREO_ELECTRONICO%TYPE,
       INUTELEPHONE       IN GE_CONTRATISTA.TELEFONO%TYPE,
       ISBCONTACTNAME     IN GE_CONTRATISTA.NOMBRE_CONTACTO%TYPE,
       INUCOMPANYID       IN GE_CONTRATISTA.ID_EMPRESA%TYPE,
       INUSUBCRIPTORID    IN GE_CONTRATISTA.ID_SUSCRIPTOR%TYPE,
       INUTYPEATORIZATION IN GE_CONTRATISTA.ID_TIPOAUTORIZACION%TYPE,
       INUTAXPAYERID      IN GE_CONTRATISTA.ID_TIPOCONTRIBUYENTE%TYPE,
       ISBSTATUS          IN GE_CONTRATISTA.STATUS%TYPE,
       INUSUBSCRIBERID    IN GE_CONTRATISTA.SUBSCRIBER_ID%TYPE,
       ISBCOMMONREG       IN GE_CONTRATISTA.COMMON_REG%TYPE,
       ISBIVATAX          IN GE_CONTRATISTA.IVA_TAX%TYPE,
       ISBWHITHOLDINGTAX  IN GE_CONTRATISTA.WITHHOLDING_TAX%TYPE,
       INUPOSITIONTYPEID  IN GE_CONTRATISTA.POSITION_TYPE_ID%TYPE,
       ONUCONTRACTORID   OUT GE_CONTRATISTA.ID_CONTRATISTA%TYPE
    )
    IS
       RCCONTRACTOR       DAGE_CONTRATISTA.STYGE_CONTRATISTA;
    BEGIN
        ONUCONTRACTORID:=CT_BOSEQUENCE.FNUNEXT_GE_CONTRATISTA();

        
        RCCONTRACTOR.ID_CONTRATISTA       := ONUCONTRACTORID;
        RCCONTRACTOR.NOMBRE_CONTRATISTA   := ISBCONTRCTORNAME;
        RCCONTRACTOR.DESCRIPCION          := ISBDESCRIPTION;
        RCCONTRACTOR.CORREO_ELECTRONICO   := ISBEMAIL;
        RCCONTRACTOR.TELEFONO             := INUTELEPHONE;
        RCCONTRACTOR.NOMBRE_CONTACTO      := ISBCONTACTNAME;
        RCCONTRACTOR.ID_EMPRESA           := INUCOMPANYID;
        RCCONTRACTOR.ID_SUSCRIPTOR        := INUSUBCRIPTORID;
        RCCONTRACTOR.ID_TIPOAUTORIZACION  := INUTYPEATORIZATION;
        RCCONTRACTOR.ID_TIPOCONTRIBUYENTE := INUTAXPAYERID;
        RCCONTRACTOR.STATUS               := ISBSTATUS;
        RCCONTRACTOR.SUBSCRIBER_ID        := INUSUBSCRIBERID;
        RCCONTRACTOR.COMMON_REG           := ISBCOMMONREG;
        RCCONTRACTOR.IVA_TAX              := ISBIVATAX;
        RCCONTRACTOR.WITHHOLDING_TAX      := ISBWHITHOLDINGTAX;
        RCCONTRACTOR.POSITION_TYPE_ID     := INUPOSITIONTYPEID;

        
        DAGE_CONTRATISTA.INSRECORD(RCCONTRACTOR);

        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END INSCONTRACTOR;

    
































    PROCEDURE UPDCONTRACTOR
    (
       INUCONTRACTORID    IN GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
       ISBCONTRCTORNAME   IN GE_CONTRATISTA.NOMBRE_CONTRATISTA%TYPE,
       ISBDESCRIPTION     IN GE_CONTRATISTA.DESCRIPCION%TYPE,
       ISBEMAIL           IN GE_CONTRATISTA.CORREO_ELECTRONICO%TYPE,
       INUTELEPHONE       IN GE_CONTRATISTA.TELEFONO%TYPE,
       ISBCONTACTNAME     IN GE_CONTRATISTA.NOMBRE_CONTACTO%TYPE,
       INUCOMPANYID       IN GE_CONTRATISTA.ID_EMPRESA%TYPE,
       INUSUBCRIPTORID    IN GE_CONTRATISTA.ID_SUSCRIPTOR%TYPE,
       INUTYPEATORIZATION IN GE_CONTRATISTA.ID_TIPOAUTORIZACION%TYPE,
       INUTAXPAYERID      IN GE_CONTRATISTA.ID_TIPOCONTRIBUYENTE%TYPE,
       INUSUBSCRIBERID    IN GE_CONTRATISTA.SUBSCRIBER_ID%TYPE,
       ISBCOMMONREG       IN GE_CONTRATISTA.COMMON_REG%TYPE,
       ISBIVATAX          IN GE_CONTRATISTA.IVA_TAX%TYPE,
       ISBWHITHOLDINGTAX  IN GE_CONTRATISTA.WITHHOLDING_TAX%TYPE,
       INUPOSITIONTYPEID  IN GE_CONTRATISTA.POSITION_TYPE_ID%TYPE
    )
    IS
       RCCONTRACTOR       DAGE_CONTRATISTA.STYGE_CONTRATISTA;
    BEGIN
        
        RCCONTRACTOR:= DAGE_CONTRATISTA.FRCGETRECORD(INUCONTRACTORID);

        
        RCCONTRACTOR.NOMBRE_CONTRATISTA   := ISBCONTRCTORNAME;
        RCCONTRACTOR.DESCRIPCION          := ISBDESCRIPTION;
        RCCONTRACTOR.CORREO_ELECTRONICO   := ISBEMAIL;
        RCCONTRACTOR.TELEFONO             := INUTELEPHONE;
        RCCONTRACTOR.NOMBRE_CONTACTO      := ISBCONTACTNAME;
        RCCONTRACTOR.ID_EMPRESA           := INUCOMPANYID;
        RCCONTRACTOR.ID_SUSCRIPTOR        := INUSUBCRIPTORID;
        RCCONTRACTOR.ID_TIPOAUTORIZACION  := INUTYPEATORIZATION;
        RCCONTRACTOR.ID_TIPOCONTRIBUYENTE := INUTAXPAYERID;
        RCCONTRACTOR.SUBSCRIBER_ID        := INUSUBSCRIBERID;
        RCCONTRACTOR.COMMON_REG           := ISBCOMMONREG;
        RCCONTRACTOR.IVA_TAX              := ISBIVATAX;
        RCCONTRACTOR.WITHHOLDING_TAX      := ISBWHITHOLDINGTAX;
        RCCONTRACTOR.POSITION_TYPE_ID     := INUPOSITIONTYPEID;

        
        DAGE_CONTRATISTA.UPDRECORD(RCCONTRACTOR);

        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END UPDCONTRACTOR;

    















    PROCEDURE DELCONTRACTOR
    (
       INUCONTRACTORID  IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
       INUPROCESSID     IN  GE_TMP_MESSAGE_PROC.PROCESS_ID%TYPE,
       OSBCANDELETED    OUT VARCHAR2
    )
    IS
        SBPROCESSID            VARCHAR2(250);
        NUERRORCODE            NUMBER;
    BEGIN
        UT_TRACE.TRACE('Inicia CT_BOContractor.deleteContractor', 1);
        OSBCANDELETED := GE_BOCONSTANTS.CSBNO;
        DAGE_CONTRATISTA.DELRECORD(INUCONTRACTORID);
        OSBCANDELETED := GE_BOCONSTANTS.CSBYES;
        UT_TRACE.TRACE('Termina CT_BOContractor.deleteContractor', 1);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(NUERRORCODE,SBPROCESSID);
            GE_BOTMP_MESSAGE_PROC.INSERTINMESSAGETEMPTABLE(INUPROCESSID,
                                                       SBPROCESSID);
            GE_BCFWTMP_MESSAGE_PROC.SAVEANSWEROFPROCESS(SBPROCESSID,
                                                            -1,
                                                            NULL
                                                        );
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(NUERRORCODE,SBPROCESSID);
            GE_BOTMP_MESSAGE_PROC.INSERTINMESSAGETEMPTABLE(INUPROCESSID,
                                                       SBPROCESSID);
            GE_BCFWTMP_MESSAGE_PROC.SAVEANSWEROFPROCESS(SBPROCESSID,
                                                            -1,
                                                            NULL
                                                        );
    END DELCONTRACTOR;

    















    PROCEDURE GETSTATUSLOV
    (
       ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
         
         CT_BCCONTRACTOR.GETSTATUSLOV(ORFREFCURSOR);
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETSTATUSLOV;

    















    PROCEDURE GETENTITIES
    (
       INUCONTRACTORID  IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
       ORFREFCURSOR     OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
        
        ORFREFCURSOR:= DABANCO.FRFGETRECORDS(' banccont IS null OR banccont = ' || INUCONTRACTORID || ' ORDER BY BANCCONT');
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETENTITIES;

    
















    PROCEDURE GETOFFICEBYENT
    (
      INUENTITID   IN  BANCO.BANCCODI%TYPE,
      ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
       
       CT_BCCONTRACTOR.GETOFFICEBYENT(INUENTITID,ORFREFCURSOR);
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETOFFICEBYENT;

    
















    PROCEDURE GETCOUNTCLASSLOV
    (
        ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
       
       CT_BCCONTRACTOR.GETCOUNTCLASSLOV(ORFREFCURSOR);
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETCOUNTCLASSLOV;

    
















    FUNCTION FSBGETDEPTO
    (
        INULOCAID   IN AB_ADDRESS.GEOGRAP_LOCATION_ID%TYPE
    )
    RETURN VARCHAR2
    IS
        NUDEPTO      AB_ADDRESS.GEOGRAP_LOCATION_ID%TYPE;
    BEGIN
            NUDEPTO :=  GE_BCGEOGRA_LOCATION.FNUGETFIRSTUPPERLEVEL(INULOCAID, AB_BOCONSTANTS.FNUOBTTIPOUBICACIONDPTO);

            IF NUDEPTO IS NULL THEN
                RETURN NULL;
            END IF;

            RETURN NUDEPTO || ' - ' || DAGE_GEOGRA_LOCATION.FSBGETDESCRIPTION(NUDEPTO);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETDEPTO;

    




















    PROCEDURE GETCONTRACTSLOV
    (
        INUCONTRACTORID IN              GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
        ORFDATA         IN OUT NOCOPY   CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN

        UT_TRACE.TRACE('BEGIN CT_BOContractor.GetContractsLOV',1);

        UT_TRACE.TRACE('Param: inuContractorId -> ' || INUCONTRACTORID, 2);

        
        CT_BOCONTRSECURITY.LOADSECURITYSETTINGS(CT_BOCONSTANTS.CSBSEC_INFO_TYPE_GENERAL);

        IF (INUCONTRACTORID IS NOT NULL) THEN

            OPEN ORFDATA FOR
            SELECT  /*+ index (ge_contrato idx_ge_contrato_01)*/ ID_CONTRATO ID, DESCRIPCION DESCRIPTION
            FROM    GE_CONTRATO /*+ CT_BOContractor.GetContractsLOV SAO18198 */
            WHERE   GE_CONTRATO.ID_CONTRATISTA = INUCONTRACTORID
            AND     CT_BOCONTRSECURITY.FNUCANMANAGECONTRACT(GE_CONTRATO.ID_CONTRATO) = 1;

        ELSE

            OPEN ORFDATA FOR
            SELECT  /*+ index (ge_contrato idx_ge_contrato_01)*/ ID_CONTRATO ID, DESCRIPCION DESCRIPTION
            FROM    GE_CONTRATO /*+ CT_BOContractor.GetContractsLOV SAO18198 */
            WHERE   CT_BOCONTRSECURITY.FNUCANMANAGECONTRACT(GE_CONTRATO.ID_CONTRATO) = 1;

        END IF;

        UT_TRACE.TRACE('END CT_BOContractor.GetContractsLOV',1);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETCONTRACTSLOV;
    
    




















    PROCEDURE GETREPLEGALHLOV
    (
        INUSUBSCRIBERID     IN  GE_SUBSCRIBER.SUBSCRIBER_ID%TYPE,
        ISBDESCRIPTION      IN  VARCHAR2,
        INUIDENTIFICATION   IN  GE_SUBSCRIBER.IDENTIFICATION%TYPE,
        ORFREFCURSOR        OUT CONSTANTS.TYREFCURSOR
    )
    IS
        SBSQL            VARCHAR2(8000);
    BEGIN
        SBSQL :=
                'SELECT  ge_subscriber.subscriber_id id,'       || CHR(10) ||
                '        ge_subscriber.subscriber_name ||' ||CHR(39)|| ' ' ||CHR(39)||'|| ge_subscriber.subs_last_name Description,' || CHR(10) ||
                '        ge_subscriber.identification IDENTIFICATION' || CHR(10) ||
                'FROM    ge_subscriber' || CHR(10) ||
                'WHERE   upper(ge_subscriber.subscriber_name ||' ||CHR(39)|| ' ' ||CHR(39)||'|| ge_subscriber.subs_last_name) like ' ||CHR(39)|| '%' ||CHR(39)||' || :Description ||'||CHR(39)||'%'||CHR(39)|| ' ' || CHR(10) ||
                'AND     upper(ge_subscriber.identification) like ' ||CHR(39)|| '%' ||CHR(39)||'||  :IDENTIFICATION ||'||CHR(39)||'%'||CHR(39)|| ' ';
                
        IF INUSUBSCRIBERID IS NOT NULL THEN
            SBSQL := SBSQL || CHR(10) ||
                    'AND    ge_subscriber.subscriber_id like :id ';
            UT_TRACE.TRACE('Sentencia: '||CHR(10)||SBSQL, 5);
            OPEN ORFREFCURSOR FOR SBSQL USING ISBDESCRIPTION, INUIDENTIFICATION, INUSUBSCRIBERID;
        ELSE
            UT_TRACE.TRACE('Sentencia: '||CHR(10)||SBSQL, 5);
            OPEN ORFREFCURSOR FOR SBSQL USING ISBDESCRIPTION, INUIDENTIFICATION;
        END IF;


        
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETREPLEGALHLOV;
    
    















    PROCEDURE INACTIVATECONTRACTOR
    (
        INUCONTRACTORID     IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
        INUCOMMENTTYPEID    IN  GE_ACTA.COMMENT_TYPE_ID%TYPE,
        ISBCOMMENT          IN  GE_ACTA.COMMENT_%TYPE
    )
    IS

        

         RFOPERATINGUNITS       DAOR_OPERATING_UNIT.TYREFCURSOR;
         TBOPERATINGUNITS       DAOR_OPERATING_UNIT.TYTBOR_OPERATING_UNIT;
    BEGIN
        
        UT_TRACE.TRACE('INICIO CT_BOContractor.InactivateContractor',10);

        
        CT_BCCONTRACTOR.GETOPERUNITSBYCONTRACTOR(INUCONTRACTORID,RFOPERATINGUNITS);
        FETCH RFOPERATINGUNITS BULK COLLECT INTO TBOPERATINGUNITS;
        CLOSE RFOPERATINGUNITS;

        
        IF TBOPERATINGUNITS.FIRST IS NOT NULL THEN
            FOR I IN TBOPERATINGUNITS.FIRST .. TBOPERATINGUNITS.LAST LOOP
                DAOR_OPERATING_UNIT.UPDVALID_FOR_ASSIGN
                (
                    TBOPERATINGUNITS(I).OPERATING_UNIT_ID,
                    GE_BOCONSTANTS.CSBNO
                );
            END LOOP;
        END IF;
        
        
        DAGE_CONTRATISTA.UPDSTATUS
        (
            INUCONTRACTORID,
            CT_BOCONSTANTS.FSBGETINACTIVESTATUS
        );

        
        CT_BOCERTIFICATE.CREATESTATUSCERTICONTRACTOR
        (
            CT_BOCONSTANTS.FNUGETINACTIVATECERTITYPE,
            INUCONTRACTORID,
            ISBCOMMENT,
            INUCOMMENTTYPEID,
            NULL
        );

        UT_TRACE.TRACE('FIN CT_BOContractor.InactivateContractor',10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('ERROR - CONTROLLED_ERROR CT_BOContractor.InactivateContractor',10);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('ERROR - OTHERS CT_BOContractor.InactivateContractor',10);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INACTIVATECONTRACTOR;
    
    






















    PROCEDURE GETCONTRACTINFOBYORDER
    (
       INUORDERID       IN  OR_ORDER.ORDER_ID%TYPE,
       ONUOPERUNIT      OUT OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
       ONUCONTRACTORID  OUT GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
       ONUCONTRACTID    OUT GE_CONTRATO.ID_CONTRATO%TYPE
    )
    IS
    BEGIN
        UT_TRACE.TRACE('Inicio - CT_BOContractor.GetContractInfoByOrder',1);

        
        CT_BOCONTRACTOR.GETCONTRACTORIDBYORDER
        (
            INUORDERID,
            ONUOPERUNIT,
            ONUCONTRACTORID
        );
        
        ONUCONTRACTID := DAOR_ORDER.FNUGETDEFINED_CONTRACT_ID(INUORDERID);

       UT_TRACE.TRACE('Fin - CT_BOContractor.GetContractInfoByOrder',1);

    EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END GETCONTRACTINFOBYORDER;

    






















    PROCEDURE GETNOVCONTRACTLOV
    (
        INUCONTRACTORID     IN  GE_CONTRATISTA.ID_CONTRATISTA%TYPE,
        INUOPERATINGUNITID  IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        INUITEMSID          IN  GE_ITEMS.ITEMS_ID%TYPE,
        ORFCONTRACTS        OUT NOCOPY CONSTANTS.TYREFCURSOR
    )
    IS
        
        TBDEFCONTRACTS      CT_TYTBCONTRACTS;
        TBSECDEFCONTRACTS   CT_TYTBCONTRACTS;
        RCDEFCONTRACT       CT_TYOBCONTRACTS;

        TBCONTRACTS         DAGE_CONTRATO.TYTBGE_CONTRATO;
        NUTASKTYPE          OR_TASK_TYPE.TASK_TYPE_ID%TYPE;
        NUCONTRACTORID      GE_CONTRATISTA.ID_CONTRATISTA%TYPE;

        NUINDICE            NUMBER;
    BEGIN
        UT_TRACE.TRACE('Begin CT_BOContractor.GetNovContractLov (Contratista: '||INUCONTRACTORID||' - Unidad: '||INUOPERATINGUNITID||' - Item: '||INUITEMSID||')', 5);

        
        TBDEFCONTRACTS := CT_TYTBCONTRACTS();
        TBSECDEFCONTRACTS := CT_TYTBCONTRACTS();

        
        NUTASKTYPE := OR_BCORDERACTIVITIES.FNUGETTASKTYPEBYACTID(INUITEMSID);
        UT_TRACE.TRACE('nuTaskType ('||NUTASKTYPE||')', 5);

        IF ( INUCONTRACTORID IS NOT NULL)
        THEN
            NUCONTRACTORID := INUCONTRACTORID;
        ELSE
            IF (INUOPERATINGUNITID IS NOT NULL)
            THEN

                UT_TRACE.TRACE('Calcula contratista de la unidad ', 5);
                
                NUCONTRACTORID := DAOR_OPERATING_UNIT.FNUGETCONTRACTOR_ID(INUOPERATINGUNITID, 0);
             END IF;
        END IF;

        UT_TRACE.TRACE('Contractor: '||NUCONTRACTORID, 5);
        
        
        
        CT_BCCONTRACT.GETOPENACTIVECONTRACTS
        (
            NUCONTRACTORID,
            UT_DATE.FDTSYSDATE,
            TBCONTRACTS
        );

        
        IF TBCONTRACTS.COUNT > 0
        THEN
            UT_TRACE.TRACE('Contratos: '||TBCONTRACTS.COUNT, 5);
            
            NUINDICE := TBCONTRACTS.FIRST;

            
            
            LOOP
                EXIT WHEN NUINDICE IS NULL;

                
                IF  CT_BCCONTRACT.FBLHASCONTRACTTASKTYPES(TBCONTRACTS(NUINDICE).ID_CONTRATO)
                THEN
                    
                    IF CT_BCCONTRACT.FBLAPPLYCONTBYTASKTYPE( TBCONTRACTS(NUINDICE).ID_CONTRATO, NUTASKTYPE)
                    THEN
                        UT_TRACE.TRACE('Contrato v�lido por contrato: '||TBCONTRACTS(NUINDICE).ID_CONTRATO, 5);
                        
                        RCDEFCONTRACT := CT_TYOBCONTRACTS
                                    (
                                        TBCONTRACTS(NUINDICE).ID_CONTRATO,
                                        TBCONTRACTS(NUINDICE).DESCRIPCION
                                    );

                        
                        TBDEFCONTRACTS.EXTEND;
                        TBDEFCONTRACTS(TBDEFCONTRACTS.COUNT) :=  RCDEFCONTRACT;
                    END IF;
                
                ELSIF CT_BCCONTRACT.FBLHASCONTTYPETASKTYPES(TBCONTRACTS(NUINDICE).ID_TIPO_CONTRATO) AND
                      TBCONTRACTS(NUINDICE).STATUS != CT_BOCONSTANTS.FSBGETCLOSEDSTATUS()
                THEN
                    
                    IF CT_BCCONTRACT.FBLAPPLYCONTTYPEBYTSKTYPE(TBCONTRACTS(NUINDICE).ID_TIPO_CONTRATO,NUTASKTYPE)
                    THEN
                        UT_TRACE.TRACE('Contrato v�lido por tipo de contrato: '||TBCONTRACTS(NUINDICE).ID_CONTRATO, 5);
                        
                        RCDEFCONTRACT := CT_TYOBCONTRACTS
                                    (
                                        TBCONTRACTS(NUINDICE).ID_CONTRATO,
                                        TBCONTRACTS(NUINDICE).DESCRIPCION
                                    );

                        
                        TBDEFCONTRACTS.EXTEND;
                        TBDEFCONTRACTS(TBDEFCONTRACTS.COUNT) :=  RCDEFCONTRACT;
                    END IF;
                ELSE
                    IF ( TBDEFCONTRACTS.COUNT<=0 )
                    THEN
                        UT_TRACE.TRACE('Contrato gen�rico v�lido: '||TBCONTRACTS(NUINDICE).ID_CONTRATO, 5);
                        
                        RCDEFCONTRACT := CT_TYOBCONTRACTS
                                    (
                                        TBCONTRACTS(NUINDICE).ID_CONTRATO,
                                        TBCONTRACTS(NUINDICE).DESCRIPCION
                                    );

                        
                        TBSECDEFCONTRACTS.EXTEND;
                        TBSECDEFCONTRACTS(TBSECDEFCONTRACTS.COUNT) :=  RCDEFCONTRACT;
                    END IF;

                END IF;

                
                NUINDICE := TBCONTRACTS.NEXT(NUINDICE);
            END LOOP;
        END IF;

        IF ( TBDEFCONTRACTS.COUNT > 0 )
        THEN
            UT_TRACE.TRACE('Contratos encontrados ('||TBDEFCONTRACTS.COUNT||')', 5);
            OPEN ORFCONTRACTS FOR
            SELECT  CONTRACT_ID ID,
                    DESCRIPTION DESCRIPTION
            FROM    /*+ CT_BOContract.GetNovContractLov */
                    TABLE( CAST( TBDEFCONTRACTS AS CT_TYTBCONTRACTS ) ) A;
        ELSE
            UT_TRACE.TRACE('Contratos sec encontrados ('||TBSECDEFCONTRACTS.COUNT||')', 5);
            OPEN ORFCONTRACTS FOR
            SELECT  CONTRACT_ID ID,
                    DESCRIPTION DESCRIPTION
            FROM    /*+ CT_BOContract.GetNovContractLov */
                    TABLE( CAST( TBSECDEFCONTRACTS AS CT_TYTBCONTRACTS ) ) A;
        END IF;

        UT_TRACE.TRACE('End CT_BOContractor.GetNovContractLov', 5);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR
        THEN
            UT_TRACE.TRACE('ex.CONTROLLED_ERROR CT_BOContractor.GetNovContractLov', 5);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS
        THEN
            UT_TRACE.TRACE('OTHERS CT_BOContractor.GetNovContractLov', 5);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETNOVCONTRACTLOV;

END CT_BOCONTRACTOR;