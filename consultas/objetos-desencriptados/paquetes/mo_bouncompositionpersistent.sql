CREATE OR REPLACE PACKAGE BODY MO_BOUNCOMPOSITIONPERSISTENT IS
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE INSTANCEPERSISTENT( INUINSTANCE IN NUMBER, ISBINSTANCE IN VARCHAR2 )
    IS
      NUENTITYINDEX GE_BOINSTANCECONTROL.STYNUINDEX;
      RCENTITY GE_BOINSTANCECONTROL.TYRCENTITYSTACK;
      TBENTITYLEVEL GE_BOINSTANCECONTROL.TYTBENTITYLEVEL;
    BEGIN
      UT_TRACE.TRACE( 'InstancePersistent INICIO', 3 );
      GE_BOINSTANCECONTROL.INSTANCEENTITYLEVEL( INUINSTANCE, TBENTITYLEVEL );
      NUENTITYINDEX := TBENTITYLEVEL.FIRST;
      WHILE NUENTITYINDEX IS NOT NULL
       LOOP
         LOOP
            GE_BOINSTANCECONTROL.GETENTITY( TBENTITYLEVEL( NUENTITYINDEX ).NUENTITY, RCENTITY );
            IF RCENTITY.BLPERSISTENT = GE_BOINSTANCECONSTANTS.CNUNOT_PERSISTENT THEN
               EXIT;
            END IF;
            IF RCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUINSERT THEN
               UT_TRACE.TRACE( 'InstancePersistent InsertEntity [' || ISBINSTANCE || '][' || RCENTITY.SBGROUP || '][' || RCENTITY.SBENTITY || ']', 5 );
               GE_BOINSTANCECONTROL.INSERTENTITY( ISBINSTANCE, RCENTITY.SBGROUP, RCENTITY.SBENTITY );
               GE_BOINSTANCECONTROL.SETENTITYEVENT( ISBINSTANCE, RCENTITY.SBGROUP, RCENTITY.SBENTITY, GE_BOINSTANCECONSTANTS.CNUINSERT );
             ELSIF RCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUUPDATE THEN
               UT_TRACE.TRACE( 'InstancePersistent UpdateEntity [' || ISBINSTANCE || '][' || RCENTITY.SBGROUP || '][' || RCENTITY.SBENTITY || ']', 5 );
               GE_BOINSTANCECONTROL.UPDATEENTITY( ISBINSTANCE, RCENTITY.SBGROUP, RCENTITY.SBENTITY );
            END IF;
            EXIT;
         END LOOP;
         NUENTITYINDEX := TBENTITYLEVEL.NEXT( NUENTITYINDEX );
      END LOOP;
      UT_TRACE.TRACE( 'InstancePersistent OK', 3 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE HIERARCHYINSTANCEPERSISTENT( ISBINSTANCE IN VARCHAR2 )
    IS
      NUINSTANCEINDEX GE_BOINSTANCECONTROL.STYNUINDEX;
      SBOBJECTTYPE GE_BOINSTANCECONTROL.STYSBVALUE;
      TBINSTANCE GE_BOINSTANCECONTROL.TYTBINSTANCEHIERARCHY;
    BEGIN
      UT_TRACE.TRACE( 'InstancePersistent INICIO', 3 );
      GE_BOINSTANCECONTROL.INSTANCEHIERARCHY( ISBINSTANCE, TBINSTANCE );
      IF TBINSTANCE.COUNT = 0 THEN
         RETURN;
      END IF;
      NUINSTANCEINDEX := TBINSTANCE.FIRST;
      WHILE NUINSTANCEINDEX IS NOT NULL
       LOOP
         UT_TRACE.TRACE( 'InstancePersistent Instance [' || TBINSTANCE( NUINSTANCEINDEX ).SBINSTANCE || ']', 4 );
         GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( TBINSTANCE( NUINSTANCEINDEX ).SBINSTANCE, NULL, MO_BOUNCOMPOSITIONCONSTANTS.CSBPROCESS_ENTITY, MO_BOUNCOMPOSITIONCONSTANTS.CSBOBJECT_TYPE, SBOBJECTTYPE );
         IF TO_NUMBER( SBOBJECTTYPE ) IN ( MO_BOCONFIGURATIONCONTROL.FNUGETPACKAGEOBJECT, MO_BOCONFIGURATIONCONTROL.FNUGETMOTIVEOBJECT, MO_BOCONFIGURATIONCONTROL.FNUGETCOMPONENTOBJECT, MO_BOCONFIGURATIONCONTROL.FNUGETPROCESSOBJECT ) THEN
            INSTANCEPERSISTENT( TBINSTANCE( NUINSTANCEINDEX ).NUINSTANCE, TBINSTANCE( NUINSTANCEINDEX ).SBINSTANCE );
         END IF;
         NUINSTANCEINDEX := TBINSTANCE.NEXT( NUINSTANCEINDEX );
      END LOOP;
      UT_TRACE.TRACE( 'InstancePersistent OK', 3 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE PERSISTENT
    IS
    BEGIN
      UT_TRACE.TRACE( 'Persistent INICIO', 2 );
      HIERARCHYINSTANCEPERSISTENT( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE );
      UT_TRACE.TRACE( 'Persistent OK', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
END MO_BOUNCOMPOSITIONPERSISTENT;
/


