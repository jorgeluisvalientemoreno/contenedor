CREATE OR REPLACE PACKAGE BODY CT_BOCONSIGNMENTBILLING IS
   CSBVERSION CONSTANT VARCHAR2( 10 ) := 'SAO230779';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END FSBVERSION;
   FUNCTION FNUGETCONDPLAN( INUCONTRACT IN GE_CONTRATO.ID_CONTRATO%TYPE, INUDATE IN GE_CONTRATO.FECHA_FINAL%TYPE )
    RETURN CT_CONDITIONS_PLAN.CONDITIONS_PLAN_ID%TYPE
    IS
      NUPLANCOND CT_CONDITIONS_PLAN.CONDITIONS_PLAN_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'Inicio CT_BOConsignmentBilling.fnuGetCondPlan ', 3 );
      CT_BCCONTRACT.GETCONDITIONSPLAN( INUCONTRACT, INUDATE, NUPLANCOND );
      IF NUPLANCOND IS NULL THEN
         CT_BCCONTRACTTYPE.GETCONDITIONSPLAN( DAGE_CONTRATO.FNUGETID_TIPO_CONTRATO( INUCONTRACT ), INUDATE, NUPLANCOND );
      END IF;
      UT_TRACE.TRACE( 'Fin CT_BOConsignmentBilling.fnuGetCondPlan Plan de Condiciones: ' || NUPLANCOND, 3 );
      RETURN NUPLANCOND;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END FNUGETCONDPLAN;
   PROCEDURE CREATECONSIGMENTORDER( INUOPERATINGUNITID IN OR_ORDER.OPERATING_UNIT_ID%TYPE, ONUORDERID OUT OR_ORDER.ORDER_ID%TYPE, INUCONTRACTID IN CT_PROCESS_LOG.CONTRACT_ID%TYPE, IDTDATE IN CT_PROCESS_LOG.BREAK_DATE%TYPE )
    IS
      NUCONSIGMENTACT GE_ITEMS.ITEMS_ID%TYPE;
      NUORDERACTIVITY OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE;
      RCNEWORDER DAOR_ORDER.STYOR_ORDER;
      CNUINVALID_ITEM CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300201;
    BEGIN
      UT_TRACE.TRACE( 'Inicio CT_BOConsignmentBilling.CreateConsigmentOrder', 6 );
      NUCONSIGMENTACT := GE_BOITEMSCONSTANTS.CNUCONSIGMENTACTIVITY;
      IF ( NOT DAGE_ITEMS.FBLEXIST( NUCONSIGMENTACT ) ) OR DAGE_ITEMS.FNUGETITEM_CLASSIF_ID( NUCONSIGMENTACT ) != OR_BOORDERACTIVITIES.CNUACTIVITYTYPE THEN
         ERRORS.SETERROR( CNUINVALID_ITEM, NUCONSIGMENTACT );
         CT_BOPROCESSLOG.REGISTERPROCESSLOG( INUCONTRACTID, NULL, IDTDATE, NULL, NULL, NULL );
         UT_TRACE.TRACE( 'Fin CT_BOConsignmentBilling.CreateConsigmentOrder No Creo Órden', 6 );
         RETURN;
      END IF;
      OR_BOORDERACTIVITIES.CREATEACTIVITY( NUCONSIGMENTACT, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, INUOPERATINGUNITID, UT_DATE.FDTSYSDATE, NULL, '', FALSE, NULL, ONUORDERID, NUORDERACTIVITY, NULL, GE_BOCONSTANTS.CSBYES );
      RCNEWORDER := DAOR_ORDER.FRCGETRECORD( ONUORDERID );
      RCNEWORDER.ORDER_STATUS_ID := OR_BOCONSTANTS.CNUORDER_STAT_CLOSED;
      RCNEWORDER.ASSIGNED_DATE := UT_DATE.FDTSYSDATE;
      RCNEWORDER.EXECUTION_FINAL_DATE := UT_DATE.FDTSYSDATE;
      RCNEWORDER.LEGALIZATION_DATE := UT_DATE.FDTSYSDATE;
      RCNEWORDER.OPERATING_UNIT_ID := INUOPERATINGUNITID;
      RCNEWORDER.CAUSAL_ID := MO_BOCAUSAL.FNUGETSUCCESS;
      OR_BOORDERNUMERATOR.SETORDERNUMBER( RCNEWORDER );
      DAOR_ORDER.UPDRECORD( RCNEWORDER );
      DAOR_ORDER_ACTIVITY.UPDSTATUS( NUORDERACTIVITY, OR_BOCONSTANTS.CSBFINISHSTATUS );
      UT_TRACE.TRACE( 'Fin CT_BOConsignmentBilling.CreateConsigmentOrder Órden: ' || ONUORDERID, 6 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END CREATECONSIGMENTORDER;
   PROCEDURE PROCESSADMINBASE( INUADMINBASEID IN GE_BASE_ADMINISTRA.ID_BASE_ADMINISTRA%TYPE, INUCONTRACTYPEID IN GE_TIPO_CONTRATO.ID_TIPO_CONTRATO%TYPE, INUCONTRACTOR IN GE_CONTRATISTA.ID_CONTRATISTA%TYPE, INUCONTRACT IN GE_CONTRATO.ID_CONTRATO%TYPE, INUCONDIPLAN IN CT_CONDITIONS_PLAN.CONDITIONS_PLAN_ID%TYPE, IDTDATE IN GE_ITEMS_CONSIGNMT.INSERTION_DATE%TYPE, OBLHASORDERSTOPROC OUT BOOLEAN )
    IS
      TBOPERUNITS DAOR_OPERATING_UNIT.TYTBOPERATING_UNIT_ID;
      NUCERTIFICATE GE_ACTA.ID_ACTA%TYPE;
      TBITEMS CT_BCCONSIGNMENTBILLING.TYTBITEMS;
      NUOPERUNITINDEX BINARY_INTEGER;
      NUITEMINDEX BINARY_INTEGER;
      NUORDER OR_ORDER.ORDER_ID%TYPE;
      RCORDERITEM DAOR_ORDER_ITEMS.STYOR_ORDER_ITEMS;
      NUREAL NUMBER;
      NUAMOUNT NUMBER;
      CNUNO_ITEMS CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300200;
    BEGIN
      UT_TRACE.TRACE( 'Inicio CT_BOConsignmentBilling.ProcessadminBase', 4 );
      CT_BCCONSIGNMENTBILLING.GETOPERUNIBYBASANDCON( INUADMINBASEID, INUCONTRACTOR, TBOPERUNITS );
      NUOPERUNITINDEX := TBOPERUNITS.FIRST;
      WHILE NUOPERUNITINDEX IS NOT NULL
       LOOP
         UT_TRACE.TRACE( 'Recorriendo Unidad: ' || TBOPERUNITS( NUOPERUNITINDEX ), 5 );
         CT_BCCONSIGNMENTBILLING.GETITEMSTOBILLING( INUCONDIPLAN, TBOPERUNITS( NUOPERUNITINDEX ), IDTDATE, NVL( DAGE_CONTRATO.FNUGETDIAS_FACTURAR( INUCONTRACT ), 0 ), TBITEMS );
         IF TBITEMS.COUNT = 0 THEN
            ERRORS.SETERROR( CNUNO_ITEMS, TBOPERUNITS( NUOPERUNITINDEX ) || ' - ' || DAOR_OPERATING_UNIT.FSBGETNAME( TBOPERUNITS( NUOPERUNITINDEX ), 0 ) || '|' || INUCONTRACTOR || ' - ' || DAGE_CONTRATISTA.FSBGETNOMBRE_CONTRATISTA( INUCONTRACTOR ) );
            CT_BOPROCESSLOG.REGISTERPROCESSLOG( INUCONTRACT, NULL, IDTDATE, NULL, NULL, NULL );
            GOTO OBTSIGOPER;
         END IF;
         CREATECONSIGMENTORDER( TBOPERUNITS( NUOPERUNITINDEX ), NUORDER, INUCONTRACT, IDTDATE );
         IF NUORDER IS NULL THEN
            GOTO OBTSIGOPER;
         END IF;
         NUITEMINDEX := TBITEMS.FIRST;
         WHILE NUITEMINDEX IS NOT NULL
          LOOP
            NUAMOUNT := TBITEMS( NUITEMINDEX ).AMOUNT;
            UT_TRACE.TRACE( 'Recorriendo Item: ' || TBITEMS( NUITEMINDEX ).ITEMS_ID || ' Cantidad: ' || NUAMOUNT, 5 );
            WHILE NUAMOUNT > 0
             LOOP
               NUREAL := 0;
               IF NUAMOUNT > 999999.9999 THEN
                  GE_BOITEMSCONSIGNMT.RETIREITEMCONSIGNMT( TBOPERUNITS( NUOPERUNITINDEX ), TBITEMS( NUITEMINDEX ).ITEMS_ID, UT_DATE.FDTSYSDATE, 999999.9999, NUREAL );
                  GE_BOITEMSCARGUE.ADDITEMTOORDER( NUORDER, TBITEMS( NUITEMINDEX ).ITEMS_ID, NUREAL, 0, FALSE );
                  NUAMOUNT := NUAMOUNT - 999999.9999;
                ELSE
                  GE_BOITEMSCONSIGNMT.RETIREITEMCONSIGNMT( TBOPERUNITS( NUOPERUNITINDEX ), TBITEMS( NUITEMINDEX ).ITEMS_ID, UT_DATE.FDTSYSDATE, NUAMOUNT, NUREAL );
                  GE_BOITEMSCARGUE.ADDITEMTOORDER( NUORDER, TBITEMS( NUITEMINDEX ).ITEMS_ID, NUREAL, 0, FALSE );
                  NUAMOUNT := 0;
               END IF;
            END LOOP;
            NUITEMINDEX := TBITEMS.NEXT( NUITEMINDEX );
         END LOOP;
         CT_BCCONSIGNMENTBILLING.INSERTORDERTOPROC( NUORDER );
         COMMIT;
         IF NOT OBLHASORDERSTOPROC THEN
            OBLHASORDERSTOPROC := TRUE;
         END IF;
         <<OBTSIGOPER>>
         NUOPERUNITINDEX := TBOPERUNITS.NEXT( NUOPERUNITINDEX );
      END LOOP;
      UT_TRACE.TRACE( 'Fin CT_BOConsignmentBilling.ProcessadminBase', 4 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END PROCESSADMINBASE;
   PROCEDURE ITEMCONSIGNBILLING( INUADMINBASEID IN GE_BASE_ADMINISTRA.ID_BASE_ADMINISTRA%TYPE, INUCONTRACTYPEID IN GE_TIPO_CONTRATO.ID_TIPO_CONTRATO%TYPE, INUCONTRACTOR IN GE_CONTRATISTA.ID_CONTRATISTA%TYPE, INUCONTRACT IN GE_CONTRATO.ID_CONTRATO%TYPE )
    IS
      TBCONTRACTORS DAGE_CONTRATISTA.TYTBID_CONTRATISTA;
      TBADMINBASES DAGE_BASE_ADMINISTRA.TYTBID_BASE_ADMINISTRA;
      NUCONTRACT GE_CONTRATO.ID_CONTRATO%TYPE;
      DTDATE DATE;
      DTENDDATE GE_CONTRATO.FECHA_FINAL%TYPE;
      NUCONDIPLAN CT_CONDITIONS_PLAN.CONDITIONS_PLAN_ID%TYPE;
      NUCONINDEX BINARY_INTEGER;
      NUADMBASINDEX BINARY_INTEGER;
      TBCERTIFICATES DAGE_ACTA.TYTBID_ACTA;
      NUPERIODID GE_ACTA.ID_PERIODO%TYPE;
      TBLIQCERTIFICATES CT_BCLIQUIDATIONSUPPORT.TYTBCERTIFICATEID;
      TBBILLCERTIFICATES CT_BCLIQUIDATIONSUPPORT.TYTBCERTIFICATEID;
      TBNOADMINBASELIQCERTIFS CT_BCLIQUIDATIONSUPPORT.TYTBCERTIFICATEID;
      TBNOADMINBASEBILLCERTIFS CT_BCLIQUIDATIONSUPPORT.TYTBCERTIFICATEID;
      CNUNO_PERIOD CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300209;
      CNUNO_ORDERS CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300210;
      CNUNO_COND_PLAN CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 5782;
      BLHASORDERSTOPROC BOOLEAN;
    BEGIN
      UT_TRACE.TRACE( 'Inicio CT_BOConsignmentBilling.ItemConsignBilling', 1 );
      CT_BCCONSIGNMENTBILLING.GETCONTRACTORS( INUADMINBASEID, INUCONTRACTYPEID, INUCONTRACTOR, INUCONTRACT, TBCONTRACTORS );
      NUCONINDEX := TBCONTRACTORS.FIRST;
      WHILE NUCONINDEX IS NOT NULL
       LOOP
         UT_TRACE.TRACE( 'Recorriendo Contratista: ' || TBCONTRACTORS( NUCONINDEX ), 2 );
         IF INUCONTRACT IS NOT NULL THEN
            NUCONTRACT := INUCONTRACT;
          ELSE
            NUCONTRACT := CT_BCCONSIGNMENTBILLING.FNUCONTRACTACTIVE( TBCONTRACTORS( NUCONINDEX ), UT_DATE.FDTSYSDATE );
            IF NUCONTRACT IS NULL THEN
               GOTO OBTSIG;
            END IF;
         END IF;
         DTDATE := UT_DATE.FDTSYSDATE;
         DTENDDATE := DAGE_CONTRATO.FDTGETFECHA_FINAL( NUCONTRACT );
         IF DTENDDATE <= DTDATE THEN
            DTDATE := DTENDDATE;
         END IF;
         NUCONDIPLAN := FNUGETCONDPLAN( NUCONTRACT, DTDATE );
         IF NUCONDIPLAN IS NULL THEN
            ERRORS.SETERROR( CNUNO_COND_PLAN, TO_CHAR( NUCONTRACT ) || ' - ' || DAGE_CONTRATO.FSBGETDESCRIPCION( NUCONTRACT, 0 ) || '|' || DAGE_CONTRATO.FNUGETID_TIPO_CONTRATO( NUCONTRACT, 0 ) || ' - ' || DAGE_TIPO_CONTRATO.FSBGETDESCRIPCION( DAGE_CONTRATO.FNUGETID_TIPO_CONTRATO( NUCONTRACT, 0 ), 0 ) || '|' || DTDATE );
            CT_BOPROCESSLOG.REGISTERPROCESSLOG( NUCONTRACT, NULL, DTDATE, NULL, NULL, NULL );
            GOTO OBTSIG;
         END IF;
         CT_BCCONSIGNMENTBILLING.GETADMINBASESBYCONT( INUADMINBASEID, TBCONTRACTORS( NUCONINDEX ), TBADMINBASES );
         NUADMBASINDEX := TBADMINBASES.FIRST;
         CT_BCLIQUIDATIONSUPPORT.CLEARTMPORDERSTABLE;
         BLHASORDERSTOPROC := FALSE;
         WHILE NUADMBASINDEX IS NOT NULL
          LOOP
            UT_TRACE.TRACE( 'Recorriendo Base: ' || TBADMINBASES( NUADMBASINDEX ), 3 );
            PROCESSADMINBASE( TBADMINBASES( NUADMBASINDEX ), INUCONTRACTYPEID, TBCONTRACTORS( NUCONINDEX ), NUCONTRACT, NUCONDIPLAN, DTDATE, BLHASORDERSTOPROC );
            NUADMBASINDEX := TBADMINBASES.NEXT( NUADMBASINDEX );
         END LOOP;
         IF INUCONTRACT IS NULL THEN
            GE_BCPERIODOCERTIFICACION.OBTPERIODO( DTDATE, NUPERIODID );
            IF NUPERIODID IS NOT NULL AND BLHASORDERSTOPROC THEN
               CT_BOLIQUIDATIONPROCESS.GENERATECONTRACTOBLIG( NUPERIODID, NUCONTRACT, NULL, DTDATE, TBNOADMINBASELIQCERTIFS, TBNOADMINBASEBILLCERTIFS, TBLIQCERTIFICATES, TBBILLCERTIFICATES, FALSE, TBCERTIFICATES );
             ELSE
               IF NUPERIODID IS NULL THEN
                  ERRORS.SETERROR( CNUNO_PERIOD, UT_DATE.FSBSTR_DATE( DTDATE ) );
                  CT_BOPROCESSLOG.REGISTERPROCESSLOG( NUCONTRACT, NULL, DTDATE, NULL, NULL, NULL );
               END IF;
               IF NOT BLHASORDERSTOPROC THEN
                  ERRORS.SETERROR( CNUNO_ORDERS, INUCONTRACTOR || ' - ' || DAGE_CONTRATISTA.FSBGETNOMBRE_CONTRATISTA( INUCONTRACTOR ) );
                  CT_BOPROCESSLOG.REGISTERPROCESSLOG( NUCONTRACT, NULL, DTDATE, NULL, NULL, NULL );
               END IF;
            END IF;
            TBCERTIFICATES.DELETE;
         END IF;
         <<OBTSIG>>
         NUCONINDEX := TBCONTRACTORS.NEXT( NUCONINDEX );
      END LOOP;
      UT_TRACE.TRACE( 'Fin CT_BOConsignmentBilling.ItemConsignBilling', 1 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END ITEMCONSIGNBILLING;
   PROCEDURE ITEMCONSIGNBILLINGBYCON( INUCONTRACT IN GE_CONTRATO.ID_CONTRATO%TYPE )
    IS
    BEGIN
      ITEMCONSIGNBILLING( NULL, NULL, NULL, INUCONTRACT );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END ITEMCONSIGNBILLINGBYCON;
   PROCEDURE ITEMCONSIGNBILLING( INUADMINBASEID IN GE_BASE_ADMINISTRA.ID_BASE_ADMINISTRA%TYPE, INUCONTRACTYPEID IN GE_TIPO_CONTRATO.ID_TIPO_CONTRATO%TYPE, INUCONTRACTOR IN GE_CONTRATISTA.ID_CONTRATISTA%TYPE )
    IS
    BEGIN
      ITEMCONSIGNBILLING( INUADMINBASEID, INUCONTRACTYPEID, INUCONTRACTOR, NULL );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END ITEMCONSIGNBILLING;
END CT_BOCONSIGNMENTBILLING;
/


