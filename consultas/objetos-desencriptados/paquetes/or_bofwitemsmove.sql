PACKAGE BODY OR_BOFWItemsMove
IS















































































    
    
    
    
    CSBVERSION  CONSTANT VARCHAR2(20)  := 'SAO276961';

	
	CNUMOVCAUSETRANS       CONSTANT NUMBER(2)  := GE_BOITEMSCONSTANTS.CNUMOVCAUSETRANS;
	CNUMOVCAUSEINGACEPT    CONSTANT NUMBER(2)  := GE_BOITEMSCONSTANTS.CNUMOVCAUSEINGACEPT;
	CNUMOVCAUSEINGRECHA    CONSTANT NUMBER(2)  := GE_BOITEMSCONSTANTS.CNUMOVCAUSEINGRECHA;
	CNUMOVCAUSAINGDEVOL    CONSTANT NUMBER(2)  := GE_BOITEMSCONSTANTS.CNUMOVCAUSAINGDEVOL;
	CNUMOVCAUSAAJUSTE      CONSTANT NUMBER(2)  := GE_BOITEMSCONSTANTS.CNUMOVCAUSAAJUSTE;

    
    CNUNOITEMERROR          CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 4864;
    CNUSAMEOPUNITERROR      CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 4887;

    CNUERROR_ITEM_GROUP     CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300172;
    
    CNUERROR_NOT_ITEM_OPER_UNIT CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 903242;
    CNUBALANCEQUOTAERROR    CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 111943;
    
    
    
    
    TBELEMENTS      DAOR_OPER_UNIT_ELEMENT.TYTBELEMENT_ID;
    TBELEMENTSEMPTY DAOR_OPER_UNIT_ELEMENT.TYTBELEMENT_ID;
    TBITEMS         TYTBTRANSFITEMS;
    TBITEMSEMPTY    TYTBTRANSFITEMS;
    
    
    
    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;






    FUNCTION FSBGETBALANCE
    (
        INUITEMID       IN OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUTARGETID     IN OR_UNI_ITEM_BALA_MOV.TARGET_OPER_UNIT_ID%TYPE
    )
    RETURN NUMBER
    IS
        NUVALOR         NUMBER;
    BEGIN
        IF DAOR_OPE_UNI_ITEM_BALA.FBLEXIST(INUITEMID, INUTARGETID) THEN
            NUVALOR := DAOR_OPE_UNI_ITEM_BALA.FNUGETBALANCE(INUITEMID,INUTARGETID);
        ELSE
            NUVALOR := 0;
        END IF;

        RETURN NUVALOR;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR :[OR_BOFWItemsMove.fsbGetBalance]',15);
            RAISE;

        WHEN OTHERS THEN
            ERRORS.SETERROR;
            UT_TRACE.TRACE('others :[OR_BOFWItemsMove.fsbGetBalance]',15);
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETBALANCE;

    
    PROCEDURE GETUNIITEMBALA
    (
        INUOPERATUNIID      IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        ORFITEMBALAUO       OUT CONSTANTS.TYREFCURSOR,
        INUTARGETOPERUNIT   IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE DEFAULT NULL
    )
    IS
        BOCENTROREPARACION      BOOLEAN;
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.GetUniItemBala', 7);
        
        BOCENTROREPARACION := FALSE;

        UT_TRACE.TRACE('Unidades Operativas: ['||INUOPERATUNIID||']-['||INUTARGETOPERUNIT||']', 8);
        
        DAOR_OPERATING_UNIT.ACCKEY(INUOPERATUNIID);

        
        IF (NOT INUTARGETOPERUNIT IS NULL) THEN
            DAOR_OPERATING_UNIT.ACCKEY(INUTARGETOPERUNIT);

            
            IF (DAOR_OPERATING_UNIT.FNUGETOPER_UNIT_CLASSIF_ID(INUTARGETOPERUNIT) =
                    GE_BOITEMSCONSTANTS.CNUUNID_OP_CENTRO_REPARA ) THEN 
                BOCENTROREPARACION := TRUE;
            END IF;
        END IF;

        OR_BCITEMSMOVE.GETUNIITEMBALA(INUOPERATUNIID, ORFITEMBALAUO, BOCENTROREPARACION);

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.GetUniItemBala', 7);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            GE_BOGENERALUTIL.CLOSE_REFCURSOR(ORFITEMBALAUO);
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            GE_BOGENERALUTIL.CLOSE_REFCURSOR(ORFITEMBALAUO);
            RAISE EX.CONTROLLED_ERROR;
    END;

    
    PROCEDURE GETUNIITEMBALAMOV
    (
        INUOPERATUNIID      IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        ORFITEMSTRANSUO     OUT CONSTANTS.TYREFCURSOR,
        INUDOCUMENT         IN  GE_ITEMS_DOCUMENTO.ID_ITEMS_DOCUMENTO%TYPE DEFAULT NULL
    )
    IS
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.GetUniItemBalaMov', 7);

        OR_BCITEMSMOVE.GETUNIITEMBALAMOV(INUOPERATUNIID, ORFITEMSTRANSUO, INUDOCUMENT );

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.GetUniItemBalaMov', 7);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            GE_BOGENERALUTIL.CLOSE_REFCURSOR(ORFITEMSTRANSUO);
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            GE_BOGENERALUTIL.CLOSE_REFCURSOR(ORFITEMSTRANSUO);
            RAISE EX.CONTROLLED_ERROR;
    END;

    































    PROCEDURE REGISTERITEMSTRANSLATE
    (
        INUOPERATINGUNITID      IN  OR_UNI_ITEM_BALA_MOV.OPERATING_UNIT_ID%TYPE,
        INUTARGETOPERUNITID     IN  OR_UNI_ITEM_BALA_MOV.TARGET_OPER_UNIT_ID%TYPE,
        INUIDDOCUMENTO          IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUITEMSID              IN  OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUQUANTITY             IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        ISBTRANSITO             IN  VARCHAR2 DEFAULT GE_BOCONSTANTS.CSBNO,
        INUITEMSSERIADO         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_SERIADO%TYPE DEFAULT NULL
    )
    IS
        SBMOVEMENTTYPE          OR_UNI_ITEM_BALA_MOV.MOVEMENT_TYPE%TYPE;
        NUUNIITEMBALAMOVID      OR_UNI_ITEM_BALA_MOV.UNI_ITEM_BALA_MOV_ID%TYPE;
        NUMOVVALUE              OR_UNI_ITEM_BALA_MOV.TOTAL_VALUE%TYPE;
        RCITEMSSERIADO          DAGE_ITEMS_SERIADO.STYGE_ITEMS_SERIADO;
    BEGIN
        UT_TRACE.TRACE('--[INICIO] or_boFWItemsMove.RegisterItemsTranslate', 8);
        
        DAOR_OPERATING_UNIT.ACCKEY(INUOPERATINGUNITID);
        DAOR_OPERATING_UNIT.ACCKEY(INUTARGETOPERUNITID);

        
        DAGE_ITEMS_DOCUMENTO.ACCKEY(INUIDDOCUMENTO);

        
        DAGE_ITEMS.ACCKEY(INUITEMSID);

        
        IF (NOT INUITEMSSERIADO IS NULL) THEN
            DAGE_ITEMS_SERIADO.ACCKEY(INUITEMSSERIADO);
            RCITEMSSERIADO := DAGE_ITEMS_SERIADO.FRCGETRECORD(INUITEMSSERIADO);
        END IF;

        
        OR_BCOPERUNITITEMS.BLOCKREGBYITEMUNIT(INUITEMSID, INUOPERATINGUNITID);

        
        OR_BCOPERUNITITEMS.BLOCKREGBYITEMUNIT(INUITEMSID, INUTARGETOPERUNITID);

        
        SBMOVEMENTTYPE  :=  OR_BOITEMSMOVE.CSBDECREASEMOVETYPE;
        NUMOVVALUE      :=  NULL;

        OR_BOITEMSMOVE.REGISTERITEMSMOVE
        (
            INUOPERATINGUNITID,     
            INUTARGETOPERUNITID,    
            INUITEMSID,
            RCITEMSSERIADO,
            SBMOVEMENTTYPE,         
            CNUMOVCAUSETRANS,
            INUIDDOCUMENTO,
            INUQUANTITY,
            NUMOVVALUE,             
            0,                      
            NULL,
            NUUNIITEMBALAMOVID
        );

        UT_TRACE.TRACE('Movimiento Salida: ['|| NUUNIITEMBALAMOVID ||']', 9);

        
        IF ( ISBTRANSITO = GE_BOCONSTANTS.CSBYES ) THEN
            SBMOVEMENTTYPE := OR_BOITEMSMOVE.CSBNEUTRALMOVETYPE;
        ELSE
            SBMOVEMENTTYPE := OR_BOITEMSMOVE.CSBINCREASEMOVETYPE;
        END IF;

        
        NUMOVVALUE := DAOR_UNI_ITEM_BALA_MOV.FNUGETTOTAL_VALUE(NUUNIITEMBALAMOVID,0);

        OR_BOITEMSMOVE.REGISTERITEMSMOVE
        (
            INUTARGETOPERUNITID,    
            INUOPERATINGUNITID,     
            INUITEMSID,
            RCITEMSSERIADO,
            SBMOVEMENTTYPE,         
            CNUMOVCAUSETRANS,
            INUIDDOCUMENTO,
            INUQUANTITY,
            NUMOVVALUE,             
            0,                      
            NULL,
            NUUNIITEMBALAMOVID
        );

        UT_TRACE.TRACE('Movimiento Entrada: ['|| NUUNIITEMBALAMOVID ||']', 9);
        
        
        IF ( RCITEMSSERIADO.ID_ITEMS_SERIADO IS NOT NULL ) THEN
            IF_BOPREVMAINTENANCE.UPDATESERIALITEM( RCITEMSSERIADO.ID_ITEMS_SERIADO,RCITEMSSERIADO.ITEMS_ID);
        END IF;

        UT_TRACE.TRACE('--[FIN] or_boItemsMove.RegisterItemsTranslate', 8);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    

























    PROCEDURE TOMOVE
    (
        INUOPERATINGUNITID      IN  OR_UNI_ITEM_BALA_MOV.OPERATING_UNIT_ID%TYPE,
        INUTARGETOPERUNITID     IN  OR_UNI_ITEM_BALA_MOV.TARGET_OPER_UNIT_ID%TYPE,
        INUIDDOCUMENTO          IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUITEMSID              IN  OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUQUANTITY             IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        ISBTRANSITO             IN  VARCHAR2 DEFAULT 'N',
        INUITEMSSERIADO         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_SERIADO%TYPE DEFAULT NULL,
        ONUERRORCODE            OUT NUMBER,
        OSBERRORMESSAGE         OUT VARCHAR2
    )
    IS
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.ToMove', 7);
        
        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);

        SAVEPOINT SP_MOVE;

        REGISTERITEMSTRANSLATE
        (
            INUOPERATINGUNITID,
            INUTARGETOPERUNITID,
            INUIDDOCUMENTO,
            INUITEMSID,
            INUQUANTITY,
            ISBTRANSITO,
            INUITEMSSERIADO
        );

        UT_TRACE.TRACE(' Procesado: ['||INUITEMSID||'] - Origin: ['
            || INUOPERATINGUNITID || '] - Destino: ['
            || INUTARGETOPERUNITID || '] - Documento: ['
            || INUIDDOCUMENTO || '] - Cantidad: ['
            || INUQUANTITY || '] - Item Seriado: ['
            || INUITEMSSERIADO || ']', 8);

        
        IF (INUITEMSSERIADO IS NOT NULL) THEN
            GE_BOITEMSSERIADO.TRANSLATEITEMSERIADO(INUITEMSSERIADO,INUOPERATINGUNITID, INUTARGETOPERUNITID, ISBTRANSITO);
        END IF;

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToMove', 7);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ROLLBACK TO SP_MOVE;
			ERRORS.GETERROR(ONUERRORCODE,OSBERRORMESSAGE);
			UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToMove EXCEPTION: CONTROLLED_ERROR ', 7);
		WHEN OTHERS THEN
    		ROLLBACK TO SP_MOVE;
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE,OSBERRORMESSAGE);
			UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToMove EXCEPTION: OTHERS_ERROR ', 7);
    END;

    





























    PROCEDURE MOVEITEM
    (
        INUOPERATINGUNITID      IN  OR_UNI_ITEM_BALA_MOV.OPERATING_UNIT_ID%TYPE,
        INUTARGETOPERUNITID     IN  OR_UNI_ITEM_BALA_MOV.TARGET_OPER_UNIT_ID%TYPE,
        INUIDDOCUMENTO          IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUITEMSID              IN  OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUQUANTITY             IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        ISBTRANSITO             IN  VARCHAR2 DEFAULT GE_BOCONSTANTS.CSBNO ,
        INUITEMSSERIADO         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_SERIADO%TYPE DEFAULT NULL
    )
    IS
        NUERRORCODE         NUMBER;
        SBERRORMESSAGE      VARCHAR2(4000);
        RCOROPEUNIITEMBALA  DAOR_OPE_UNI_ITEM_BALA.STYOR_OPE_UNI_ITEM_BALA;
        NUNEWBALANCE        OR_OPE_UNI_ITEM_BALA.BALANCE%TYPE;
        NUTOTALQUOTA        OR_OPE_UNI_ITEM_BALA.QUOTA%TYPE;

    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.MoveItem', 6);
        
        IF NOT DAOR_OPE_UNI_ITEM_BALA.FBLEXIST(INUITEMSID, INUTARGETOPERUNITID) THEN
            ERRORS.SETERROR(CNUERROR_NOT_ITEM_OPER_UNIT, INUTARGETOPERUNITID||'|'||INUITEMSID);
            RAISE EX.CONTROLLED_ERROR;
        END IF;

        
        RCOROPEUNIITEMBALA := DAOR_OPE_UNI_ITEM_BALA.FRCGETRECORD(INUITEMSID,INUTARGETOPERUNITID);
        NUNEWBALANCE := RCOROPEUNIITEMBALA.BALANCE + INUQUANTITY;
        NUTOTALQUOTA := RCOROPEUNIITEMBALA.QUOTA + RCOROPEUNIITEMBALA.OCCACIONAL_QUOTA;
        
         
        IF NUNEWBALANCE > NUTOTALQUOTA THEN
             
             ERRORS.SETERROR(CNUBALANCEQUOTAERROR, INUTARGETOPERUNITID||'|'||INUITEMSID);
             RAISE EX.CONTROLLED_ERROR;
         END IF;


        TOMOVE
        (
            INUOPERATINGUNITID,
            INUTARGETOPERUNITID,
            INUIDDOCUMENTO,
            INUITEMSID,
            INUQUANTITY,
            ISBTRANSITO,
            INUITEMSSERIADO,
            NUERRORCODE,
            SBERRORMESSAGE
        );

        
        
        GE_BCFWTMP_MESSAGE_PROC.SAVEANSWEROFPROCESS
        (
            TO_CHAR(INUITEMSID),
            NVL(NUERRORCODE, GE_BOCONSTANTS.CNUSUCCESS),
            SBERRORMESSAGE
        );
        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.MoveItem', 6);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END MOVEITEM;
    
    
    

























    PROCEDURE TOMOVEBYAPI
    (
        INUOPERATINGUNITID      IN  OR_UNI_ITEM_BALA_MOV.OPERATING_UNIT_ID%TYPE,
        INUTARGETOPERUNITID     IN  OR_UNI_ITEM_BALA_MOV.TARGET_OPER_UNIT_ID%TYPE,
        INUIDDOCUMENTO          IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUITEMSID              IN  OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUQUANTITY             IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        ISBTRANSITO             IN  VARCHAR2 DEFAULT 'N',
        INUITEMSSERIADO         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_SERIADO%TYPE DEFAULT NULL
    )
    IS
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.ToMovebyAPI', 7);

        REGISTERITEMSTRANSLATE
        (
            INUOPERATINGUNITID,
            INUTARGETOPERUNITID,
            INUIDDOCUMENTO,
            INUITEMSID,
            INUQUANTITY,
            ISBTRANSITO,
            INUITEMSSERIADO
        );

        UT_TRACE.TRACE(' Procesado: ['||INUITEMSID||'] - Origin: ['
            || INUOPERATINGUNITID || '] - Destino: ['
            || INUTARGETOPERUNITID || '] - Documento: ['
            || INUIDDOCUMENTO || '] - Cantidad: ['
            || INUQUANTITY || '] - Item Seriado: ['
            || INUITEMSSERIADO || ']', 8);

        
        IF (INUITEMSSERIADO IS NOT NULL) THEN
            GE_BOITEMSSERIADO.TRANSLATEITEMSERIADO
            (
                INUITEMSSERIADO,
                INUOPERATINGUNITID,
                INUTARGETOPERUNITID,
                ISBTRANSITO
            );
        END IF;

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToMovebyAPI', 7);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END TOMOVEBYAPI;
    
    























    PROCEDURE MOVEITEMBYAPI
    (
        INUOPERATINGUNITID      IN  OR_UNI_ITEM_BALA_MOV.OPERATING_UNIT_ID%TYPE,
        INUTARGETOPERUNITID     IN  OR_UNI_ITEM_BALA_MOV.TARGET_OPER_UNIT_ID%TYPE,
        INUIDDOCUMENTO          IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUITEMSID              IN  OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUQUANTITY             IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        ISBTRANSITO             IN  VARCHAR2 DEFAULT GE_BOCONSTANTS.CSBNO ,
        INUITEMSSERIADO         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_SERIADO%TYPE DEFAULT NULL
    )
    IS
        NUERRORCODE    NUMBER;
        SBERRORMESSAGE VARCHAR2(4000);
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.MoveItemByAPI', 6);
        
        TOMOVEBYAPI
        (
            INUOPERATINGUNITID,
            INUTARGETOPERUNITID,
            INUIDDOCUMENTO,
            INUITEMSID,
            INUQUANTITY,
            ISBTRANSITO,
            INUITEMSSERIADO
        );

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.MoveItemByAPI', 6);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END MOVEITEMBYAPI;

    



















    PROCEDURE GETITEMSTRANSLATE
    (
        INUITEMSDOCUMENTOID     IN  GE_ITEMS_DOCUMENTO.ID_ITEMS_DOCUMENTO%TYPE,
        ORFCURSOR               OUT CONSTANTS.TYREFCURSOR
    )
    IS
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.GetItemsTranslate', 7);
        ORFCURSOR := OR_BCITEMSMOVE.FRFGETITEMSTRANSLATE(INUITEMSDOCUMENTOID);
        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.GetItemsTranslate', 7);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            GE_BOGENERALUTIL.CLOSE_REFCURSOR(ORFCURSOR);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            GE_BOGENERALUTIL.CLOSE_REFCURSOR(ORFCURSOR);
            RAISE EX.CONTROLLED_ERROR;
    END;

    















































    PROCEDURE TOACEPTARTRANSITO
    (
        INUITEMBALAMOVID        IN  OR_UNI_ITEM_BALA_MOV.UNI_ITEM_BALA_MOV_ID%TYPE,
        INUDOCRECEPCION         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUDOCRECLAMO           IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUACCEPTAMOUNT         IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        INURETURNAMOUNT         IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        ONUERRORCODE            OUT NUMBER,
        OSBERRORMESSAGE         OUT VARCHAR2
    )
    IS
        NUUNIITEMBALAMOVID      OR_UNI_ITEM_BALA_MOV.UNI_ITEM_BALA_MOV_ID%TYPE;
        NUINGITEMBALAMOVID      OR_UNI_ITEM_BALA_MOV.UNI_ITEM_BALA_MOV_ID%TYPE;
        RCUNIITEMBALAMOV        DAOR_UNI_ITEM_BALA_MOV.STYOR_UNI_ITEM_BALA_MOV;
        RCITEMSSERIADO          DAGE_ITEMS_SERIADO.STYGE_ITEMS_SERIADO;
        NUVALOR                 OR_UNI_ITEM_BALA_MOV.TOTAL_VALUE%TYPE;
        NUTRANSITAMOUNT         OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE;
        NUDOCRELATION           GE_ITEMS_DOC_REL.ID_ITEMS_DOC_RELACION%TYPE;
        NUVALORACCEPT           OR_UNI_ITEM_BALA_MOV.TOTAL_VALUE%TYPE;
        NUVALORRETURN           OR_UNI_ITEM_BALA_MOV.TOTAL_VALUE%TYPE;
        NUVALORTRANSITO         OR_UNI_ITEM_BALA_MOV.TOTAL_VALUE%TYPE;
        NUESTADOINV             GE_ITEMS_SERIADO.ID_ITEMS_ESTADO_INV%TYPE := NULL;

        RCCHECKREJECTMOVE       DAGE_CHECK_REJE_MOVE.STYGE_CHECK_REJE_MOVE;

    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.ToAceptarTransito', 7);
        UT_TRACE.TRACE('inuItemBalaMovId: ['||INUITEMBALAMOVID||'] '
            || 'inuDocRecepcion: ['||INUDOCRECEPCION||'] '
            || 'inuDocReclamo: ['||INUDOCRECLAMO||'] '
            || 'inuAcceptAmount: ['||INUACCEPTAMOUNT||'] '
            || 'inuReturnAmount: ['||INURETURNAMOUNT||'] ', 8);

        
        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);

        SAVEPOINT SP_ACCEPTTRAN;

        
        DAOR_UNI_ITEM_BALA_MOV.GETRECORD(INUITEMBALAMOVID, RCUNIITEMBALAMOV);

        
        NUVALOR := RCUNIITEMBALAMOV.TOTAL_VALUE / RCUNIITEMBALAMOV.AMOUNT;
        NUVALORACCEPT := 0;
        NUVALORRETURN := 0;
        NUVALORTRANSITO := 0;
        UT_TRACE.TRACE('-- Valor Unitario: ['||NUVALOR||']', 8);

        IF RCUNIITEMBALAMOV.ID_ITEMS_SERIADO IS NOT NULL THEN
            RCITEMSSERIADO := DAGE_ITEMS_SERIADO.FRCGETRECORD(RCUNIITEMBALAMOV.ID_ITEMS_SERIADO);
        END IF;

        
        IF ( (INUACCEPTAMOUNT > 0) AND (INUACCEPTAMOUNT <= RCUNIITEMBALAMOV.AMOUNT) ) THEN
            
            DAGE_ITEMS_DOCUMENTO.ACCKEY(INUDOCRECEPCION);

            
            IF (INUACCEPTAMOUNT = RCUNIITEMBALAMOV.AMOUNT) THEN
                NUVALORACCEPT := RCUNIITEMBALAMOV.TOTAL_VALUE;
            ELSE
                
                NUVALORACCEPT := NUVALOR * INUACCEPTAMOUNT;
            END IF;



            
            OR_BOITEMSMOVE.REGISTERITEMSMOVE
            (
                RCUNIITEMBALAMOV.OPERATING_UNIT_ID,     
                RCUNIITEMBALAMOV.TARGET_OPER_UNIT_ID,   
                RCUNIITEMBALAMOV.ITEMS_ID,              
                RCITEMSSERIADO,      
                OR_BOITEMSMOVE.CSBINCREASEMOVETYPE,     
                CNUMOVCAUSEINGACEPT,                    
                INUDOCRECEPCION,                        
                INUACCEPTAMOUNT,                        
                NUVALORACCEPT,                          
                0,                                      
                RCUNIITEMBALAMOV.INIT_INV_STAT_ITEMS,
                NUINGITEMBALAMOVID
            );

            
            GE_BOITEMSDOCUMENTO.RELACIONARDOCUMENTO
            (
                INUDOCRECEPCION,                        
                RCUNIITEMBALAMOV.ID_ITEMS_DOCUMENTO,    
                NUDOCRELATION
            );

            UT_TRACE.TRACE('-- Movimiento Ingreso Aceptacion: ['||NUUNIITEMBALAMOVID||']'
                || 'Relacion: ['||NUDOCRELATION||']', 8);

            
            GE_BOITEMSREQUEST.UPDREQACCEPTEDAMOUNT(
                RCUNIITEMBALAMOV.ID_ITEMS_DOCUMENTO,    
                RCUNIITEMBALAMOV.OPERATING_UNIT_ID,     
                RCUNIITEMBALAMOV.ITEMS_ID,
                INUACCEPTAMOUNT
            );

        END IF;


        
        IF ( (INURETURNAMOUNT > 0) AND (INURETURNAMOUNT <= RCUNIITEMBALAMOV.AMOUNT) ) THEN
            
            DAGE_ITEMS_DOCUMENTO.ACCKEY(INUDOCRECLAMO);

            
            IF (INURETURNAMOUNT = RCUNIITEMBALAMOV.AMOUNT) THEN
                NUVALORRETURN := RCUNIITEMBALAMOV.TOTAL_VALUE;
            ELSE
                
                NUVALORRETURN := NUVALOR * INURETURNAMOUNT;
            END IF;

            
            OR_BOITEMSMOVE.REGISTERITEMSMOVE
            (
                RCUNIITEMBALAMOV.TARGET_OPER_UNIT_ID,   
                RCUNIITEMBALAMOV.OPERATING_UNIT_ID,     
                RCUNIITEMBALAMOV.ITEMS_ID,              
                RCITEMSSERIADO,                         
                OR_BOITEMSMOVE.CSBINCREASEMOVETYPE,     
                CNUMOVCAUSEINGRECHA,                    
                INUDOCRECLAMO,                          
                INURETURNAMOUNT,                        
                NUVALORRETURN,                          
                0,                                      
                NULL,
                NUUNIITEMBALAMOVID
            );

            
            GE_BOITEMSDOCUMENTO.RELACIONARDOCUMENTO
            (
                INUDOCRECLAMO,                          
                RCUNIITEMBALAMOV.ID_ITEMS_DOCUMENTO,    
                NUDOCRELATION
            );

            UT_TRACE.TRACE('-- Movimiento Ingreso Reclamo: ['||NUUNIITEMBALAMOVID||']'
                || 'Relacion: ['||NUDOCRELATION||']', 8);

            
            GE_BOITEMSREQUEST.UPDREQREJECTEDAMOUNT(
                RCUNIITEMBALAMOV.ID_ITEMS_DOCUMENTO,    
                RCUNIITEMBALAMOV.OPERATING_UNIT_ID,     
                RCUNIITEMBALAMOV.ITEMS_ID,
                INURETURNAMOUNT
            );

            
            RCCHECKREJECTMOVE.UNI_ITEM_BALA_MOV_ID := NUUNIITEMBALAMOVID;
            RCCHECKREJECTMOVE.CHECKED := GE_BOCONSTANTS.CSBNO;
            DAGE_CHECK_REJE_MOVE.INSRECORD(RCCHECKREJECTMOVE);

        END IF;

        
        IF (RCUNIITEMBALAMOV.ID_ITEMS_SERIADO IS NOT NULL) THEN
            
            IF (NUINGITEMBALAMOVID IS NOT NULL) THEN

                
                IF (DAOR_OPERATING_UNIT.FNUGETOPER_UNIT_CLASSIF_ID(RCUNIITEMBALAMOV.OPERATING_UNIT_ID)
                    =  OR_BOCONSTANTS.CNULABORATORYCLASSIF )
                THEN

                    
                    
                    NUESTADOINV := GE_BOITEMSCONSTANTS.CNUSTATUS_EN_AISLAMIENTO;

                    
                    
                    GE_BOTECHNICALSERVICE.ASSIGNORDFOREQACCEPTED
                    (
                        RCUNIITEMBALAMOV.ID_ITEMS_SERIADO,
                        NUESTADOINV,
                        RCUNIITEMBALAMOV.OPERATING_UNIT_ID
                    );
                    
                
                ELSIF (DAOR_OPERATING_UNIT.FNUGETOPER_UNIT_CLASSIF_ID(RCUNIITEMBALAMOV.OPERATING_UNIT_ID)
                    = GE_BOITEMSCONSTANTS.CNUUNID_OP_CENTRO_REPARA) THEN

                    
                    
                    NUESTADOINV := GE_BOITEMSCONSTANTS.CNUSTATUS_EN_REPARA;

                    
                    
                    GE_BOTECHNICALSERVICE.ASSIGNORDFOREQACCEPTED
                    (
                        RCUNIITEMBALAMOV.ID_ITEMS_SERIADO,
                        NUESTADOINV,
                        RCUNIITEMBALAMOV.OPERATING_UNIT_ID
                    );
                ELSIF (DAOR_OPERATING_UNIT.FNUGETOPER_UNIT_CLASSIF_ID(RCUNIITEMBALAMOV.TARGET_OPER_UNIT_ID)
                    = GE_BOITEMSCONSTANTS.CNUUNID_OP_CENTRO_REPARA) THEN
                    
                    
                    NUESTADOINV := GE_BOITEMSCONSTANTS.CNUSTATUS_DISPONIBLE;
                END IF;

                
                GE_BOTECHNICALSERVICE.NOTIFYEQUIPMENTREADY
                (
                    RCITEMSSERIADO,
                    RCUNIITEMBALAMOV,
                    NUESTADOINV
                );

            END IF;

            DAGE_ITEMS_SERIADO.UPDID_ITEMS_ESTADO_INV(RCUNIITEMBALAMOV.ID_ITEMS_SERIADO,
                                    NVL (NUESTADOINV, RCUNIITEMBALAMOV.ID_ITEMS_ESTADO_INV));

        END IF;

        
        OR_BOITEMSMOVE.CLOSETRANSITMOVE(INUITEMBALAMOVID, NVL(INUDOCRECEPCION, INUDOCRECLAMO) );

        
        NUTRANSITAMOUNT := RCUNIITEMBALAMOV.AMOUNT - (INUACCEPTAMOUNT + INURETURNAMOUNT );
        UT_TRACE.TRACE('-- Transito: ['||NUTRANSITAMOUNT||']', 8);

        
        IF ( NUTRANSITAMOUNT > 0 ) THEN
            
            NUVALORTRANSITO :=  RCUNIITEMBALAMOV.TOTAL_VALUE -
                (NUVALORACCEPT + NUVALORRETURN);

            
            OR_BOITEMSMOVE.REGISTERITEMSMOVE
            (
                RCUNIITEMBALAMOV.OPERATING_UNIT_ID,     
                RCUNIITEMBALAMOV.TARGET_OPER_UNIT_ID,   
                RCUNIITEMBALAMOV.ITEMS_ID,              
                RCITEMSSERIADO,                         
                RCUNIITEMBALAMOV.MOVEMENT_TYPE,         
                RCUNIITEMBALAMOV.ITEM_MOVEME_CAUS_ID,   
                RCUNIITEMBALAMOV.ID_ITEMS_DOCUMENTO,    
                NUTRANSITAMOUNT,                        
                NUVALORTRANSITO,                        
                0,                                      
                NULL,
                NUUNIITEMBALAMOVID
            );

            UT_TRACE.TRACE('-- Movimiento Transito: ['||NUUNIITEMBALAMOVID||']', 8);
        END IF;
        
        
        IF ( RCITEMSSERIADO.ID_ITEMS_SERIADO IS NOT NULL ) THEN
            IF_BOPREVMAINTENANCE.UPDATESERIALITEM( RCITEMSSERIADO.ID_ITEMS_SERIADO,RCITEMSSERIADO.ITEMS_ID);
        END IF;

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToAceptarTransito', 7);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ROLLBACK TO SP_ACCEPTTRAN;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
			UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToAceptarTransito EXCEPTION: CONTROLLED_ERROR ', 7);
		WHEN OTHERS THEN
    		ROLLBACK TO SP_ACCEPTTRAN;
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
			UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToAceptarTransito EXCEPTION: OTHERS_ERROR ', 7);
    END TOACEPTARTRANSITO;


    


























    PROCEDURE ACEPTARTRANSITO
    (
        INUITEMBALAMOVID        IN  OR_UNI_ITEM_BALA_MOV.UNI_ITEM_BALA_MOV_ID%TYPE,
        INUDOCRECEPCION         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUDOCRECLAMO           IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUACCEPTAMOUNT         IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        INURETURNAMOUNT         IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE
    )
    IS
        NUERRORCODE             NUMBER;
        SBERRORMESSAGE          VARCHAR2(4000);
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.AceptarTransito', 6);

        TOACEPTARTRANSITO
        (
            INUITEMBALAMOVID,
            INUDOCRECEPCION,
            INUDOCRECLAMO,
            INUACCEPTAMOUNT,
            INURETURNAMOUNT,
            NUERRORCODE,
            SBERRORMESSAGE
        );

        
        
        GE_BCFWTMP_MESSAGE_PROC.SAVEANSWEROFPROCESS
        (
            TO_CHAR(INUITEMBALAMOVID),
            NVL(NUERRORCODE, GE_BOCONSTANTS.CNUSUCCESS),
            SBERRORMESSAGE
        );

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.AceptarTransito', 6);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    















































    PROCEDURE TOGENERARAJUSTE
    (
        INUOPERATINGUNITID      IN  OR_UNI_ITEM_BALA_MOV.OPERATING_UNIT_ID%TYPE,
        INUDOCAJUSTE            IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUITEMSID              IN  OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUQUANTITY             IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        INUTOTALVALUE           IN  OR_UNI_ITEM_BALA_MOV.TOTAL_VALUE%TYPE,
        INUITEMSSERIADO         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_SERIADO%TYPE DEFAULT NULL,
        ONUERRORCODE            OUT NUMBER,
        OSBERRORMESSAGE         OUT VARCHAR2
    )
    IS
        NUDOCUMENTTYPE          GE_ITEMS_DOCUMENTO.DOCUMENT_TYPE_ID%TYPE;
        SBMOVEMENTTYPE          OR_UNI_ITEM_BALA_MOV.MOVEMENT_TYPE%TYPE;
        NUUNIITEMBALAMOVID      OR_UNI_ITEM_BALA_MOV.UNI_ITEM_BALA_MOV_ID%TYPE;
        RCOPERUNIT              DAGE_ITEMS_SERIADO.STYGE_ITEMS_SERIADO;
        NUCAUSAL                GE_ITEMS_DOCUMENTO.CAUSAL_ID%TYPE;
        RCITEMSSERIADO          DAGE_ITEMS_SERIADO.STYGE_ITEMS_SERIADO;
        NUNEWSTATEITEM          GE_ITEMS_SERIADO.ID_ITEMS_ESTADO_INV%TYPE;
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.ToGenerarAjuste', 7);
        
        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);

        SAVEPOINT SP_AJUSTE;

        
        DAOR_OPERATING_UNIT.ACCKEY(INUOPERATINGUNITID);

        
        NUDOCUMENTTYPE := DAGE_ITEMS_DOCUMENTO.FNUGETDOCUMENT_TYPE_ID(INUDOCAJUSTE);

        
        NUCAUSAL :=  DAGE_ITEMS_DOCUMENTO.FNUGETCAUSAL_ID(INUDOCAJUSTE);

        
        DAGE_ITEMS.ACCKEY(INUITEMSID);

        
        IF (NOT INUITEMSSERIADO IS NULL) THEN
            DAGE_ITEMS_SERIADO.ACCKEY(INUITEMSSERIADO);
            RCITEMSSERIADO := DAGE_ITEMS_SERIADO.FRCGETRECORD(INUITEMSSERIADO);

            
            IF (GE_BOEMPAQUETAEQUIPOS.FSBVALIDAREMPAQUETADO(RCITEMSSERIADO.SERIE, INUITEMSSERIADO) = GE_BOCONSTANTS.CSBYES) THEN
                GE_BOERRORS.SETERRORCODEARGUMENT(CNUERROR_ITEM_GROUP,RCITEMSSERIADO.SERIE);
            END IF;
        END IF;

        
        GE_BOITEMSDOCUMENTO.GETMOVEMENTTYPEBYDOCTYPE(NUDOCUMENTTYPE, SBMOVEMENTTYPE);


        
        
        
        IF (SBMOVEMENTTYPE = OR_BOITEMSMOVE.CSBINCREASEMOVETYPE AND
            RCITEMSSERIADO.OPERATING_UNIT_ID = INUOPERATINGUNITID ) THEN
                
                
                
                GE_BOERRORS.SETERRORCODEARGUMENT(7607,RCITEMSSERIADO.SERIE||'|'||RCITEMSSERIADO.OPERATING_UNIT_ID);
        END IF;
        

        IF (INUITEMSSERIADO IS NOT NULL) THEN
            
            NUNEWSTATEITEM := GE_BOITEMSDOCUMENTO.GETNEWSTATE
                        (
                            NUDOCUMENTTYPE,
                            NUCAUSAL,
                            RCITEMSSERIADO.ID_ITEMS_ESTADO_INV
                        );
        ELSE
            NUNEWSTATEITEM := -1;
        END IF;

        
        IF (NUNEWSTATEITEM = -1) THEN
            NUNEWSTATEITEM := NVL (DAGE_ITEMS.FNUGETINIT_INV_STATUS_ID(INUITEMSID),
                     GE_BOITEMSCONSTANTS.CNUSTATUS_DISPONIBLE);
        END IF;

        OR_BOITEMSMOVE.REGISTERITEMSMOVE
        (
            INUOPERATINGUNITID,     
            INUOPERATINGUNITID,     
            INUITEMSID,
            RCITEMSSERIADO,
            SBMOVEMENTTYPE,         
            CNUMOVCAUSAAJUSTE,
            INUDOCAJUSTE,
            INUQUANTITY,
            INUTOTALVALUE,          
            0,                      
            NUNEWSTATEITEM,
            NUUNIITEMBALAMOVID
        );

        UT_TRACE.TRACE('Movimiento Ajuste: ['|| NUUNIITEMBALAMOVID ||']', 8);
        
        
        
        IF (SBMOVEMENTTYPE = OR_BOITEMSMOVE.CSBINCREASEMOVETYPE ) AND
            (NOT INUITEMSSERIADO IS NULL) THEN
            RCOPERUNIT := DAGE_ITEMS_SERIADO.FRCGETRECORD(INUITEMSSERIADO);
            RCOPERUNIT.ID_ITEMS_ESTADO_INV := NUNEWSTATEITEM;
            DAGE_ITEMS_SERIADO.UPDRECORD(RCOPERUNIT);
        END IF;
        
        
        
        IF (SBMOVEMENTTYPE = OR_BOITEMSMOVE.CSBDECREASEMOVETYPE) AND
            (NOT INUITEMSSERIADO IS NULL) THEN
            RCOPERUNIT := DAGE_ITEMS_SERIADO.FRCGETRECORD(INUITEMSSERIADO);
            RCOPERUNIT.OPERATING_UNIT_ID := NULL;
            RCOPERUNIT.ID_ITEMS_ESTADO_INV := GE_BOITEMSDOCUMENTO.GETNEWSTATE(NUDOCUMENTTYPE,NUCAUSAL, RCOPERUNIT.ID_ITEMS_ESTADO_INV);
            RCOPERUNIT.FECHA_BAJA := UT_DATE.FDTSYSDATE;

            
            IF RCOPERUNIT.ID_ITEMS_ESTADO_INV = -1 THEN
                RCOPERUNIT.ID_ITEMS_ESTADO_INV :=
                    NVL (DAGE_ITEMS.FNUGETINIT_INV_STATUS_ID(RCOPERUNIT.ITEMS_ID),
                         GE_BOITEMSCONSTANTS.CNUSTATUS_DISPONIBLE);
            END IF;

            DAGE_ITEMS_SERIADO.UPDRECORD(RCOPERUNIT);
            UT_TRACE.TRACE('Actualiza Unidad Operativa del ?tem a NULL: ['|| INUITEMSSERIADO ||']', 8);
        END IF;

        
        IF (SBMOVEMENTTYPE = OR_BOITEMSMOVE.CSBNEUTRALMOVETYPE) AND
            (NOT INUITEMSSERIADO IS NULL) THEN
            RCOPERUNIT := DAGE_ITEMS_SERIADO.FRCGETRECORD(INUITEMSSERIADO);
            RCOPERUNIT.ID_ITEMS_ESTADO_INV := GE_BOITEMSDOCUMENTO.GETNEWSTATE(NUDOCUMENTTYPE,NUCAUSAL, RCOPERUNIT.ID_ITEMS_ESTADO_INV);
            RCOPERUNIT.FECHA_BAJA := UT_DATE.FDTSYSDATE;

            
            IF RCOPERUNIT.ID_ITEMS_ESTADO_INV = -1 THEN
                RCOPERUNIT.ID_ITEMS_ESTADO_INV :=
                    NVL (DAGE_ITEMS.FNUGETINIT_INV_STATUS_ID(RCOPERUNIT.ITEMS_ID),
                         GE_BOITEMSCONSTANTS.CNUSTATUS_DISPONIBLE);
            END IF;

            DAGE_ITEMS_SERIADO.UPDRECORD(RCOPERUNIT);
            UT_TRACE.TRACE('Item Seriado: ['|| INUITEMSSERIADO ||']', 8);
        END IF;
        
        
        IF ( RCITEMSSERIADO.ID_ITEMS_SERIADO IS NOT NULL ) THEN
            IF_BOPREVMAINTENANCE.UPDATESERIALITEM( RCITEMSSERIADO.ID_ITEMS_SERIADO,RCITEMSSERIADO.ITEMS_ID);
        END IF;

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToGenerarAjuste', 7);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ROLLBACK TO SP_AJUSTE;
			ERRORS.GETERROR(ONUERRORCODE,OSBERRORMESSAGE);
			UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToGenerarAjuste EXCEPTION: CONTROLLED_ERROR ', 7);
		WHEN OTHERS THEN
    		ROLLBACK TO SP_AJUSTE;
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE,OSBERRORMESSAGE);
			UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.ToGenerarAjuste EXCEPTION: OTHERS_ERROR ', 7);
    END;


    
























    PROCEDURE GENERARAJUSTE
    (
        INUOPERATINGUNITID      IN  OR_UNI_ITEM_BALA_MOV.OPERATING_UNIT_ID%TYPE,
        INUDOCAJUSTE            IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_DOCUMENTO%TYPE,
        INUITEMSID              IN  OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUQUANTITY             IN  OR_UNI_ITEM_BALA_MOV.AMOUNT%TYPE,
        INUTOTALVALUE           IN  OR_UNI_ITEM_BALA_MOV.TOTAL_VALUE%TYPE,
        INUITEMSSERIADO         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_SERIADO%TYPE DEFAULT NULL
    )
    IS
        SBMESSAGEPROCID         GE_TMP_MESSAGE_PROC.MESSAGE_PROC_ID%TYPE;
        NUERRORCODE             NUMBER;
        SBERRORMESSAGE          VARCHAR2(4000);
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.GenerarAjuste', 6);

        TOGENERARAJUSTE
        (
            INUOPERATINGUNITID,
            INUDOCAJUSTE,
            INUITEMSID,
            INUQUANTITY,
            INUTOTALVALUE,
            INUITEMSSERIADO,
            NUERRORCODE,
            SBERRORMESSAGE
        );

        
        
        IF (INUITEMSSERIADO IS NULL) THEN
            SBMESSAGEPROCID := TO_CHAR(INUITEMSID);
        ELSE
            SBMESSAGEPROCID := TO_CHAR(INUITEMSSERIADO);
        END IF;

        
        
        GE_BCFWTMP_MESSAGE_PROC.SAVEANSWEROFPROCESS
        (
            SBMESSAGEPROCID,
            NVL(NUERRORCODE, GE_BOCONSTANTS.CNUSUCCESS),
            SBERRORMESSAGE
        );
        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.GenerarAjuste', 6);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    FUNCTION FRFGETOPERUNITELEMENTS
    RETURN CONSTANTS.TYREFCURSOR
    IS
        NUOPERATINGUNITID   OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE;
        SBOPERATING_UNIT_ID GE_BOINSTANCECONTROL.STYSBVALUE;

    
    BEGIN
        UT_TRACE.TRACE('OR_BOFWItemsMove.frfGetOperUnitElements: [Inicio]',1);

        
        SBOPERATING_UNIT_ID := GE_BOINSTANCECONTROL.FSBGETFIELDVALUE ('OR_OPER_UNIT_ELEMENT', 'OPERATING_UNIT_ID');
        NUOPERATINGUNITID := TO_NUMBER(SBOPERATING_UNIT_ID);

        UT_TRACE.TRACE('OR_BOFWItemsMove.frfGetOperUnitElements: [RETURN or_bcitemsmove.frfGetOperUnitElements(nuOperatingUnitId)]',1);
        RETURN OR_BCITEMSMOVE.FRFGETOPERUNITELEMENTS(NUOPERATINGUNITID);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FRFGETOPERUNITELEMENTS;

    PROCEDURE GETSELECTEDELEMENTS
    (
        ISBPK        IN VARCHAR2,
        INUCURRENT   IN NUMBER,
        INUTOTAL     IN NUMBER,
        ONUERRORCODE OUT GE_ERROR_LOG.MESSAGE_ID%TYPE,
        OSBERRORMESS OUT GE_ERROR_LOG.DESCRIPTION%TYPE
    )
    IS
        NUERRORCODE         NUMBER;
        SBERRORMESSAGE      VARCHAR2(4000);

        NUELEMENTID        OR_OPER_UNIT_ELEMENT.ELEMENT_ID%TYPE;
        RCOPEUNITELEMENT    DAOR_OPER_UNIT_ELEMENT.STYOR_OPER_UNIT_ELEMENT;
        NUELEMENTTYPEID     IF_ELEMENT_TYPE.ELEMENT_TYPE_ID%TYPE;
        NUCLASSID           IF_ELEMENT_CLASS.CLASS_ID%TYPE;
        NUITEMID            GE_ITEMS.ITEMS_ID%TYPE;
        SBRETRIEVED         GE_BOINSTANCECONTROL.STYSBVALUE;
        SBUSAGE             GE_BOINSTANCECONTROL.STYSBVALUE;

        SBOPERATING_UNIT_ID GE_BOINSTANCECONTROL.STYSBVALUE;
        NUSOURCEOPERUNIT    OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE;
        NUTARGETOPERUNIT    OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE;
        NUBALANCE       NUMBER;
        NUBALANCEPRICE  NUMBER;
        NUPRICEQUANTITY NUMBER;

    BEGIN
        UT_TRACE.TRACE('OR_BOFWItemsMove.getSelectedElements: [Inicio] Reg:'||INUCURRENT,1);

        
        SBOPERATING_UNIT_ID := GE_BOINSTANCECONTROL.FSBGETFIELDVALUE ('OR_OPERATING_UNIT', 'OPERATING_UNIT_ID');
        NUTARGETOPERUNIT := TO_NUMBER(SBOPERATING_UNIT_ID);

        
        SBOPERATING_UNIT_ID := GE_BOINSTANCECONTROL.FSBGETFIELDVALUE ('OR_OPER_UNIT_ELEMENT', 'OPERATING_UNIT_ID');
        NUSOURCEOPERUNIT := TO_NUMBER(SBOPERATING_UNIT_ID);

        IF NUSOURCEOPERUNIT = NUTARGETOPERUNIT THEN
            UT_TRACE.TRACE('--Las Unidades operativas son iguales', 3);
            
            ERRORS.SETERROR(CNUSAMEOPUNITERROR);
            RAISE EX.CONTROLLED_ERROR;
        END IF;

        
        NUELEMENTID := TO_NUMBER(ISBPK);
        RCOPEUNITELEMENT := DAOR_OPER_UNIT_ELEMENT.FRCGETRECORD(NUELEMENTID);

        
        IF RCOPEUNITELEMENT.IS_ASSIGNABLE = GE_BOCONSTANTS.CSBYES THEN
            DAIF_ASSIGNABLE.ACCKEY(NUELEMENTID);
            NUELEMENTTYPEID  :=  DAIF_ASSIGNABLE.FNUGETELEMENT_TYPE_ID(NUELEMENTID);
            NUCLASSID        :=  DAIF_ASSIGNABLE.FNUGETCLASS_ID(NUELEMENTID);
        ELSE
            DAIF_NODE.ACCKEY(NUELEMENTID);
            NUELEMENTTYPEID  :=  DAIF_NODE.FNUGETELEMENT_TYPE_ID(NUELEMENTID);
            NUCLASSID        :=  DAIF_NODE.FNUGETCLASS_ID(NUELEMENTID);
        END IF;

        
        SBRETRIEVED := GE_BOINSTANCECONTROL.FSBGETFIELDVALUE ('OR_OPER_UNIT_ELEMENT', 'IS_ASSIGNABLE');

        IF SBRETRIEVED = GE_BOCONSTANTS.CSBYES THEN
            SBRETRIEVED := OR_BOCONSTANTS.CSBDELETE; 
            SBUSAGE := 'Recuperar';
        ELSE
            SBRETRIEVED := OR_BOCONSTANTS.CSBINSTALLACTION;
            SBUSAGE := 'Instalaci?n';
        END IF;

        
        NUITEMID := OR_BCLEGALIZEITEMS.FNUGETITEMBYELEMCLASSACT(NUELEMENTTYPEID, NUCLASSID, SBRETRIEVED);

        
        SBOPERATING_UNIT_ID := GE_BOINSTANCECONTROL.FSBGETFIELDVALUE ('OR_OPER_UNIT_ELEMENT', 'OPERATING_UNIT_ID');
        NUSOURCEOPERUNIT := TO_NUMBER(SBOPERATING_UNIT_ID);

        
        UT_TRACE.TRACE('Item:'||NUITEMID,3);
        IF NUITEMID IS NULL THEN
            UT_TRACE.TRACE('--No existe el ?tem', 3);
            ERRORS.SETERROR(CNUNOITEMERROR, NUELEMENTTYPEID||'|'||NUCLASSID||'|'||SBUSAGE);
            RAISE EX.CONTROLLED_ERROR;
        ELSE
            DAOR_OPE_UNI_ITEM_BALA.ACCKEY(NUITEMID, NUSOURCEOPERUNIT);

        
        DAOR_OPER_UNIT_ELEMENT.UPDOPERATING_UNIT_ID(NUELEMENTID, NUTARGETOPERUNIT);

        
        OR_BOOPEUNIITEMBALA.GETDATAITEMSFORRETIRE(
                                    NUSOURCEOPERUNIT,
                                    NUITEMID,
                                    1,
                                    NULL,
                                    NUBALANCE,
                                    NUBALANCEPRICE,
                                    NUPRICEQUANTITY);
        OR_BOOPEUNIITEMBALA.SETBALANANDPRICETOOPEUNIITEM(
                                    NUSOURCEOPERUNIT,
                                    NUITEMID,
                                    NUBALANCE,
                                    NUBALANCEPRICE
                                );

        
        OR_BOOPEUNIITEMBALA.GETDATAITEMSFORADD(
                                    NUTARGETOPERUNIT,
                                    NUITEMID,
                                    1,
                                    NUPRICEQUANTITY,
                                    NUBALANCE,
                                    NUBALANCEPRICE);
        OR_BOOPEUNIITEMBALA.SETBALANANDPRICETOOPEUNIITEM(
                                    NUTARGETOPERUNIT,
                                    NUITEMID,
                                    NUBALANCE,
                                    NUBALANCEPRICE
                                );

             
             TBELEMENTS(INUCURRENT) := NUELEMENTID;
        END IF;

        UT_TRACE.TRACE('OR_BOFWItemsMove.getSelectedElements: [Fin]',1);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESS);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESS);
    END GETSELECTEDELEMENTS;


    

























    PROCEDURE CERRARDOCUMENTO
    (
        INUITEMSDOCUMENTO       IN  GE_ITEMS_DOCUMENTO.ID_ITEMS_DOCUMENTO%TYPE,
        INUOPERATINGUNITID      IN  GE_ITEMS_DOCUMENTO.OPERATING_UNIT_ID%TYPE
    )
    IS
        NUCANTIDAD              NUMBER;
        NUDOCUMENTTYPE          GE_ITEMS_DOCUMENTO.DOCUMENT_TYPE_ID%TYPE;
        TBORDENES               DAGE_ITEMS_DOCUMENTO.TYTBID_ITEMS_DOCUMENTO;
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.CerrarDocumento', 6);

        
        DAOR_OPERATING_UNIT.ACCKEY(INUOPERATINGUNITID);

        
        NUDOCUMENTTYPE := DAGE_ITEMS_DOCUMENTO.FNUGETDOCUMENT_TYPE_ID(INUITEMSDOCUMENTO);

        UT_TRACE.TRACE('Documento: [' || INUITEMSDOCUMENTO || '] - '
            || 'Tipo Documento: [' || NUDOCUMENTTYPE  || ']', 7 );

        
        IF (NUDOCUMENTTYPE = GE_BOITEMSCONSTANTS.CNUTIPOTRASLADOITEMS) THEN
            
            NUCANTIDAD :=   GE_BCITEMSDOCUMENTO.FNUOBTCANTDOCUMTRANSITO
                            (
                                INUITEMSDOCUMENTO,
                                INUOPERATINGUNITID
                            );

            UT_TRACE.TRACE('Documento: [' || INUITEMSDOCUMENTO || '] - '
                || 'Unidad Operativa: [' || INUOPERATINGUNITID || ']'
                || 'Cantidad: [' || NUCANTIDAD || ']', 7 );

            
            IF (NUCANTIDAD = 0) THEN
                DAGE_ITEMS_DOCUMENTO.UPDESTADO
                (
                    INUITEMSDOCUMENTO,
                    GE_BOITEMSCONSTANTS.CSBESTADOCERRADO
                );
            END IF;
        ELSE
            
            TBORDENES := GE_BCITEMSDOCUMENTO.FTBGETDOCSABIERTOS
                        (
                            INUITEMSDOCUMENTO,
                            INUOPERATINGUNITID
                        );

            
            IF TBORDENES.COUNT > 0 THEN

                
                FOR NUINDEX IN TBORDENES.FIRST .. TBORDENES.LAST LOOP

                    
                    NUCANTIDAD :=   GE_BCITEMSDOCUMENTO.FNUOBTCANTDOCUMTRANSITO
                                    (
                                        TBORDENES(NUINDEX),
                                        INUOPERATINGUNITID
                                    );

                    UT_TRACE.TRACE('Documento: [' || TBORDENES(NUINDEX) || '] - '
                        || 'Unidad Operativa: [' || INUOPERATINGUNITID || ']'
                        || 'Cantidad: [' || NUCANTIDAD || ']', 7 );

                    
                    IF (NUCANTIDAD = 0) THEN
                        DAGE_ITEMS_DOCUMENTO.UPDESTADO
                        (
                            TBORDENES(NUINDEX),
                            GE_BOITEMSCONSTANTS.CSBESTADOCERRADO
                        );
                    END IF;

                END LOOP;

            END IF;

        END IF;

        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.CerrarDocumento', 6);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END CERRARDOCUMENTO;

    



















    PROCEDURE LOCKMOVEITEM
    (
        INUOPERATINGUNITID      IN  OR_UNI_ITEM_BALA_MOV.OPERATING_UNIT_ID%TYPE,
        INUITEMSID              IN  OR_UNI_ITEM_BALA_MOV.ITEMS_ID%TYPE,
        INUITEMSSERIADO         IN  OR_UNI_ITEM_BALA_MOV.ID_ITEMS_SERIADO%TYPE DEFAULT NULL
    )
    IS
        RCOR_OPE_UNI_ITEM_BALA  DAOR_OPE_UNI_ITEM_BALA.STYOR_OPE_UNI_ITEM_BALA;
        RCGE_ITEMS_SERIADO      DAGE_ITEMS_SERIADO.STYGE_ITEMS_SERIADO;
    BEGIN
        UT_TRACE.TRACE('--[INICIO] OR_BOFWItemsMove.LockMoveItem', 5);
        OR_BOITEMSMOVE.LOCKMOVEITEM(INUOPERATINGUNITID, INUITEMSID, INUITEMSSERIADO);
        UT_TRACE.TRACE('--[FIN] OR_BOFWItemsMove.LockMoveItem', 5);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END LOCKMOVEITEM;

END OR_BOFWITEMSMOVE;