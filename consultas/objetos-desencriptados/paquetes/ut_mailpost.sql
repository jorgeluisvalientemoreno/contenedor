CREATE OR REPLACE PACKAGE BODY UT_MAILPOST IS
   CSBVERSION CONSTANT VARCHAR2( 10 ) := 'SAO151220';
   CNUERR_NULL_HOST CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 1980;
   CNUERR_NULL_PORT CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300043;
   CNUERR_NULL_FROM CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300044;
   CNUERR_NULL_TO CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300045;
   CNUERR_NULL_MSG CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300046;
   CNUERR_CC_LIST_DIF CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300047;
   CNUERR_NULL_FILENAME CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 300048;
   CSBPOINT CONSTANT VARCHAR2( 1 ) := '.';
   SBCRLF CONSTANT VARCHAR2( 2 ) := UTL_TCP.CRLF;
   CSBHOST_MAIL CONSTANT GE_PARAMETER.PARAMETER_ID%TYPE := 'HOST_MAIL';
   CSBHOST_MAIL_PORT CONSTANT GE_PARAMETER.PARAMETER_ID%TYPE := 'HOST_MAIL_PORT';
   CNUDEFAULT_PORT CONSTANT NUMBER := 25;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END FSBVERSION;
   PROCEDURE CLOSEMAILSMTP( IOCOCONNECTION IN OUT NOCOPY UTL_SMTP.CONNECTION )
    IS
      REREPLY UTL_SMTP.REPLY;
    BEGIN
      UT_TRACE.TRACE( 'Inicio UT_MailPost.CloseMailSMTP', 1 );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>SBCRLF || '.' || SBCRLF );
      REREPLY := UTL_SMTP.CLOSE_DATA( C=>IOCOCONNECTION );
      UT_TRACE.TRACE( 'DATA command Reply: ' || REREPLY.CODE || REREPLY.TEXT, 2 );
      REREPLY := UTL_SMTP.QUIT( C=>IOCOCONNECTION );
      UT_TRACE.TRACE( 'QUIT command Reply: ' || REREPLY.CODE || REREPLY.TEXT, 2 );
      UT_TRACE.TRACE( 'Fin UT_MailPost.CloseMailSMTP', 1 );
    EXCEPTION
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END CLOSEMAILSMTP;
   FUNCTION FSBGETSUBJECT( ISBSUBJECT IN VARCHAR2 )
    RETURN VARCHAR2
    IS
      SBSUBJECT VARCHAR2( 32767 );
      NUSUBJECTLENGTH NUMBER;
      NUINDEX NUMBER;
    BEGIN
      UT_TRACE.TRACE( 'Inicio UT_MailPost.fsbGetSubject', 1 );
      NUSUBJECTLENGTH := LENGTH( ISBSUBJECT );
      IF ( NUSUBJECTLENGTH > 71 ) THEN
         NUINDEX := 1;
         LOOP
            IF ( SBSUBJECT IS NOT NULL ) THEN
               SBSUBJECT := SBSUBJECT || ' ';
            END IF;
            SBSUBJECT := SBSUBJECT || '=?iso-8859-1?Q?' || UTL_ENCODE.TEXT_ENCODE( SUBSTR( ISBSUBJECT, NUINDEX, 70 ), NULL, UTL_ENCODE.QUOTED_PRINTABLE ) || '?=';
            NUINDEX := NUINDEX + 70;
            EXIT WHEN NUINDEX > NUSUBJECTLENGTH;
         END LOOP;
       ELSE
         SBSUBJECT := '=?iso-8859-1?Q?' || UTL_ENCODE.TEXT_ENCODE( ISBSUBJECT, NULL, UTL_ENCODE.QUOTED_PRINTABLE ) || '?=';
      END IF;
      UT_TRACE.TRACE( 'Fin UT_MailPost.fsbGetSubject', 1 );
      RETURN SBSUBJECT;
    EXCEPTION
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END FSBGETSUBJECT;
   FUNCTION FNUGETPORT
    RETURN NUMBER
    IS
      NUPORT INTEGER;
    BEGIN
      UT_TRACE.TRACE( 'Inicio UT_MailPost.fnuGetPort', 1 );
      NUPORT := GE_BOPARAMETER.FNUGET( CSBHOST_MAIL_PORT );
      IF ( NUPORT IS NULL ) THEN
         NUPORT := CNUDEFAULT_PORT;
      END IF;
      UT_TRACE.TRACE( 'Fin UT_MailPost.fnuGetPort', 1 );
      RETURN NUPORT;
    EXCEPTION
      WHEN OTHERS THEN
         RETURN CNUDEFAULT_PORT;
   END FNUGETPORT;
   PROCEDURE SENDMAILSMTP( ISBFROM IN VARCHAR2, ISBFROMDISPLAY IN VARCHAR2, ISBTO IN VARCHAR2, ISBTODISPLAY IN VARCHAR2, ITBCC IN UT_STRING.TYTB_STRING, ITBCCDISPLAY IN UT_STRING.TYTB_STRING, ITBBCC IN UT_STRING.TYTB_STRING, ISBSUBJECT IN VARCHAR2, ISBMSG IN VARCHAR2, ISBCONTENTTYPE IN VARCHAR2, IOCOCONNECTION IN OUT NOCOPY UTL_SMTP.CONNECTION )
    IS
      SBCC VARCHAR2( 32767 );
      SBSUBJECT VARCHAR2( 32767 );
      CSBHOST CONSTANT GE_PARAMETER.VALUE%TYPE := GE_BOPARAMETER.FSBGET( CSBHOST_MAIL );
      CNUPORT CONSTANT INTEGER := FNUGETPORT;
    BEGIN
      UT_TRACE.TRACE( 'Inicio UT_MailPost.SendMailSMTP', 1 );
      IF ( CSBHOST IS NULL ) THEN
         ERRORS.SETERROR( CNUERR_NULL_HOST );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF ( CNUPORT IS NULL ) THEN
         ERRORS.SETERROR( CNUERR_NULL_PORT );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF ( ISBFROM IS NULL ) THEN
         ERRORS.SETERROR( CNUERR_NULL_FROM );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF ( ISBTO IS NULL ) THEN
         ERRORS.SETERROR( CNUERR_NULL_TO );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF ( ISBMSG IS NULL ) THEN
         ERRORS.SETERROR( CNUERR_NULL_MSG );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF ( ITBCC.COUNT != ITBCCDISPLAY.COUNT ) THEN
         ERRORS.SETERROR( CNUERR_CC_LIST_DIF );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IOCOCONNECTION := UTL_SMTP.OPEN_CONNECTION( HOST=>CSBHOST, PORT=>CNUPORT );
      UTL_SMTP.HELO( C=>IOCOCONNECTION, DOMAIN=>CSBHOST );
      UTL_SMTP.MAIL( C=>IOCOCONNECTION, SENDER=>ISBFROM );
      UTL_SMTP.RCPT( C=>IOCOCONNECTION, RECIPIENT=>ISBTO );
      IF ( ITBCC.FIRST IS NOT NULL ) THEN
         FOR I IN ITBCC.FIRST..ITBCC.LAST
          LOOP
            UTL_SMTP.RCPT( C=>IOCOCONNECTION, RECIPIENT=>ITBCC( I ) );
         END LOOP;
      END IF;
      IF ( ITBBCC.FIRST IS NOT NULL ) THEN
         FOR I IN ITBBCC.FIRST..ITBBCC.LAST
          LOOP
            UTL_SMTP.RCPT( C=>IOCOCONNECTION, RECIPIENT=>ITBBCC( I ) );
         END LOOP;
      END IF;
      UTL_SMTP.OPEN_DATA( C=>IOCOCONNECTION );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>'From: "' || ISBFROMDISPLAY || '" <' || ISBFROM || '>' || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>'To: "' || ISBTODISPLAY || '" <' || ISBTO || '>' || SBCRLF );
      IF ( ITBCCDISPLAY.FIRST IS NOT NULL ) THEN
         SBCC := 'Cc:';
         FOR I IN ITBCCDISPLAY.FIRST..ITBCCDISPLAY.LAST
          LOOP
            IF ( SBCC = 'Cc:' ) THEN
               SBCC := SBCC || ' "' || ITBCCDISPLAY( I ) || '" <' || ITBCC( I ) || '>';
             ELSE
               SBCC := SBCC || ', "' || ITBCCDISPLAY( I ) || '" <' || ITBCC( I ) || '>';
            END IF;
         END LOOP;
         UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>SBCC || SBCRLF );
      END IF;
      SBSUBJECT := FSBGETSUBJECT( ISBSUBJECT );
      SBSUBJECT := REPLACE( SBSUBJECT, '_', '=5F' );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>'Subject: ' || SBSUBJECT || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>'MIME-Version: 1.0' || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>'Content-Type: multipart/mixed; ' || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>' boundary= "-----SECBOUND"' || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>'-------SECBOUND' || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>'Content-Type: ' || ISBCONTENTTYPE || ';' || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>' charset="iso-8859-1"' || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>'Content-Transfer-Encoding: quoted-printable' || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>UTL_ENCODE.TEXT_ENCODE( REPLACE( ISBMSG, CHR( 10 ), SBCRLF ), NULL, UTL_ENCODE.QUOTED_PRINTABLE ) || SBCRLF );
      UTL_SMTP.WRITE_DATA( C=>IOCOCONNECTION, DATA=>SBCRLF );
      UT_TRACE.TRACE( 'Fin UT_MailPost.SendMailSMTP', 1 );
    EXCEPTION
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END SENDMAILSMTP;
   FUNCTION FSBGETFILENAME( ISBFILENAME IN VARCHAR2, ISBFILEEXT IN VARCHAR2 )
    RETURN VARCHAR2
    IS
      SBFILENAME VARCHAR2( 32767 );
    BEGIN
      UT_TRACE.TRACE( 'Inicio UT_MailPost.fsbGetFileName', 1 );
      IF ( ISBFILENAME IS NULL ) THEN
         ERRORS.SETERROR( CNUERR_NULL_FILENAME );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      SBFILENAME := ISBFILENAME;
      IF ( LENGTH( SBFILENAME ) > 71 ) THEN
         SBFILENAME := SUBSTR( SBFILENAME, 1, 70 - LENGTH( ISBFILEEXT ) );
      END IF;
      IF ( ISBFILEEXT IS NULL ) THEN
         SBFILENAME := UTL_ENCODE.TEXT_ENCODE( SBFILENAME, NULL, UTL_ENCODE.QUOTED_PRINTABLE );
       ELSE
         SBFILENAME := UTL_ENCODE.TEXT_ENCODE( SBFILENAME || CSBPOINT || ISBFILEEXT, NULL, UTL_ENCODE.QUOTED_PRINTABLE );
      END IF;
      UT_TRACE.TRACE( 'Fin UT_MailPost.fsbGetFileName', 1 );
      RETURN SBFILENAME;
    EXCEPTION
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END FSBGETFILENAME;
   PROCEDURE SENDMAILBLOBATTACHSMTP( ISBFROM IN VARCHAR2, ISBFROMDISPLAY IN VARCHAR2, ISBTO IN VARCHAR2, ISBTODISPLAY IN VARCHAR2, ITBCC IN UT_STRING.TYTB_STRING, ITBCCDISPLAY IN UT_STRING.TYTB_STRING, ITBBCC IN UT_STRING.TYTB_STRING, ISBSUBJECT IN VARCHAR2, ISBMSG IN VARCHAR2, ISBCONTENTTYPE IN VARCHAR2, ISBFILENAME IN VARCHAR2, ISBFILEEXT IN VARCHAR2, IBLFILE IN BLOB )
    IS
      COCONNECTION UTL_SMTP.CONNECTION;
      RWBUFFER RAW( 54 );
      NUPOS INTEGER := 1;
      NUAMOUNT BINARY_INTEGER := 54;
      NULOBLENGTH INTEGER;
      BLFILE BLOB := EMPTY_BLOB;
      SBFILENAME VARCHAR2( 32767 );
      NUERRORCODE GE_ERROR_LOG.MESSAGE_ID%TYPE;
      SBERRORMSG GE_ERROR_LOG.DESCRIPTION%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'Inicio UT_MailPost.SendMailBlobAttachSMTP', 1 );
      SENDMAILSMTP( ISBFROM, ISBFROMDISPLAY, ISBTO, ISBTODISPLAY, ITBCC, ITBCCDISPLAY, ITBBCC, ISBSUBJECT, ISBMSG, ISBCONTENTTYPE, COCONNECTION );
      IF ( IBLFILE IS NOT NULL ) THEN
         SBFILENAME := FSBGETFILENAME( ISBFILENAME, ISBFILEEXT );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'-------SECBOUND' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'Content-Type: application/octet-stream;' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>' name="=?iso-8859-1?Q?' || SBFILENAME || '?="' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'Content-Transfer-Encoding: base64' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'Content-Disposition: attachment; ' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>' filename="' || SBFILENAME || '"' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>SBCRLF );
         BLFILE := IBLFILE;
         NULOBLENGTH := NVL( DBMS_LOB.GETLENGTH( LOB_LOC=>BLFILE ), 0 );
         WHILE NUPOS < NULOBLENGTH
          LOOP
            DBMS_LOB.READ( LOB_LOC=>BLFILE, AMOUNT=>NUAMOUNT, OFFSET=>NUPOS, BUFFER=>RWBUFFER );
            UTL_SMTP.WRITE_RAW_DATA( C=>COCONNECTION, DATA=>UTL_ENCODE.BASE64_ENCODE( R=>RWBUFFER ) );
            UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>SBCRLF );
            RWBUFFER := NULL;
            NUPOS := NUPOS + NUAMOUNT;
         END LOOP;
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'-------SECBOUND--' || SBCRLF );
      END IF;
      CLOSEMAILSMTP( COCONNECTION );
      UT_TRACE.TRACE( 'Fin UT_MailPost.SendMailBlobAttachSMTP', 1 );
    EXCEPTION
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( NUERRORCODE, SBERRORMSG );
         UT_TRACE.TRACE( 'Error: [' || NUERRORCODE || ' - ' || SBERRORMSG || ']', 1 );
         UTL_SMTP.QUIT( C=>COCONNECTION );
         DBMS_LOB.FREETEMPORARY( BLFILE );
         RAISE EX.CONTROLLED_ERROR;
   END SENDMAILBLOBATTACHSMTP;
   PROCEDURE SENDMAILCLOBATTACHSMTP( ISBFROM IN VARCHAR2, ISBFROMDISPLAY IN VARCHAR2, ISBTO IN VARCHAR2, ISBTODISPLAY IN VARCHAR2, ITBCC IN UT_STRING.TYTB_STRING, ITBCCDISPLAY IN UT_STRING.TYTB_STRING, ITBBCC IN UT_STRING.TYTB_STRING, ISBSUBJECT IN VARCHAR2, ISBMSG IN VARCHAR2, ISBCONTENTTYPE IN VARCHAR2, ISBFILENAME IN VARCHAR2, ISBFILEEXT IN VARCHAR2, ICLFILE IN CLOB )
    IS
      COCONNECTION UTL_SMTP.CONNECTION;
      SBBUFFER VARCHAR2( 32767 );
      NUPOS INTEGER := 1;
      NUAMOUNT BINARY_INTEGER := 54;
      NULOBLENGTH INTEGER;
      CLFILE CLOB := EMPTY_CLOB;
      SBFILENAME VARCHAR2( 32767 );
      NUERRORCODE GE_ERROR_LOG.MESSAGE_ID%TYPE;
      SBERRORMSG GE_ERROR_LOG.DESCRIPTION%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'Inicio UT_MailPost.SendMailClobAttachSMTP', 1 );
      SENDMAILSMTP( ISBFROM, ISBFROMDISPLAY, ISBTO, ISBTODISPLAY, ITBCC, ITBCCDISPLAY, ITBBCC, ISBSUBJECT, ISBMSG, ISBCONTENTTYPE, COCONNECTION );
      IF ( ICLFILE IS NOT NULL ) THEN
         SBFILENAME := FSBGETFILENAME( ISBFILENAME, ISBFILEEXT );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'-------SECBOUND' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'Content-Type: text/plain;' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>' charset="iso-8859-1"' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>' name="=?iso-8859-1?Q?' || SBFILENAME || '?="' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'Content-Transfer-Encoding: quoted-printable' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'Content-Disposition: attachment; ' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>' filename="' || SBFILENAME || '"' || SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>SBCRLF );
         CLFILE := ICLFILE;
         NULOBLENGTH := NVL( DBMS_LOB.GETLENGTH( LOB_LOC=>CLFILE ), 0 );
         WHILE NUPOS < NULOBLENGTH
          LOOP
            DBMS_LOB.READ( LOB_LOC=>CLFILE, AMOUNT=>NUAMOUNT, OFFSET=>NUPOS, BUFFER=>SBBUFFER );
            UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>UTL_ENCODE.TEXT_ENCODE( REPLACE( SBBUFFER, CHR( 10 ), SBCRLF ), NULL, UTL_ENCODE.QUOTED_PRINTABLE ) );
            SBBUFFER := NULL;
            NUPOS := NUPOS + NUAMOUNT;
         END LOOP;
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>SBCRLF );
         UTL_SMTP.WRITE_DATA( C=>COCONNECTION, DATA=>'-------SECBOUND--' || SBCRLF );
      END IF;
      CLOSEMAILSMTP( COCONNECTION );
      UT_TRACE.TRACE( 'Fin UT_MailPost.SendMailClobAttachSMTP', 1 );
    EXCEPTION
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( NUERRORCODE, SBERRORMSG );
         UT_TRACE.TRACE( 'Error: [' || NUERRORCODE || ' - ' || SBERRORMSG || ']', 1 );
         UTL_SMTP.QUIT( C=>COCONNECTION );
         DBMS_LOB.FREETEMPORARY( CLFILE );
         RAISE EX.CONTROLLED_ERROR;
   END SENDMAILCLOBATTACHSMTP;
END UT_MAILPOST;
/


