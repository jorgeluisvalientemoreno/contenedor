CREATE OR REPLACE PACKAGE BODY GE_BOMONITOR_LOG_ERROR IS
   CSBVERSION CONSTANT VARCHAR2( 20 ) := 'SAO91700';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE INSERT_LOG( INUPROCESS_EXECUTOR_ID IN NUMBER, INUTHREAD IN NUMBER, INUERRCOD IN NUMBER, ISBERRMSG IN VARCHAR2 )
    IS
      RCR DAGE_MONITOR_LOG_ERROR.STYGE_MONITOR_LOG_ERROR;
      PRAGMA AUTONOMOUS_TRANSACTION;
    BEGIN
      RCR.MONITOR_LOG_ERROR_ID := GE_BOSEQUENCE.NEXTGE_MONITOR_LOG_ERROR;
      RCR.PROCESS_EXECUTOR_ID := INUPROCESS_EXECUTOR_ID;
      RCR.SESSION_ID := USERENV( 'SESSIONID' );
      RCR.THREAD_NUMBER := INUTHREAD;
      RCR.DATE_ := SYSDATE;
      RCR.ERROR_CODE := INUERRCOD;
      RCR.ERROR_MESSAGE := ISBERRMSG;
      RCR.STACK := DBMS_UTILITY.FORMAT_CALL_STACK;
      RCR.HOST_ID := GE_BOHOST.FNUGETHOSTIDBYNAME;
      DAGE_MONITOR_LOG_ERROR.INSRECORD( RCR );
      COMMIT;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ROLLBACK;
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ROLLBACK;
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE REPORT( INUERRCOD IN NUMBER, ISBERRMSG IN VARCHAR2 )
    IS
    BEGIN
      INSERT_LOG( GE_BOPROCESS_EXECUTOR.FNUGETPROCESS_EXECUTOR_ID, GE_BOPROCESS_EXECUTOR.FNUGETTHREAD_ID, INUERRCOD, ISBERRMSG );
   END;
   PROCEDURE DELETE_RECORDS
    IS
    BEGIN
      GE_BCMONITOR_LOG_ERROR.DELETE_RECORDS;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE GETMONITORLOGERROR( ORFREFCURSOR OUT CONSTANTS.TYREFCURSOR )
    IS
    BEGIN
      GE_BCMONITOR_LOG_ERROR.GETMONITORLOGERROR( ORFREFCURSOR );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
END GE_BOMONITOR_LOG_ERROR;
/


