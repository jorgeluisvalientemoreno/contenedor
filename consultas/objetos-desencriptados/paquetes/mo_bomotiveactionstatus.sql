
PACKAGE BODY mo_boMotiveActionStatus AS
    
    
    
    
    CSBVERSION  CONSTANT VARCHAR2(250)  := 'SAO201706';

    
    CNUERROR10513 CONSTANT NUMBER(5) := 10513;

    
    
    

    BOCONDPRERULE  BOOLEAN := TRUE;

    
    
    
    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;













PROCEDURE SETCONDPRERULE
(
    IBOBOOLEAN IN BOOLEAN
)
IS
BEGIN

    BOCONDPRERULE := IBOBOOLEAN;

EXCEPTION
    WHEN EX.CONTROLLED_ERROR THEN
        RAISE;

    WHEN OTHERS THEN
        ERRORS.SETERROR;
        RAISE EX.CONTROLLED_ERROR;
END;























PROCEDURE CONTROLSTATUS
(
    INUACTIONID           IN NUMBER,
    INUCURRSTATUSID       IN NUMBER,
    INUEXTERNALID         IN NUMBER,
    ONUNEXTSTATUSID       OUT NUMBER,
    ONUAFTEREXPRESSION    OUT NUMBER,
    ONURELATIONSTATUSTYPE OUT NUMBER
)
IS
    TBMOTIVEACTION  DAPS_MOTIVE_ACTION.TYTBPS_MOTIVE_ACTION;
BEGIN
    UT_TRACE.TRACE('Begin MO_BOMotiveActionStatus.ControlStatus['||INUACTIONID||']['||INUCURRSTATUSID||']['||INUEXTERNALID||']',3);

    
    OPEN    PS_BCMOTIVE_ACTION.CUMOTIVEACTION(INUACTIONID, INUCURRSTATUSID);
    FETCH   PS_BCMOTIVE_ACTION.CUMOTIVEACTION BULK COLLECT INTO TBMOTIVEACTION;
    CLOSE   PS_BCMOTIVE_ACTION.CUMOTIVEACTION;
    
    
    IF  (TBMOTIVEACTION.COUNT > 0) THEN
    
        FOR I IN TBMOTIVEACTION.FIRST .. TBMOTIVEACTION.LAST LOOP
        
            BOCONDPRERULE := TRUE;

            GE_BOINSTANCECONTROL.ADDGLOBALATTRIBUTE (MO_BOCONSTANTS.CSBCURRENT_STATUS_ID, TBMOTIVEACTION(I).CURRENT_STATUS_ID);
            GE_BOINSTANCECONTROL.ADDGLOBALATTRIBUTE (MO_BOCONSTANTS.CSBNEXT_STATUS_ID, TBMOTIVEACTION(I).NEXT_STATUS_ID);
            GE_BOINSTANCECONTROL.ADDGLOBALATTRIBUTE (MO_BOCONSTANTS.CSBACTION_ID, TBMOTIVEACTION(I).ACTION_ID);

              SP_STATUS_CONTROLLER;

            
            GE_BOINSTANCECONTROL.EXECUTEEXPRESSION(TBMOTIVEACTION(I).BEFORE_EXPRE_ID);

            IF  BOCONDPRERULE THEN
                UT_TRACE.TRACE('Exito Condicion PRE', 4);

                ONUNEXTSTATUSID         := TBMOTIVEACTION(I).NEXT_STATUS_ID;
                ONUAFTEREXPRESSION      := TBMOTIVEACTION(I).AFTER_EXPRE_ID;
                ONURELATIONSTATUSTYPE   := TBMOTIVEACTION(I).MOTI_STATUS_RELATION;

                EXIT;
            END IF;

            ROLLBACK TO SP_STATUS_CONTROLLER;

        END LOOP;

    END IF;

    
    
    IF  (ONUNEXTSTATUSID IS NULL) THEN
        ERRORS.SETERROR
        (
            CNUERROR10513,
            INUACTIONID ||'-'||DAGE_ACTION_MODULE.FSBGETDESCRIPTION (INUACTIONID)  ||'|'||
            INUCURRSTATUSID ||'-'||DAPS_MOTIVE_STATUS.FSBGETDESCRIPTION (INUCURRSTATUSID) ||' ('||
            DAPS_MOTI_STATUS_TYPE.FSBGETDESCRIPTION(DAPS_MOTIVE_STATUS.FNUGETMOTI_STATUS_TYPE_ID(INUCURRSTATUSID)) ||' ['|| INUEXTERNALID ||'])'
        );
        
        RAISE EX.CONTROLLED_ERROR;
    END IF;
    
    UT_TRACE.TRACE('End MO_BOMotiveActionStatus.ControlStatus['||ONUNEXTSTATUSID||']['||ONUAFTEREXPRESSION||']['||ONURELATIONSTATUSTYPE||']',3);
EXCEPTION
    WHEN EX.CONTROLLED_ERROR THEN
        IF  PS_BCMOTIVE_ACTION.CUMOTIVEACTION%ISOPEN THEN
            CLOSE PS_BCMOTIVE_ACTION.CUMOTIVEACTION;
        END IF;
        RAISE EX.CONTROLLED_ERROR;
    WHEN OTHERS THEN
        IF  PS_BCMOTIVE_ACTION.CUMOTIVEACTION%ISOPEN THEN
            CLOSE PS_BCMOTIVE_ACTION.CUMOTIVEACTION;
        END IF;
        ERRORS.SETERROR;
        RAISE EX.CONTROLLED_ERROR;
END CONTROLSTATUS;

END MO_BOMOTIVEACTIONSTATUS;