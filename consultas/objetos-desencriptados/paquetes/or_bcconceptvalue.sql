
CREATE OR REPLACE PACKAGE OR_BCCONCEPTVALUE IS
   TYPE TYCONCEPTS IS RECORD
    (
      NUCONCEPTID OR_TASK_TYPE.CONCEPT%TYPE,
      NUVALUE OR_ORDER.ORDER_VALUE%TYPE,
      NUORDERID OR_ORDER.ORDER_ID%TYPE
    );
   TYPE TBCONCEPTS IS TABLE OF TYCONCEPTS INDEX BY VARCHAR2( 100 );
   TYPE TYRCDISCOUNTCONCEPTS IS RECORD
    (
      NUDISCOUNTCONCEPTID GE_ITEMS.DISCOUNT_CONCEPT%TYPE,
      NUDISCOUNTVALUE OR_ORDER.ORDER_VALUE%TYPE
    );
   TYPE TYTBDISCOUNTCONCEPTS IS TABLE OF TYRCDISCOUNTCONCEPTS INDEX BY BINARY_INTEGER;
   TYPE TYQUOTATIONITEMS IS RECORD
    (
      NUITEMID CC_QUOTATION_ITEM.QUOTATION_ITEM_ID%TYPE,
      NUQUOTATION CC_QUOTATION_ITEM.QUOTATION_ID%TYPE,
      NUDISCVALUEITEM CC_QUOTATION_ITEM.UNIT_DISCOUNT_VALUE%TYPE,
      NUREMAININGITEM CC_QUOTATION_ITEM.REMAINING_ITEMS%TYPE
    );
   TYPE TYTBQUOTATIONITEMS IS TABLE OF TYQUOTATIONITEMS INDEX BY CC_BOQUOTATIONMGR.STYQUOTITEMIDX;
   GTBQUOTATIONITEMS TYTBQUOTATIONITEMS;
   FUNCTION FSBVERSION
    RETURN VARCHAR2;
   PROCEDURE GETITEMSCONCEPTVALUEBYORDERID( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, OTBCONCEPTVALUE OUT TBCONCEPTS, INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE, IOTBDISCOUNTCONCEPTS IN OUT NOCOPY TYTBDISCOUNTCONCEPTS );
END OR_BCCONCEPTVALUE;
/


CREATE OR REPLACE PACKAGE BODY OR_BCCONCEPTVALUE IS
   CSBVERSION CONSTANT VARCHAR2( 20 ) := 'SAO190773';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE GETITEMSCONCEPTVALUEBYORDERID( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, OTBCONCEPTVALUE OUT TBCONCEPTS, INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE, IOTBDISCOUNTCONCEPTS IN OUT NOCOPY TYTBDISCOUNTCONCEPTS )
    IS
      TBCONCEPT TBCONCEPTS;
      TBORORDERITEMS DAOR_ORDER_ITEMS.TYTBOR_ORDER_ITEMS;
      NUCOUNT NUMBER;
      NUCONCEPT GE_ITEMS.CONCEPT%TYPE;
      SBINDEX CC_BOQUOTATIONMGR.STYQUOTITEMIDX;
      NUDISCOUNTCONCEPT GE_ITEMS.DISCOUNT_CONCEPT%TYPE;
      RCQUOTATION DACC_QUOTATION.STYCC_QUOTATION;
      NUTASKTYPEID OR_TASK_TYPE.TASK_TYPE_ID%TYPE;
      NUTOTAL NUMBER;
      NUREMAININGITEMS CC_QUOTATION_ITEM.REMAINING_ITEMS%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'INICIO OR_bcConceptValue.GetItemsConceptValueByOrderId', 1 );
      UT_TRACE.TRACE( 'Orden[' || INUORDERID || ']', 5 );
      UT_TRACE.TRACE( 'Solicitud[' || INUPACKAGEID || ']', 5 );
      IOTBDISCOUNTCONCEPTS.DELETE;
      NUTASKTYPEID := DAOR_ORDER.FNUGETTASK_TYPE_ID( INUORDERID );
      UT_TRACE.TRACE( 'Tipo de trabajo ' || NUTASKTYPEID, 6 );
      OR_BCITEMS.GETLEGALIZATIONITEMS( INUORDERID, TBORORDERITEMS );
      RCQUOTATION := CC_BCQUOTATION.FRCGETVALIDQUOTBYPACK( INUPACKAGEID );
      UT_TRACE.TRACE( 'Inicia ciclo, cuenta: ' || TBORORDERITEMS.COUNT, 5 );
      IF TBORORDERITEMS.COUNT > 0 THEN
         FOR NUINDEX IN TBORORDERITEMS.FIRST..TBORORDERITEMS.LAST
          LOOP
            IF ( TBORORDERITEMS( NUINDEX ).OUT_ = GE_BOCONSTANTS.CSBYES ) THEN
               NUCONCEPT := DAGE_ITEMS.FNUGETCONCEPT( TBORORDERITEMS( NUINDEX ).ITEMS_ID );
               UT_TRACE.TRACE( 'index[' || NUINDEX || '] Items_id[' || TBORORDERITEMS( NUINDEX ).ITEMS_ID || '] Concept[' || NUCONCEPT || ']', 6 );
               IF ( NUCONCEPT IS NOT NULL ) THEN
                  IF OTBCONCEPTVALUE.EXISTS( NUCONCEPT ) THEN
                     OTBCONCEPTVALUE( NUCONCEPT ).NUVALUE := OTBCONCEPTVALUE( NUCONCEPT ).NUVALUE + TBORORDERITEMS( NUINDEX ).TOTAL_PRICE;
                   ELSE
                     OTBCONCEPTVALUE( NUCONCEPT ).NUCONCEPTID := NUCONCEPT;
                     OTBCONCEPTVALUE( NUCONCEPT ).NUVALUE := TBORORDERITEMS( NUINDEX ).TOTAL_PRICE;
                  END IF;
               END IF;
               NUDISCOUNTCONCEPT := DAGE_ITEMS.FNUGETDISCOUNT_CONCEPT( TBORORDERITEMS( NUINDEX ).ITEMS_ID );
               UT_TRACE.TRACE( 'Concepto de Descuento ' || NUDISCOUNTCONCEPT, 6 );
               SBINDEX := LPAD( TO_CHAR( NUTASKTYPEID ), 11, '0' ) || LPAD( TO_CHAR( TBORORDERITEMS( NUINDEX ).ITEMS_ID ), 16, '0' );
               IF ( GTBQUOTATIONITEMS.EXISTS( SBINDEX ) ) AND ( GTBQUOTATIONITEMS( SBINDEX ).NUDISCVALUEITEM > 0 ) THEN
                  IF ( NUDISCOUNTCONCEPT IS NULL ) THEN
                     GE_BOERRORS.SETERRORCODEARGUMENT( 4666, TO_CHAR( TBORORDERITEMS( NUINDEX ).ITEMS_ID ) );
                  END IF;
                  NUREMAININGITEMS := NVL( GTBQUOTATIONITEMS( SBINDEX ).NUREMAININGITEM, 0 );
                  GTBQUOTATIONITEMS( SBINDEX ).NUREMAININGITEM := NUREMAININGITEMS - NVL( TBORORDERITEMS( NUINDEX ).LEGAL_ITEM_AMOUNT, 0 );
                  UT_TRACE.TRACE( 'Items Restantes ' || GTBQUOTATIONITEMS( SBINDEX ).NUREMAININGITEM, 6 );
                  NUTOTAL := CC_BOQUOTATIONMGR.FNUGETITEMVALUEBYORDER( RCQUOTATION, NUREMAININGITEMS, NVL( TBORORDERITEMS( NUINDEX ).LEGAL_ITEM_AMOUNT, 0 ), GTBQUOTATIONITEMS( SBINDEX ).NUDISCVALUEITEM, GTBQUOTATIONITEMS( SBINDEX ).NUITEMID );
                  UT_TRACE.TRACE( 'Valor a Descontar ' || NUTOTAL, 6 );
                  IF ( IOTBDISCOUNTCONCEPTS.EXISTS( NUDISCOUNTCONCEPT ) ) THEN
                     IOTBDISCOUNTCONCEPTS( NUDISCOUNTCONCEPT ).NUDISCOUNTVALUE := IOTBDISCOUNTCONCEPTS( NUDISCOUNTCONCEPT ).NUDISCOUNTVALUE + NUTOTAL;
                   ELSE
                     IOTBDISCOUNTCONCEPTS( NUDISCOUNTCONCEPT ).NUDISCOUNTCONCEPTID := NUDISCOUNTCONCEPT;
                     IOTBDISCOUNTCONCEPTS( NUDISCOUNTCONCEPT ).NUDISCOUNTVALUE := NUTOTAL;
                  END IF;
               END IF;
            END IF;
         END LOOP;
      END IF;
      UT_TRACE.TRACE( 'FIN OR_bcConceptValue.GetItemsConceptValueByOrderId', 1 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END GETITEMSCONCEPTVALUEBYORDERID;
END OR_BCCONCEPTVALUE;
/


