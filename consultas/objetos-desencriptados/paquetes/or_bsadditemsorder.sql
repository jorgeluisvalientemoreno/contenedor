CREATE OR REPLACE PACKAGE BODY OR_BSADDITEMSORDER IS
   CSBVERSION CONSTANT VARCHAR2( 20 ) := 'SAO61985';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE ADDITEMSORDER( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUITEMID IN GE_ITEMS.ITEMS_ID%TYPE, INULEGALITEMAMOUNT IN OR_ORDER_ITEMS.LEGAL_ITEM_AMOUNT%TYPE, ONUERRORCODE OUT NUMBER, OSBERRORMESSAGE OUT VARCHAR2 )
    IS
      NUMEASUREUNITID GE_ITEMS.MEASURE_UNIT_ID%TYPE;
      PROCEDURE INITOUTPUTDATA
       IS
       BEGIN
         GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END;
      PROCEDURE VALINPUTDATA
       IS
       BEGIN
         OR_BOSETLEGALIZATIONDATA.VALINPUTDATAITEM( INUORDERID, INUITEMID, NUMEASUREUNITID, INULEGALITEMAMOUNT );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END;
      PROCEDURE CLEARMEMORY
       IS
       BEGIN
         NULL;
      END;
      PROCEDURE RUNPROCESS
       IS
       BEGIN
         OR_BOSETLEGALIZATIONDATA.ADDITEMSORDER( INUORDERID, INUITEMID, NUMEASUREUNITID, INULEGALITEMAMOUNT );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END;
    BEGIN
      UT_TRACE.TRACE( 'OR_BSAddItemsOrder.AddItemsOrder INICIO', 1 );
      INITOUTPUTDATA;
      GE_BOITEMS.GETMEASUREUNIT( INUITEMID, NUMEASUREUNITID );
      VALINPUTDATA;
      CLEARMEMORY;
      RUNPROCESS;
      UT_TRACE.TRACE( 'OR_BSAddItemsOrder.AddItemsOrder FIN', 1 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END;
   PROCEDURE ADDITEMSORDERWITHMEAUNIT( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUITEMID IN GE_ITEMS.ITEMS_ID%TYPE, INUMEASUREUNITID IN GE_ITEMS.MEASURE_UNIT_ID%TYPE, INULEGALITEMAMOUNT IN OR_ORDER_ITEMS.LEGAL_ITEM_AMOUNT%TYPE, ONUERRORCODE OUT NUMBER, OSBERRORMESSAGE OUT VARCHAR2 )
    IS
      PROCEDURE INITOUTPUTDATA
       IS
       BEGIN
         GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END;
      PROCEDURE VALINPUTDATA
       IS
       BEGIN
         OR_BOSETLEGALIZATIONDATA.VALINPUTDATAITEM( INUORDERID, INUITEMID, INUMEASUREUNITID, INULEGALITEMAMOUNT );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END;
      PROCEDURE CLEARMEMORY
       IS
       BEGIN
         NULL;
      END;
      PROCEDURE RUNPROCESS
       IS
       BEGIN
         OR_BOSETLEGALIZATIONDATA.ADDITEMSORDER( INUORDERID, INUITEMID, INUMEASUREUNITID, INULEGALITEMAMOUNT );
       EXCEPTION
         WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
         WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
      END;
    BEGIN
      UT_TRACE.TRACE( 'OR_BSAddItemsOrder.AddItemsOrderWithMeaUnit INICIO', 1 );
      INITOUTPUTDATA;
      VALINPUTDATA;
      CLEARMEMORY;
      RUNPROCESS;
      UT_TRACE.TRACE( 'OR_BSAddItemsOrder.AddItemsOrderWithMeaUnit FIN', 1 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END;
END OR_BSADDITEMSORDER;
/


