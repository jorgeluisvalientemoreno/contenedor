PACKAGE UT_XMLPARSE AS








































    FUNCTION FSBVERSION
    RETURN VARCHAR2;
  
    PROCEDURE PARSE
    (
        IXMDOCUMENT     IN          XMLTYPE,
        ISBSCHEMA       IN          VARCHAR2,
        ORCDOMDOCUMENT  OUT NOCOPY  DBMS_XMLDOM.DOMDOCUMENT
    );

    PROCEDURE PARSE
    (
        ISBXML            IN         VARCHAR2,
        ISBSCHEMA         IN         VARCHAR2,
        ORCDOMDOCUMENT    OUT NOCOPY DBMS_XMLDOM.DOMDOCUMENT
    );

    PROCEDURE PARSE
    (
        ICLXML            IN         CLOB,
        ISBSCHEMA         IN         VARCHAR2,
        ORCDOMDOCUMENT    OUT NOCOPY DBMS_XMLDOM.DOMDOCUMENT
    );

    PROCEDURE PARSE
    (
        IBFXML            IN         BFILE,
        ISBCHARSET        IN         VARCHAR2,
        ISBSCHEMA         IN         VARCHAR2,
        ORCDOMDOCUMENT    OUT NOCOPY DBMS_XMLDOM.DOMDOCUMENT
    );
    
    





    PROCEDURE VALSCHEMA
    (
        IXMDOCUMENT     IN    XMLTYPE,
        ISBSCHEMA       IN    VARCHAR2
    );

END UT_XMLPARSE;
/
PACKAGE BODY UT_XMLPARSE AS




































    
    
    
    CSBVERSION          CONSTANT VARCHAR2(20) := 'SAO504317';

    
    CSBDEFAULT_CHARSET  CONSTANT VARCHAR2(10) := 'AL32UTF8';

    
    CNUINVALIDXML       CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE        := 6213;

    
    CNUINVALIDSCHEMA    CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE        := 6368;

    
    
    

    


















    PROCEDURE VALSCHEMA
    (
        IXMDOCUMENT IN  XMLTYPE,
        ISBSCHEMA   IN  VARCHAR2
    )
    IS
        
        
        
        XMSCHEMA   XMLTYPE;
    BEGIN
    
        XMSCHEMA := IXMDOCUMENT.CREATESCHEMABASEDXML( ISBSCHEMA );

        XMSCHEMA.SCHEMAVALIDATE;
        
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR( CNUINVALIDSCHEMA );
            UT_TRACE.TRACE( 'Error: '||SQLERRM, 1 );
            RAISE EX.CONTROLLED_ERROR;
    END VALSCHEMA;

    
    
    

    













    FUNCTION FSBVERSION
    RETURN VARCHAR2 IS
    BEGIN

        RETURN CSBVERSION;
        
    EXCEPTION
        WHEN LOGIN_DENIED OR PKCONSTANTE.EXERROR_LEVEL2 OR EX.CONTROLLED_ERROR THEN
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBVERSION;

    

















    PROCEDURE PARSE
    (
        IXMDOCUMENT     IN         XMLTYPE,
        ISBSCHEMA       IN         VARCHAR2,
        ORCDOMDOCUMENT  OUT NOCOPY DBMS_XMLDOM.DOMDOCUMENT
    )
    IS
    BEGIN
    
        
        IF ( ISBSCHEMA IS NOT NULL ) THEN

            VALSCHEMA( IXMDOCUMENT, ISBSCHEMA );

        END IF;

        
        ORCDOMDOCUMENT := DBMS_XMLDOM.NEWDOMDOCUMENT( IXMDOCUMENT );

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR( CNUINVALIDXML );
            RAISE EX.CONTROLLED_ERROR;
    END PARSE;

    

















    PROCEDURE PARSE
    (
        ISBXML          IN         VARCHAR2,
        ISBSCHEMA       IN         VARCHAR2,
        ORCDOMDOCUMENT  OUT NOCOPY DBMS_XMLDOM.DOMDOCUMENT
    )
    IS
    BEGIN
    
        PARSE( XMLTYPE(ISBXML), ISBSCHEMA, ORCDOMDOCUMENT );
        
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR( CNUINVALIDXML );
            RAISE EX.CONTROLLED_ERROR;
    END PARSE;

    

















    PROCEDURE PARSE
    (
        ICLXML          IN         CLOB,
        ISBSCHEMA       IN         VARCHAR2,
        ORCDOMDOCUMENT  OUT NOCOPY DBMS_XMLDOM.DOMDOCUMENT
    )
    IS
    BEGIN

        PARSE( XMLTYPE(ICLXML), ISBSCHEMA, ORCDOMDOCUMENT );
        
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR( CNUINVALIDXML );
            RAISE EX.CONTROLLED_ERROR;
    END PARSE;

    


















    PROCEDURE PARSE
    (
        IBFXML          IN         BFILE,
        ISBCHARSET      IN         VARCHAR2,
        ISBSCHEMA       IN         VARCHAR2,
        ORCDOMDOCUMENT  OUT NOCOPY DBMS_XMLDOM.DOMDOCUMENT
    )
    IS
        
        
        
        SBFILEPATH  VARCHAR2(2000);
        SBFILENAME  VARCHAR2(2000);
    BEGIN
    
        DBMS_LOB.FILEGETNAME( IBFXML, SBFILEPATH, SBFILENAME );

        PARSE( XMLTYPE(IBFXML, NLS_CHARSET_ID(NVL(ISBCHARSET,CSBDEFAULT_CHARSET))),
               ISBSCHEMA,
               ORCDOMDOCUMENT );
               
    EXCEPTION
        WHEN DBMS_LOB.NOEXIST_DIRECTORY OR DBMS_LOB.INVALID_DIRECTORY THEN
            
            
            ERRORS.SETERROR( 900414, SBFILEPATH );
            RAISE EX.CONTROLLED_ERROR;
        WHEN DBMS_LOB.OPERATION_FAILED
        OR   DBMS_LOB.ACCESS_ERROR
        OR   DBMS_LOB.UNOPENED_FILE
        OR   DBMS_LOB.SECUREFILE_BADLOB
        OR   DBMS_LOB.OPEN_TOOMANY
        THEN
            
            ERRORS.SETERROR( 2169, SBFILENAME );
            RAISE EX.CONTROLLED_ERROR;
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR( CNUINVALIDXML );
            RAISE EX.CONTROLLED_ERROR;
    END PARSE;

END UT_XMLPARSE;