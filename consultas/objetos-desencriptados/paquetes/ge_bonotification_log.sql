
CREATE OR REPLACE PACKAGE BODY GE_BONOTIFICATION_LOG IS
   CSBVERSION CONSTANT VARCHAR2( 50 ) := 'SAO234144';
   CSOUTPUT_TEXT CONSTANT VARCHAR2( 1 ) := 'T';
   CSOUTPUT_CLOB CONSTANT VARCHAR2( 1 ) := 'C';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   FUNCTION INCREMENTPRINTING( INUNOTIFICATION_LOG_ID IN GE_NOTIFICATION_LOG.NOTIFICATION_LOG_ID%TYPE )
    RETURN NUMBER
    IS
      NUPRINTING NUMBER;
    BEGIN
      UPDATE ge_notification_log
        SET PRINT_NUMBER = nvl(PRINT_NUMBER,0) + 1,
        LAST_PRINT_DATE = ut_date.fdtSysdate
        WHERE notification_log_id = inuNotification_log_id
        returning PRINT_NUMBER INTO nuPrinting;
      RETURN NUPRINTING;
   END;
   FUNCTION GETOUTPUTCLOB( INUNOTIFICATION_LOG_ID IN GE_NOTIFICATION_LOG.NOTIFICATION_LOG_ID%TYPE )
    RETURN CLOB
    IS
    BEGIN
      RETURN DAGE_NOTIFICATION_LOG.FCLGETOUTPUT_CLOB( INUNOTIFICATION_LOG_ID );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   FUNCTION GETOUTPUTTEXT( INUNOTIFICATION_LOG_ID IN GE_NOTIFICATION_LOG.NOTIFICATION_LOG_ID%TYPE )
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN DAGE_NOTIFICATION_LOG.FSBGETOUTPUT_TEXT( INUNOTIFICATION_LOG_ID );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE GETOUTPUTNOTIFICATION( INUNOTIFICATION_LOG_ID IN GE_NOTIFICATION_LOG.NOTIFICATION_LOG_ID%TYPE, OOUTPUT OUT GE_NOTIFICATION_LOG.OUTPUT%TYPE, OOUTPUT_CLOB OUT GE_NOTIFICATION_LOG.OUTPUT_CLOB%TYPE, OOUTPUT_TEXT OUT GE_NOTIFICATION_LOG.OUTPUT_TEXT%TYPE )
    IS
      RCNOTIFICATION_LOG DAGE_NOTIFICATION_LOG.STYGE_NOTIFICATION_LOG;
    BEGIN
      UT_TRACE.TRACE( 'INICIO: GE_BONotification_Log.GetOutputNotification', 3 );
      IF ( INUNOTIFICATION_LOG_ID IS NOT NULL AND INUNOTIFICATION_LOG_ID > 0 ) THEN
         DAGE_NOTIFICATION_LOG.GETRECORD( INUNOTIFICATION_LOG_ID, RCNOTIFICATION_LOG );
         OOUTPUT := RCNOTIFICATION_LOG.OUTPUT;
         IF RCNOTIFICATION_LOG.OUTPUT = CSOUTPUT_CLOB THEN
            OOUTPUT_CLOB := RCNOTIFICATION_LOG.OUTPUT_CLOB;
          ELSE
            OOUTPUT_TEXT := RCNOTIFICATION_LOG.OUTPUT_TEXT;
         END IF;
      END IF;
      UT_TRACE.TRACE( 'FIN: GE_BONotification_Log.GetOutputNotification', 3 );
   END GETOUTPUTNOTIFICATION;
   FUNCTION GETDESCNOTIFICATYPE( INUNOTIFICATION_LOG_ID IN GE_NOTIFICATION_LOG.NOTIFICATION_LOG_ID%TYPE )
    RETURN GE_NOTIFICATION_TYPE.DESCRIPTION%TYPE
    IS
      NUNOTIFICATION_TYPE_ID GE_NOTIFICATION_LOG.NOTIFICATION_TYPE_ID%TYPE;
    BEGIN
      NUNOTIFICATION_TYPE_ID := DAGE_NOTIFICATION_LOG.FNUGETNOTIFICATION_TYPE_ID( INUNOTIFICATION_LOG_ID );
      RETURN DAGE_NOTIFICATION_TYPE.FSBGETDESCRIPTION( NUNOTIFICATION_TYPE_ID );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   FUNCTION FNUJOINNOTIFICATIONFILES( ISBNOTIFYLOGIDS IN VARCHAR2 )
    RETURN NUMBER
    IS
    BEGIN
      RETURN GE_BCNOTIFICATION_LOG.FNUJOINNOTIFICATIONFILES( ISBNOTIFYLOGIDS );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
END GE_BONOTIFICATION_LOG;
/


