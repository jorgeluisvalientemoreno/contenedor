
CREATE OR REPLACE PACKAGE BODY MO_BOREGINCLUDEFEATURE IS
   TYPE TYTBINCLBYPLAN IS TABLE OF DACC_INCLUDED.TYTBCC_INCLUDED INDEX BY BINARY_INTEGER;
   CSBVERSION CONSTANT VARCHAR2( 250 ) := 'SAO161080';
   CSBCOMPONENT_ID CONSTANT GE_BOINSTANCECONTROL.STYSBNAME := 'COMPONENT_ID';
   CSBCOMPONENT_TYPE_ID CONSTANT GE_BOINSTANCECONTROL.STYSBNAME := 'COMPONENT_TYPE_ID';
   CSBCOMPONENT_NUMBER CONSTANT GE_BOINSTANCECONTROL.STYSBNAME := 'COMPONENT_NUMBER';
   CSBCHILD_COMPONENT_ID CONSTANT GE_BOINSTANCECONTROL.STYSBNAME := 'CHILD_COMPONENT_ID';
   CSBC_INCLUDED_COMPONENT CONSTANT GE_BOINSTANCECONTROL.STYSBNAME := 'C_INCLUDED_COMPONENT';
   GNUSTATUSREGCOMP MO_COMPONENT.MOTIVE_STATUS_ID%TYPE;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE INIT
    IS
    BEGIN
      GNUSTATUSREGCOMP := GE_BOPARAMETER.FNUGET( MO_BOCONSTANTS.CSBSTATUS_REG_COMP );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   FUNCTION FNUGETINCFEATURESID( ITBINCLUDEDFEATURE IN CC_BCINCLUDED.TYTBINCLUDED_FEATURES, INUCOMPTYPE IN PS_COMPONENT_TYPE.COMPONENT_TYPE_ID%TYPE, INUCLASSSERV IN PS_CLASS_SERVICE.CLASS_SERVICE_ID%TYPE, ISBTAGNAME IN MO_COMPONENT.TAG_NAME%TYPE )
    RETURN CC_INCLUDED_FEATURES.INCLUDED_FEATURES_ID%TYPE
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicia MO_BORegIncludeFeature.fnuGetIncFeaturesId TipoComp[' || INUCOMPTYPE || '] ClaseServ[' || INUCLASSSERV || '] TagName[' || ISBTAGNAME || ']', 5 );
      IF ( INUCLASSSERV IS NULL ) THEN
         FOR NUINDEX IN ITBINCLUDEDFEATURE.FIRST..ITBINCLUDEDFEATURE.LAST
          LOOP
            IF ( INUCOMPTYPE = ITBINCLUDEDFEATURE( NUINDEX ).COMPONENT_TYPE_ID ) AND ( ISBTAGNAME = ITBINCLUDEDFEATURE( NUINDEX ).TAG_NAME ) AND ( ITBINCLUDEDFEATURE( NUINDEX ).CLASS_SERVICE_ID IS NULL ) THEN
               UT_TRACE.TRACE( 'Encontro included_features_id[' || ITBINCLUDEDFEATURE( NUINDEX ).INCLUDED_FEATURES_ID || ']', 14 );
               RETURN ITBINCLUDEDFEATURE( NUINDEX ).INCLUDED_FEATURES_ID;
            END IF;
         END LOOP;
       ELSE
         FOR NUINDEX IN ITBINCLUDEDFEATURE.FIRST..ITBINCLUDEDFEATURE.LAST
          LOOP
            IF ( INUCOMPTYPE = ITBINCLUDEDFEATURE( NUINDEX ).COMPONENT_TYPE_ID ) AND ( ISBTAGNAME = ITBINCLUDEDFEATURE( NUINDEX ).TAG_NAME ) AND ( INUCLASSSERV = NVL( ITBINCLUDEDFEATURE( NUINDEX ).CLASS_SERVICE_ID, INUCLASSSERV ) ) THEN
               UT_TRACE.TRACE( 'Encontro included_features_id[' || ITBINCLUDEDFEATURE( NUINDEX ).INCLUDED_FEATURES_ID || ']', 14 );
               RETURN ITBINCLUDEDFEATURE( NUINDEX ).INCLUDED_FEATURES_ID;
            END IF;
         END LOOP;
      END IF;
      UT_TRACE.TRACE( 'Termina MO_BORegIncludeFeature.fnuGetIncFeaturesId [No Encontro Composicion]', 5 );
      RETURN NULL;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE SETINCLUDEDFEATURE
    IS
      TBINSTANCEHIERARCHY GE_BOINSTANCECONTROL.TYTBINSTANCEHIERARCHY;
      TBINCLUDEDFEATURE CC_BCINCLUDED.TYTBINCLUDED_FEATURES;
      TBTMPINCLFEATURE CC_BCINCLUDED.TYTBINCLUDED_FEATURES;
      TBGROUP GE_BOINSTANCECONTROL.TYTBSBNAME;
      NUATTRIBUTE GE_BOINSTANCECONTROL.STYNUINDEX;
      NUINDEX GE_BOINSTANCECONTROL.STYNUINDEX;
      SBINCLUDED GE_BOINSTANCECONTROL.STYSBVALUE;
      SBOBJECTTYPE GE_BOINSTANCECONTROL.STYSBVALUE;
      SBCOMPTYPE GE_BOINSTANCECONTROL.STYSBVALUE;
      SBCLASSSERV GE_BOINSTANCECONTROL.STYSBVALUE;
      SBTAGNAME GE_BOINSTANCECONTROL.STYSBVALUE;
      NUINCFEATURESID CC_INCLUDED_FEATURES.INCLUDED_FEATURES_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'Inicia MO_BORegIncludeFeature.SetIncludedFeature ', 3 );
      IF NOT ( GE_BOINSTANCECONTROL.FBLGETENTITYGROUP( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, CSBCC_COMMERCIAL_PLAN, TBGROUP ) ) THEN
         RETURN;
      END IF;
      FOR NUGROUPID IN TBGROUP.FIRST..TBGROUP.LAST
       LOOP
         IF ( GE_BOINSTANCECONTROL.FBLACCKEYATTRIBUTESTACK( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, TBGROUP( NUGROUPID ), CSBCC_COMMERCIAL_PLAN, CSBINCLUDED_ID, NUATTRIBUTE ) ) THEN
            GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, TBGROUP( NUGROUPID ), CSBCC_COMMERCIAL_PLAN, CSBINCLUDED_ID, SBINCLUDED );
            IF ( CC_BCINCLUDED.FBLGETINCLUDEDFEATURE( SBINCLUDED, TBTMPINCLFEATURE ) ) THEN
               FOR NUINCFECTID IN TBTMPINCLFEATURE.FIRST..TBTMPINCLFEATURE.LAST
                LOOP
                  TBINCLUDEDFEATURE( TBINCLUDEDFEATURE.COUNT ) := TBTMPINCLFEATURE( NUINCFECTID );
               END LOOP;
            END IF;
         END IF;
      END LOOP;
      IF TBINCLUDEDFEATURE.COUNT = 0 THEN
         RETURN;
      END IF;
      GE_BOINSTANCECONTROL.INSTANCEHIERARCHY( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, TBINSTANCEHIERARCHY );
      IF TBINSTANCEHIERARCHY.COUNT = 0 THEN
         RETURN;
      END IF;
      NUINDEX := TBINSTANCEHIERARCHY.FIRST;
      WHILE ( NUINDEX IS NOT NULL )
       LOOP
         GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( TBINSTANCEHIERARCHY( NUINDEX ).SBINSTANCE, NULL, MO_BOUNCOMPOSITIONCONSTANTS.CSBPROCESS_ENTITY, MO_BOUNCOMPOSITIONCONSTANTS.CSBOBJECT_TYPE, SBOBJECTTYPE );
         IF ( TO_NUMBER( SBOBJECTTYPE ) = MO_BOCONFIGURATIONCONTROL.FNUGETCOMPONENTOBJECT ) THEN
            SBCLASSSERV := NULL;
            IF ( GE_BOINSTANCECONTROL.FBLACCKEYATTRIBUTESTACK( TBINSTANCEHIERARCHY( NUINDEX ).SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBCLASS_SERVICE_ID, NUATTRIBUTE ) ) THEN
               GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( TBINSTANCEHIERARCHY( NUINDEX ).SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBCLASS_SERVICE_ID, SBCLASSSERV );
            END IF;
            GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( TBINSTANCEHIERARCHY( NUINDEX ).SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, PR_BOCONSTANTS.COMPONENT_TYPE_ID, SBCOMPTYPE );
            GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( TBINSTANCEHIERARCHY( NUINDEX ).SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBTAG_NAME, SBTAGNAME );
            NUINCFEATURESID := FNUGETINCFEATURESID( TBINCLUDEDFEATURE, SBCOMPTYPE, SBCLASSSERV, SBTAGNAME );
            IF ( NUINCFEATURESID IS NOT NULL ) THEN
               GE_BOINSTANCECONTROL.ADDATTRIBUTE( TBINSTANCEHIERARCHY( NUINDEX ).SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBINCLUDED_FEATURES_ID, NUINCFEATURESID, TRUE );
            END IF;
         END IF;
         NUINDEX := TBINSTANCEHIERARCHY.NEXT( NUINDEX );
      END LOOP;
      UT_TRACE.TRACE( 'Termina MO_BORegIncludeFeature.SetIncludedFeature ', 3 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE GENINCLUDEDCOMP
    IS
      TBINSTANCEHIERARCHY GE_BOINSTANCECONTROL.TYTBINSTANCEHIERARCHY;
      TBINCLUDED DACC_INCLUDED.TYTBCC_INCLUDED;
      TBINCLBYPLAN TYTBINCLBYPLAN;
      TBGROUP GE_BOINSTANCECONTROL.TYTBSBNAME;
      SBINSTANCE GE_BOINSTANCECONTROL.STYSBNAME;
      SBMOTIVEINSTANCE GE_BOINSTANCECONTROL.STYSBNAME;
      NUATTRIBUTE GE_BOINSTANCECONTROL.STYNUINDEX;
      NUINDEX GE_BOINSTANCECONTROL.STYNUINDEX;
      SBINCLUDED GE_BOINSTANCECONTROL.STYSBVALUE;
      SBOBJECTTYPE GE_BOINSTANCECONTROL.STYSBVALUE;
      SBCOMPTYPE GE_BOINSTANCECONTROL.STYSBVALUE;
      SBCLASSSERV GE_BOINSTANCECONTROL.STYSBVALUE;
      SBTAGNAME GE_BOINSTANCECONTROL.STYSBVALUE;
      SBCOMMPLANID GE_BOINSTANCECONTROL.STYSBVALUE;
      NUGROUPID BINARY_INTEGER;
      IDX BINARY_INTEGER;
      NUINCFEATURESID CC_INCLUDED_FEATURES.INCLUDED_FEATURES_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'Inicia MO_BORegIncludeFeature.GenIncludedComp ', 3 );
      TBINCLBYPLAN.DELETE;
      TBINCLUDED.DELETE;
      IF NOT ( GE_BOINSTANCECONTROL.FBLGETENTITYGROUP( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, CSBCC_COMMERCIAL_PLAN, TBGROUP ) ) THEN
         RETURN;
      END IF;
      NUGROUPID := TBGROUP.FIRST;
      WHILE NUGROUPID IS NOT NULL
       LOOP
         IF ( GE_BOINSTANCECONTROL.FBLACCKEYATTRIBUTESTACK( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, TBGROUP( NUGROUPID ), CSBCC_COMMERCIAL_PLAN, CSBINCLUDED_ID, NUATTRIBUTE ) ) THEN
            GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, TBGROUP( NUGROUPID ), CSBCC_COMMERCIAL_PLAN, CSBINCLUDED_ID, SBINCLUDED );
            GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, TBGROUP( NUGROUPID ), CSBCC_COMMERCIAL_PLAN, CSBCOMMERCIAL_PLAN_ID, SBCOMMPLANID );
            IF ( DACC_INCLUDED.FBLEXIST( SBINCLUDED ) ) THEN
               TBINCLBYPLAN( SBCOMMPLANID )( SBINCLUDED ) := DACC_INCLUDED.FRCGETRECORD( SBINCLUDED );
            END IF;
         END IF;
         NUGROUPID := TBGROUP.NEXT( NUGROUPID );
      END LOOP;
      IF TBINCLBYPLAN.COUNT = 0 THEN
         RETURN;
      END IF;
      GE_BOINSTANCECONTROL.INSTANCEHIERARCHY( MO_BOUNCOMPOSITIONCONSTANTS.CSBWORK_INSTANCE, TBINSTANCEHIERARCHY );
      IF TBINSTANCEHIERARCHY.COUNT = 0 THEN
         RETURN;
      END IF;
      NUINDEX := TBINSTANCEHIERARCHY.FIRST;
      WHILE ( NUINDEX IS NOT NULL )
       LOOP
         GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( TBINSTANCEHIERARCHY( NUINDEX ).SBINSTANCE, NULL, MO_BOUNCOMPOSITIONCONSTANTS.CSBPROCESS_ENTITY, MO_BOUNCOMPOSITIONCONSTANTS.CSBOBJECT_TYPE, SBOBJECTTYPE );
         IF ( TO_NUMBER( SBOBJECTTYPE ) = MO_BOCONFIGURATIONCONTROL.FNUGETMOTIVEOBJECT ) THEN
            SBMOTIVEINSTANCE := TBINSTANCEHIERARCHY( NUINDEX ).SBINSTANCE;
            GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE( SBMOTIVEINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_MOTIVE, CSBCOMMERCIAL_PLAN_ID, SBCOMMPLANID );
            IF ( TBINCLBYPLAN.EXISTS( SBCOMMPLANID ) ) THEN
               TBINCLUDED := TBINCLBYPLAN( SBCOMMPLANID );
               IDX := TBINCLUDED.FIRST;
               WHILE ( IDX IS NOT NULL )
                LOOP
                  MO_BOUNCOMPOSITIONUTIL.GETINSTANCENAME( CSBC_INCLUDED_COMPONENT, SBINSTANCE );
                  MO_BOUNCOMPOSITIONUTIL.CREATEINSTANCE( SBMOTIVEINSTANCE, SBINSTANCE, MO_BOCONFIGURATIONCONTROL.NUPROCESSOBJECT, TBINCLUDED( IDX ).INCLUDED_ID, NULL, GE_BOCONSTANTS.INSERT_ );
                  GE_BOINSTANCECONTROL.LOADENTITYATTRIBUTES( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT );
                  GE_BOINSTANCECONTROL.ADDATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBCOMPONENT_ID, MO_BOSEQUENCES.FNUGETCOMPONENTID, TRUE );
                  GE_BOINSTANCECONTROL.ADDATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBCOMPONENT_TYPE_ID, TBINCLUDED( IDX ).COMPONENT_TYPE_ID, TRUE );
                  GE_BOINSTANCECONTROL.ADDATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBCLASS_SERVICE_ID, TBINCLUDED( IDX ).CLASS_SERVICE_ID, TRUE );
                  GE_BOINSTANCECONTROL.ADDATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBCOMPONENT_NUMBER, ( 2 + IDX ), TRUE );
                  GE_BOINSTANCECONTROL.ADDATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, CSBTAG_NAME, CSBC_INCLUDED_COMPONENT, TRUE );
                  GE_BOINSTANCECONTROL.ADDATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBMOTIVE_STATUS_ID, GNUSTATUSREGCOMP, TRUE );
                  GE_BOINSTANCECONTROL.ADDATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBSERVICE_NUMBER, TBINCLUDED( IDX ).INCLUDED_ID, TRUE );
                  MO_BOUNCOMPOSITIONUTIL.ADDMIRRORATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBPACKAGE_ID, MO_BOCONSTANTS.CSBMO_PACKAGES, MO_BOCONSTANTS.CSBPACKAGE_ID, MO_BOUNCOMPOSITIONCONSTANTS.CNUNORMAL_MIRROR );
                  MO_BOUNCOMPOSITIONUTIL.ADDMIRRORATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBMOTIVE_ID, MO_BOCONSTANTS.CSBMO_MOTIVE, MO_BOCONSTANTS.CSBMOTIVE_ID, MO_BOUNCOMPOSITIONCONSTANTS.CNUNORMAL_MIRROR );
                  MO_BOUNCOMPOSITIONUTIL.ADDMIRRORATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBMOTIVE_TYPE_ID, MO_BOCONSTANTS.CSBMO_MOTIVE, MO_BOCONSTANTS.CSBMOTIVE_TYPE_ID, MO_BOUNCOMPOSITIONCONSTANTS.CNUNORMAL_MIRROR );
                  MO_BOUNCOMPOSITIONUTIL.ADDMIRRORATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBPRODUCT_MOTIVE_ID, MO_BOCONSTANTS.CSBMO_MOTIVE, MO_BOCONSTANTS.CSBPRODUCT_MOTIVE_ID, MO_BOUNCOMPOSITIONCONSTANTS.CNUNORMAL_MIRROR );
                  MO_BOUNCOMPOSITIONUTIL.ADDMIRRORATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBMOCATEGORY_ID, MO_BOCONSTANTS.CSBMO_MOTIVE, MO_BOCONSTANTS.CSBMOCATEGORY_ID, MO_BOUNCOMPOSITIONCONSTANTS.CNUNORMAL_MIRROR );
                  MO_BOUNCOMPOSITIONUTIL.ADDMIRRORATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBMOSUBCATEGORY_ID, MO_BOCONSTANTS.CSBMO_MOTIVE, MO_BOCONSTANTS.CSBMOSUBCATEGORY_ID, MO_BOUNCOMPOSITIONCONSTANTS.CNUNORMAL_MIRROR );
                  GE_BOINSTANCECONTROL.LOADENTITYATTRIBUTES( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMP_LINK );
                  MO_BOUNCOMPOSITIONUTIL.ADDMIRRORATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMP_LINK, CSBCHILD_COMPONENT_ID, MO_BOCONSTANTS.CSBMO_COMPONENT, MO_BOCONSTANTS.CSBCOMPONENT_ID, MO_BOUNCOMPOSITIONCONSTANTS.CNUCOMPONENT_LINK_MIRROR );
                  MO_BOUNCOMPOSITIONUTIL.ADDMIRRORATTRIBUTE( SBINSTANCE, NULL, MO_BOCONSTANTS.CSBMO_COMP_LINK, MO_BOCONSTANTS.CSBMOTIVE_ID, MO_BOCONSTANTS.CSBMO_MOTIVE, MO_BOCONSTANTS.CSBMOTIVE_ID, MO_BOUNCOMPOSITIONCONSTANTS.CNUCOMPONENT_LINK_MIRROR );
                  IDX := TBINCLUDED.NEXT( IDX );
               END LOOP;
            END IF;
         END IF;
         NUINDEX := TBINSTANCEHIERARCHY.NEXT( NUINDEX );
      END LOOP;
      UT_TRACE.TRACE( 'Termina MO_BORegIncludeFeature.GenIncludedComp ', 3 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
 BEGIN
   INIT;
END MO_BOREGINCLUDEFEATURE;
/


