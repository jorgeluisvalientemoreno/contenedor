CREATE OR REPLACE PACKAGE BODY GI_BOERRORS IS
   CSBVERSION CONSTANT VARCHAR2( 250 ) := 'SAO133104';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE SETERROR( INUERRORCODEID IN GE_MESSAGE.MESSAGE_ID%TYPE, ISBARGUMENT IN VARCHAR2 := NULL )
    IS
      SBERRORCODECLASS GE_MESSAGE.CLASS%TYPE;
      BLPROCESSXML BOOLEAN;
      CSBCLASS_ERROR GE_MESSAGE.CLASS%TYPE := 'E';
    BEGIN
      UT_TRACE.TRACE( 'Inicia GI_BOErrors.SetError inuErrorCodeId[' || INUERRORCODEID || ']', 10 );
      BLPROCESSXML := MO_BOREGISTERWITHXML.FBLISREGISTERXML;
      SBERRORCODECLASS := DAGE_MESSAGE.FSBGETCLASS( INUERRORCODEID );
      IF ( NOT BLPROCESSXML ) THEN
         UT_TRACE.TRACE( 'Ejecucion desde GUI', 12 );
         IF ( ISBARGUMENT IS NULL ) THEN
            GE_BOERRORS.SETERRORCODE( INUERRORCODEID );
          ELSE
            GE_BOERRORS.SETERRORCODEARGUMENT( INUERRORCODEID, ISBARGUMENT );
         END IF;
       ELSE
         UT_TRACE.TRACE( 'No se esta ejecutando desde GUI', 12 );
         IF ( SBERRORCODECLASS = CSBCLASS_ERROR ) THEN
            IF ( ISBARGUMENT IS NULL ) THEN
               GE_BOERRORS.SETERRORCODE( INUERRORCODEID );
             ELSE
               GE_BOERRORS.SETERRORCODEARGUMENT( INUERRORCODEID, ISBARGUMENT );
            END IF;
         END IF;
      END IF;
      UT_TRACE.TRACE( 'Finaliza GI_BOErrors.SetError', 10 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END SETERROR;
   PROCEDURE SETERRORCODE( INUERRORCODEID IN GE_MESSAGE.MESSAGE_ID%TYPE )
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicia GI_BOErrors.SetErrorCode inuErrorCodeId[' || INUERRORCODEID || ']', 10 );
      SETERROR( INUERRORCODEID, NULL );
      UT_TRACE.TRACE( 'Finaliza GI_BOErrors.SetErrorCode', 10 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END SETERRORCODE;
   PROCEDURE SETERRORCODEARGUMENT( INUERRORCODEID IN GE_MESSAGE.MESSAGE_ID%TYPE, ISBARGUMENT IN VARCHAR2 := NULL )
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicia GI_BOErrors.SetErrorCodeArgument inuErrorCodeId[' || INUERRORCODEID || '] isbArgument[' || ISBARGUMENT || ']', 10 );
      SETERROR( INUERRORCODEID, ISBARGUMENT );
      UT_TRACE.TRACE( 'Finaliza GI_BOErrors.SetErrorCodeArgument', 10 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END SETERRORCODEARGUMENT;
END GI_BOERRORS;
/


