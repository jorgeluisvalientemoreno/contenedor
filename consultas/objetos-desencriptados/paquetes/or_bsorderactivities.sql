CREATE OR REPLACE PACKAGE BODY OR_BSORDERACTIVITIES IS
   CSBVERSION CONSTANT VARCHAR2( 20 ) := 'SAO165504';
   CNUERR_1422 CONSTANT GE_MESSAGE.MESSAGE_ID%TYPE := 1422;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE CREATEACTIVITY( INUITEMSID IN GE_ITEMS.ITEMS_ID%TYPE, INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE, INUMOTIVEID IN MO_MOTIVE.MOTIVE_ID%TYPE, INUCOMPONENTID IN MO_COMPONENT.COMPONENT_ID%TYPE, INUINSTANCEID IN WF_INSTANCE.INSTANCE_ID%TYPE, INUADDRESSID IN AB_ADDRESS.ADDRESS_ID%TYPE, INUELEMENTID IN IF_NODE.ID%TYPE, INUSUBSCRIBERID IN GE_SUBSCRIBER.SUBSCRIBER_ID%TYPE, INUSUBSCRIPTIONID IN SUSCRIPC.SUSCCODI%TYPE, INUPRODUCTID IN PR_PRODUCT.PRODUCT_ID%TYPE, INUOPERSECTORID IN OR_OPERATING_SECTOR.OPERATING_SECTOR_ID%TYPE, INUOPERUNITID IN OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE, IDTEXECESTIMDATE IN OR_ORDER_ACTIVITY.EXEC_ESTIMATE_DATE%TYPE, INUPROCESSID IN GE_PROCESS.PROCESS_ID%TYPE, ISBCOMMENT IN OR_ORDER_ACTIVITY.COMMENT_%TYPE, IBLPROCESSORDER IN BOOLEAN, ONUORDERID OUT OR_ORDER.ORDER_ID%TYPE, IONUORDERACTIVITYID IN OUT OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE, ONUERRORCODE OUT NUMBER, OSBERRORMESSAGE OUT VARCHAR2 )
    IS
      SBGROUPASSIGN GE_PRIORITY.GROUP_ASSIGN_ACTIV%TYPE := NULL;
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      OR_BOORDERACTIVITIES.CREATEACTIVITY( INUITEMSID, INUPACKAGEID, INUMOTIVEID, INUCOMPONENTID, INUINSTANCEID, INUADDRESSID, INUELEMENTID, INUSUBSCRIBERID, INUSUBSCRIPTIONID, INUPRODUCTID, INUOPERSECTORID, INUOPERUNITID, IDTEXECESTIMDATE, INUPROCESSID, ISBCOMMENT, IBLPROCESSORDER, SBGROUPASSIGN, ONUORDERID, IONUORDERACTIVITYID );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END;
   PROCEDURE GETACTIVITIESBYORDER( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, ORFACTIVITIES OUT CONSTANTS.TYREFCURSOR, ONUERRORCODE OUT NUMBER, OSBERRORMESSAGE OUT VARCHAR2 )
    IS
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      OR_BOORDERACTIVITIES.GETACTIVITIESBYORDER( INUORDERID, ORFACTIVITIES );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END;
   PROCEDURE CHANGETASKTYPE( ISBTASKTYPECHG IN GE_BOUTILITIES.STYSTATEMENT, ONUERRORCODE OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE, OSBERRORMESSAGE OUT GE_ERROR_LOG.DESCRIPTION%TYPE )
    IS
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      OR_BOORDERACTIVITIES.READXMLEXCHANGETASKTYPE( ISBTASKTYPECHG );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END;
   PROCEDURE CHANGETSKTYPACTIVITIESORDER( INUORIGINTASKTYPEID IN OR_TASK_TYPE.TASK_TYPE_ID%TYPE, INUORIGINORDERACTIVITYID IN OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE, INUORDERID IN OUT OR_ORDER.ORDER_ID%TYPE, INUNEWTASKTYPEID IN OR_TASK_TYPE.TASK_TYPE_ID%TYPE, INUACTIVITYTOCREATE IN GE_ITEMS.ITEMS_ID%TYPE, ONUERRORCODE OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE, OSBERRORMESSAGE OUT GE_ERROR_LOG.DESCRIPTION%TYPE )
    IS
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      OR_BOORDERACTIVITIES.CHANGETSKTYPACTIVITIESORDER( INUORIGINTASKTYPEID, INUORIGINORDERACTIVITYID, INUORDERID, INUNEWTASKTYPEID, INUACTIVITYTOCREATE );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END;
   PROCEDURE GETIDORDERSBYPACKAGE( INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE, OCUORDERS OUT CONSTANTS.TYREFCURSOR, ONUERRORCODE OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE, OSBERRORMESSAGE OUT GE_ERROR_LOG.DESCRIPTION%TYPE )
    IS
      PROCEDURE VALIDINITDATA( INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE )
       IS
       BEGIN
         IF ( INUPACKAGEID IS NULL ) THEN
            GE_BOERRORS.SETERRORCODEARGUMENT( CNUERR_1422, 'inuPackageId' );
         END IF;
         DAMO_PACKAGES.ACCKEY( INUPACKAGEID );
      END VALIDINITDATA;
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      VALIDINITDATA( INUPACKAGEID );
      OR_BOORDERACTIVITIES.GETIDORDERSBYPACKAGE( INUPACKAGEID, OCUORDERS );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END GETIDORDERSBYPACKAGE;
   PROCEDURE GETBASICDATABYORDER( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, ORFORDER OUT CONSTANTS.TYREFCURSOR, ORFORDERACTIVITY OUT CONSTANTS.TYREFCURSOR, ONUERRORCODE OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE, OSBERRORMESSAGE OUT GE_ERROR_LOG.DESCRIPTION%TYPE )
    IS
      PROCEDURE VALIDINITDATA( INUORDERID IN OR_ORDER.ORDER_ID%TYPE )
       IS
       BEGIN
         IF ( INUORDERID IS NULL ) THEN
            GE_BOERRORS.SETERRORCODEARGUMENT( CNUERR_1422, 'inuOrderId' );
         END IF;
         DAOR_ORDER.ACCKEY( INUORDERID );
      END VALIDINITDATA;
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      VALIDINITDATA( INUORDERID );
      OR_BOORDERACTIVITIES.GEBASICDATABYORDER( INUORDERID, ORFORDER, ORFORDERACTIVITY );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END GETBASICDATABYORDER;
   PROCEDURE GETORDERACTIVITIES( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, OTBACTIVITIES OUT OR_BCORDERACTIVITIES.TYTBORDERACTIVITY, ONUERRORCODE OUT GE_MESSAGE.MESSAGE_ID%TYPE, OSBERRORMESSAGE IN OUT GE_ERROR_LOG.DESCRIPTION%TYPE )
    IS
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      OTBACTIVITIES.DELETE;
      OR_BOORDER.VALORDEREXISTENCE( INUORDERID );
      OR_BOORDERACTIVITIES.GETORDERACTIVITIES( INUORDERID, OTBACTIVITIES );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END GETORDERACTIVITIES;
END OR_BSORDERACTIVITIES;
/


