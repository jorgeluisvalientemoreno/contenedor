CREATE OR REPLACE PACKAGE BODY GE_BSITEMSCARGUE IS
   CSBVERSION CONSTANT VARCHAR2( 20 ) := 'SAO186228';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE LOADITEMS( SBDIRECTORY IN GE_DIRECTORY.PATH%TYPE, SBFILENAME IN VARCHAR2, ONUERRORCODE OUT NUMBER, OSBERRORMESSAGE OUT VARCHAR2 )
    IS
      SBINCONSISTENCIA VARCHAR2( 1 ) := NULL;
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      GE_BOITEMSCARGUE.PROCESARCARGUE( SBDIRECTORY, SBFILENAME, SBINCONSISTENCIA );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END LOADITEMS;
   PROCEDURE LOADANDACCEPTITEMS( ISBDIRECTORY IN GE_DIRECTORY.PATH%TYPE, ISBFILENAME IN VARCHAR2, ISBOPERATINGUNITS IN VARCHAR2, ISBDOCUMENTORECEP IN GE_ITEMS_DOCUMENTO.DOCUMENTO_EXTERNO%TYPE, ONUERRORCODE OUT NUMBER, OSBERRORMESSAGE OUT VARCHAR2 )
    IS
      SBINCONSISTENCIA VARCHAR2( 1 ) := NULL;
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      GE_BOITEMSCARGUE.PROCESARCARGUE( ISBDIRECTORY, ISBFILENAME, SBINCONSISTENCIA );
      IF ISBOPERATINGUNITS IS NOT NULL THEN
         GE_BOACEPTARITEMS.ACEPTACIONAUTOMCARGA( ISBOPERATINGUNITS, ISBDOCUMENTORECEP );
      END IF;
      IF ( SBINCONSISTENCIA = GE_BOCONSTANTS.CSBYES ) THEN
         GE_BOERRORS.SETERRORCODE( GE_BOITEMSCONSTANTS.CNUMENGENINCONSISTENCIA );
      END IF;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END LOADANDACCEPTITEMS;
   PROCEDURE LOADITEMSFROMXML( ICLXMLCODE IN OUT CLOB, ONUERRORCODE OUT NUMBER, OSBERRORMESSAGE OUT VARCHAR2 )
    IS
    BEGIN
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      GE_BOITEMSCARGUE.LOADITEMSFROMXML( ICLXMLCODE );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END LOADITEMSFROMXML;
   PROCEDURE LOADACCEPTITEM( ICLXMLLOADACCEPTITEMS IN CLOB, ONUERRORCODE OUT GE_MESSAGE.MESSAGE_ID%TYPE, OSBERRORMESSAGE OUT GE_ERROR_LOG.DESCRIPTION%TYPE )
    IS
    BEGIN
      UT_TRACE.TRACE( 'INICIO GE_BSItemsCargue.LoadAcceptItem', 1 );
      GE_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      GE_BOITEMSCARGUE.LOADACCEPTITEM( ICLXMLLOADACCEPTITEMS );
      UT_TRACE.TRACE( 'FIN GE_BSItemsCargue.LoadAcceptItem', 1 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         UT_TRACE.TRACE( 'EXCEPTION CONTROLLED_ERROR GE_BSItemsCargue.LoadAcceptItem', 1 );
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         UT_TRACE.TRACE( 'EXCEPTION OTHERS ERROR GE_BSItemsCargue.LoadAcceptItem', 1 );
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END LOADACCEPTITEM;
END GE_BSITEMSCARGUE;
/


