PACKAGE BODY PS_BCMotive_Action AS
    
    
    
    
    CSBVERSION  CONSTANT VARCHAR2(250)  := 'SAO201706';

    CSBSEMICOLON      CONSTANT VARCHAR2(10) := GE_BOCONSTANTS.CSBSEMICOLON;
    CSBEQUAL          CONSTANT VARCHAR2(10) := GE_BOCONSTANTS.CSBEQUAL;

    
    
    
    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;


    FUNCTION FTBMOTIVEACTIONBYSTATUSTYPE
        (
        INUMOTISTATUSTYPEID IN PS_MOTIVE_ACTION.MOTI_STATUS_TYPE_ID%TYPE,
        INUACTIONID         IN PS_MOTIVE_ACTION.ACTION_ID%TYPE
        )
    RETURN GE_TYTBVARCHAR2
    IS
       TBMOTIVEACTION   GE_TYTBVARCHAR2;
    BEGIN
        UT_TRACE.TRACE('Inicia Metodo PS_BCMotive_Action.ftbMotiveActionByStatusType',10);
        UT_TRACE.TRACE('Tipo Estado:['||INUMOTISTATUSTYPEID||']Acciï¿½n:['||INUACTIONID||']',11);

        SELECT CAST
            (
            MULTISET
                (
                SELECT  'MOTIVE_ACTION_ID'||CSBEQUAL||MOTIVE_ACTION_ID||CSBSEMICOLON||
                        'CURRENT_STATUS_ID'||CSBEQUAL||CURRENT_STATUS_ID||CSBSEMICOLON||
                        'NEXT_STATUS_ID'||CSBEQUAL||NEXT_STATUS_ID||CSBSEMICOLON||
                        'BEFORE_EXPRE_ID'||CSBEQUAL||BEFORE_EXPRE_ID||CSBSEMICOLON||
                        'AFTER_EXPRE_ID'||CSBEQUAL||AFTER_EXPRE_ID||CSBSEMICOLON||
                        'SEQUENCE_NUMBER'||CSBEQUAL||SEQUENCE_NUMBER||CSBSEMICOLON||
                        'MOTI_ENTITY_TYPE_ID'||CSBEQUAL||MOTI_ENTITY_TYPE_ID||CSBSEMICOLON||
                        'ENTITY_ATTRIBUTE_ID'||CSBEQUAL||ENTITY_ATTRIBUTE_ID||CSBSEMICOLON||
                        'ACTION_ID'||CSBEQUAL||ACTION_ID||CSBSEMICOLON||
                        'MOTI_STATUS_TYPE_ID'||CSBEQUAL||MOTI_STATUS_TYPE_ID||CSBSEMICOLON||
                        'MOTI_STATUS_RELATION'||CSBEQUAL||MOTI_STATUS_RELATION
                FROM PS_MOTIVE_ACTION
                WHERE ACTION_ID = INUACTIONID
                AND MOTI_STATUS_TYPE_ID = INUMOTISTATUSTYPEID
                ) AS GE_TYTBVARCHAR2
            )
        INTO TBMOTIVEACTION
        FROM DUAL;

        RETURN TBMOTIVEACTION;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;


    FUNCTION FBLEXISTSTATUSINTABLE
        (
        INUCURRENTSTATUSID  IN PS_MOTIVE_ACTION.CURRENT_STATUS_ID%TYPE,
        ITBMOTIVEACTION     IN GE_TYTBVARCHAR2
        )
    RETURN BOOLEAN
    IS
        CURSOR CUCURRENTSTATUSID
        IS
            SELECT UT_STRING.GETPARAMETERVALUE(A.ID,'CURRENT_STATUS_ID') CURRENT_STATUS_ID
            FROM TABLE(CAST(ITBMOTIVEACTION AS GE_TYTBVARCHAR2)) A
            WHERE UT_STRING.GETPARAMETERVALUE(A.ID,'CURRENT_STATUS_ID') = INUCURRENTSTATUSID
            AND ROWNUM = 1;

        NUCURRENTSTATUSID   PS_MOTIVE_ACTION.CURRENT_STATUS_ID%TYPE;
    BEGIN

        OPEN CUCURRENTSTATUSID;
        FETCH CUCURRENTSTATUSID INTO NUCURRENTSTATUSID;
        IF (CUCURRENTSTATUSID%FOUND) THEN
            UT_TRACE.TRACE('Estado Existe',10);
            CLOSE CUCURRENTSTATUSID;
            RETURN TRUE;
        ELSE
            UT_TRACE.TRACE('Estado No Existe',10);
            CLOSE CUCURRENTSTATUSID;
            RETURN FALSE;
        END IF;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            IF (CUCURRENTSTATUSID%ISOPEN) THEN
                CLOSE CUCURRENTSTATUSID;
            END IF;
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            IF (CUCURRENTSTATUSID%ISOPEN) THEN
                CLOSE CUCURRENTSTATUSID;
            END IF;
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
END PS_BCMOTIVE_ACTION;