--BASE DE DATOS POSTGRES
sudo service postgresql status --Para validar si la base de datos está arriba o está apagado
sudo service postgresql start --Para iniciar el servicio de la base de datos
sudo -u postgres psql --Para ingresar al psql de ubuntu y realizar acciones sobre la base de datos
sudo psql -U postgres -h localhost -d integrator --Validar contraseña de base de datos postgres
\q --Para salir del promp de psql
--SEQUILIZE
 npx sequelize-cli migration:generate --name order --Para crear el archivo de migraciones
--CORRER APLICACIÓN
npx turbo dev --filter="ordenes-*"
--DOCKER
docker ps --Para listar todos los contenedores que están arriba
docker stop [CONTAINER_ID_OR_NAME] --Para detener un contenedor id
docker rm [CONTAINER_ID_OR_NAME] --Eliminar contenedor detenido
docker rmi [IMAGE_NAME] --Eliminar imagen, si no se puede eliminar, es porque hay otros contendores que se deben detener y eliminar
--Luego, es necesario montar la imagen y correr el docker de nuevo con los comandos:
sudo docker build . -t integrador --Montar la imagen
sudo docker run -p 3000:3000 --env-file ./.env integrador --Correr el docker
--OBTENER VERSIÓN DE GIT
git --version
git init --Inicia el repo
git status --Estado de los archivos
git log --Listar los commits del repo
git diff --Se ven los cambios
git add -A --Añade todos los archivos agregados y modificados. Adicionalmente también los eliminados
git add . --No tiene en cuenta los eliminados
git show commit-id --Ver cambios ocurridos en el commit
--añadir repo remoto al local--
git remote add origin https://github.com/Maria-carval/Consultas-OSF-V8.git
git fetch --Trae la info de mi repo remoto
git fetch origin permisos --Trae la rama remota al local con todos los cambios
pit push --Subir los cambios locales al remoto
git branch -m NuevoNombre AnteriorNombre --Cambiar nombre a la rama
git pull --rebase origin master --Actualiza la rama de forma más limpia
git push -u origin Rama --Subir cambios y si no existe la rama en el remoto, la crea
git merge abort --Deshacer el merge
git push -f --deshacer el merge en el remoto
git checkout Branch/Commit-id --moverse entre ramas, commits
git squash --Cuando hay muchos commits, para unir todos esos en un solo commit
git update-index --assume-unchanged utils/index.js --PARA QUE EL ARCHIVO NUNCA REPORTE CAMBIOS
git update-index --no-assume-unchanged utils/index.js --PARA QUE EL ARCHIVO REPORTE CAMBIOS
PARA TENER ACTUALIZADA LA RAMA
git checkout master
git pull --rebase origin master
ELIMINAR RAMA LOCAL Y REMOTA
git branch -D <branch> --Elimina la local
git push origin --delete <branch> --Elimina la remota
GUARDAR CAMBIOS EN MEMORIA
git stash
--hacer acciones(rebase ejemplo)
git stash pop --Trae los cambios
--UBUTU
ls -- Para listar archivos
mkdir NombreCarpeta -- Para crear carpeta
touch NombreArchivo.extension -- Para crear archivo
code . --Ubicación del folder donde estás, abre la carpeta en visual studio
--PARA ACTUALIZAR LAS RAMAS, SIEMPRE USAR REBASE
(ubicada en la rama) git pull --rebase origin nombredelarama
git status -- comprobar como va la vuelta
git push -f origin nombrerama --para actualizar la rama remota
git stash --Para hacer pull rebase teniendo cambios en el local sin ser commiteados
Luego de hacer el git pull --rebase origin nombredelarama, se hace el stash pop
git checkout nombredelarchivo --para descartar cambios en un archivo
git stash pop