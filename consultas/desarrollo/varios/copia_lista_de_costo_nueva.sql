DECLARE
cursor cuListasLoca is
select *
from OPEN.GE_LIST_UNITARY_COST c
WHERE GEOGRAP_LOCATION_Id is not null
and validity_start_Date=to_date('4/01/2016','dd/mm/yyyy')
and validity_final_date=to_date('31/12/2018','dd/mm/yyyy');

cursor cuItemsLista(nuListaCopiar number) is
		select *
		from GE_UNIT_COST_ITE_LIS l 
		where l.list_unitary_cost_id=nuListaCopiar;
NULISTA NUMBER;	



  CSBVERSION   CONSTANT VARCHAR2(20)            := 'SAO212600';
    
  CNU_ERR_BAD_DATE       CONSTANT NUMBER := 639;
  
  CNU_ERR_BAD_ITEM     CONSTANT NUMBER := 640;
  
  CNU_ERR_PRICE_LIST_NOTFOUND CONSTANT NUMBER := 717;
  
  CNU_WRONG_INITIAL_DATE CONSTANT NUMBER := 10762;
  
  CNU_WRONG_DATES CONSTANT NUMBER := 10763;
  
  CNU_PERIOD_OVERLAPPING CONSTANT NUMBER := 10764;
  
  CNU_INVALID_PRICE_LIST         CONSTANT NUMBER :=  118281;
  GLOBALINUBASELISTUNITCOSTID  GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE;
--************************************************************************************************************
    FUNCTION FNUGETNPRICELISTBYRANGE
    (
        INUOPERATINGUNITID          IN      GE_LIST_UNITARY_COST.OPERATING_UNIT_ID%TYPE,
        INUCONTRACTID               IN      GE_LIST_UNITARY_COST.CONTRACT_ID%TYPE,
        INUCONTRACTORID             IN      GE_LIST_UNITARY_COST.CONTRACTOR_ID%TYPE,
        INUGEOLOCID                 IN      GE_LIST_UNITARY_COST.GEOGRAP_LOCATION_ID%TYPE,
        IDTVALIDITYSTARTDATE        IN      GE_LIST_UNITARY_COST.VALIDITY_START_DATE%TYPE,
        IDTVALIDITYFINALDATE        IN      GE_LIST_UNITARY_COST.VALIDITY_FINAL_DATE%TYPE,
        INULIST_UNITARY_COST_ID     IN      GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE := NULL
    )
    RETURN NUMBER
    IS
        RFOUTPUT            CONSTANTS.TYREFCURSOR;
        NUNPRICELLIST       NUMBER;
        ISBSQL              VARCHAR2(4000);
    BEGIN
        UT_TRACE.TRACE('BEGIN GE_BCListUnitaryCost.fnuGetNPriceListByRange', 3);
        
        UT_TRACE.TRACE('Par?metro: inuOperatingUnitId -> ' || INUOPERATINGUNITID, 4);
        UT_TRACE.TRACE('Par?metro: inuContractId -> ' || INUCONTRACTID, 4);
        UT_TRACE.TRACE('Par?metro: inuContractorId -> ' || INUCONTRACTORID, 4);
        UT_TRACE.TRACE('Par?metro: inuGeoLocId -> ' || INUGEOLOCID, 4);
        UT_TRACE.TRACE('Par?metro: idtValidityStartDate -> ' || IDTVALIDITYSTARTDATE, 4);
        UT_TRACE.TRACE('Par?metro: idtValidityFinalDate -> ' || IDTVALIDITYFINALDATE, 4);
        UT_TRACE.TRACE('Par?metro: inuList_unitary_cost_id -> ' || INULIST_UNITARY_COST_ID, 4);
    
        ISBSQL := '
            SELECT  /*+ index(ge_list_unitary_cost IDX_GE_LIST_UNITARY_COST06)*/
                    count(ge_list_unitary_cost.list_unitary_cost_id)
            FROM    ge_list_unitary_cost
                    /*+ GE_BCListUnitaryCost.fnuGetNPriceListByRange*/
            WHERE   (:idtValidityStartDate between validity_start_date AND validity_final_date
            OR      :idtValidityFinalDate between validity_start_date AND validity_final_date
            OR      validity_start_date  between :idtValidityStartDate AND :idtValidityFinalDate
            OR      validity_final_date  between :idtValidityStartDate AND :idtValidityFinalDate)';
            
        IF (INULIST_UNITARY_COST_ID IS NULL) THEN
            ISBSQL :=  ISBSQL || CHR(13) || 'AND :list_unitary_cost_id IS null';
        ELSE
            ISBSQL :=  ISBSQL || CHR(13) || 'AND list_unitary_cost_id = :list_unitary_cost_id ';
        END IF;
            
        IF (INUOPERATINGUNITID IS NULL) THEN
            ISBSQL :=  ISBSQL || CHR(13) || 'AND operating_unit_id IS null AND :operating_unit_id IS null';
        ELSE
            ISBSQL :=  ISBSQL || CHR(13) || 'AND operating_unit_id = :operating_unit_id ';
        END IF;
        
        IF (INUCONTRACTID IS NULL) THEN
            ISBSQL :=  ISBSQL || CHR(13) || 'AND contract_id IS null AND :contract_id IS null ';
        ELSE
            ISBSQL :=  ISBSQL || CHR(13) || 'AND contract_id = :contract_id ';
        END IF;
        
        IF (INUCONTRACTORID IS NULL) THEN
            ISBSQL :=  ISBSQL || CHR(13) || 'AND contractor_id IS null AND :contractor_id IS null';
        ELSE
            ISBSQL :=  ISBSQL || CHR(13) || 'AND contractor_id = :contractor_id ';
        END IF;
        
        IF (INUGEOLOCID IS NULL) THEN
            ISBSQL :=  ISBSQL || CHR(13) || 'AND geograp_location_id IS null AND :geograp_location_id IS null';
        ELSE
            ISBSQL :=  ISBSQL || CHR(13) || 'AND geograp_location_id = :geograp_location_id ';
        END IF;
        
        UT_TRACE.TRACE('Query: ' || ISBSQL, 3);
            
        OPEN RFOUTPUT FOR ISBSQL USING
            IDTVALIDITYSTARTDATE,
            IDTVALIDITYFINALDATE,
            IDTVALIDITYSTARTDATE,
            IDTVALIDITYFINALDATE,
            IDTVALIDITYSTARTDATE,
            IDTVALIDITYFINALDATE,
            INULIST_UNITARY_COST_ID,
            INUOPERATINGUNITID,
            INUCONTRACTID,
            INUCONTRACTORID,
            INUGEOLOCID;
            
        FETCH RFOUTPUT INTO NUNPRICELLIST;
        
        UT_TRACE.TRACE('END GE_BCListUnitaryCost.fnuGetNPriceListByRange[' || NUNPRICELLIST || ']', 3);
        
        RETURN NUNPRICELLIST;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR GE_BCListUnitaryCost.fnuGetNPriceListByRange', 3);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('others GE_BCListUnitaryCost.fnuGetNPriceListByRange', 3);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    
    END FNUGETNPRICELISTBYRANGE;
--************************************************************************************************************+
FUNCTION FBLPERIODOVERLAPPING
    (
        IDTFIRSTINITIALDATE     IN DATE,
        IDTFIRSTFINALDATE       IN DATE,
        IDTSECONDINITIALDATE    IN DATE,
        IDTSECONDFINALDATE      IN DATE
    )
    RETURN BOOLEAN
    IS
    BEGIN
        IF IDTFIRSTINITIALDATE <= IDTSECONDINITIALDATE
        AND IDTFIRSTFINALDATE >= IDTSECONDINITIALDATE THEN
            RETURN TRUE;
        END IF;
        
        /*IF IDTFIRSTINITIALDATE >= IDTSECONDINITIALDATE
        AND IDTFIRSTINITIALDATE <= IDTSECONDFINALDATE THEN
            RETURN TRUE;
        END IF;*/
        
        RETURN FALSE;
    END;
--************************************************************************************************+++
    PROCEDURE INSERTLISTUNITARYCOST
    (
        ISBDESCRIPTION        IN      GE_LIST_UNITARY_COST.DESCRIPTION%TYPE,
        INUOPERATINGUNITID    IN      GE_LIST_UNITARY_COST.OPERATING_UNIT_ID%TYPE,
        INUCONTRACTID         IN      GE_LIST_UNITARY_COST.CONTRACT_ID%TYPE,
        INUCONTRACTORID       IN      GE_LIST_UNITARY_COST.CONTRACTOR_ID%TYPE,
        INUGEOLOCID           IN      GE_LIST_UNITARY_COST.GEOGRAP_LOCATION_ID%TYPE,
        IDTVALIDITYSTARTDATE  IN      GE_LIST_UNITARY_COST.VALIDITY_START_DATE%TYPE,
        IDTVALIDITYFINALDATE  IN      GE_LIST_UNITARY_COST.VALIDITY_FINAL_DATE%TYPE,
        IONULISTUNITARYCOSTID IN OUT  GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE
    )
    IS
        RCLISTUNITARYCOST DAGE_LIST_UNITARY_COST.STYGE_LIST_UNITARY_COST;
    RCLISTUNITARYCOSTANTERIOR DAGE_LIST_UNITARY_COST.STYGE_LIST_UNITARY_COST;
        NUNPRICELLIST       NUMBER;
    BEGIN
         UT_TRACE.TRACE('[GE_BOListUnitaryCost.insertListUnitaryCost] INICIO', 2);
         
         UT_TRACE.TRACE('Par?metro: isbDescription -> ' || ISBDESCRIPTION, 3);
         UT_TRACE.TRACE('Par?metro: inuOperatingUnitId -> ' || INUOPERATINGUNITID, 3);
         UT_TRACE.TRACE('Par?metro: inuContractId -> ' || INUCONTRACTID, 3);
         UT_TRACE.TRACE('Par?metro: inuContractorId -> ' || INUCONTRACTORID, 3);
         UT_TRACE.TRACE('Par?metro: inuGeoLocId -> ' || INUGEOLOCID, 3);
         UT_TRACE.TRACE('Par?metro: idtValidityStartDate -> ' || IDTVALIDITYSTARTDATE, 3);
         UT_TRACE.TRACE('Par?metro: idtValidityFinalDate -> ' || IDTVALIDITYFINALDATE, 3);
         UT_TRACE.TRACE('Par?metro: ionuListUnitaryCostId -> ' || IONULISTUNITARYCOSTID, 3);
         
         IF IONULISTUNITARYCOSTID IS NULL THEN
            IONULISTUNITARYCOSTID := GE_BOSEQUENCE.FNUNEXTGE_LIST_UNITARY_COST;
         END IF;
                        
         NUNPRICELLIST := FNUGETNPRICELISTBYRANGE(
            INUOPERATINGUNITID,
            INUCONTRACTID,
            INUCONTRACTORID,
            INUGEOLOCID,
            IDTVALIDITYSTARTDATE,
            IDTVALIDITYFINALDATE,
      IONULISTUNITARYCOSTID
         );
         
         IF (NUNPRICELLIST = 0) THEN
             RCLISTUNITARYCOST.DESCRIPTION := ISBDESCRIPTION;
             RCLISTUNITARYCOST.OPERATING_UNIT_ID := INUOPERATINGUNITID;
             RCLISTUNITARYCOST.CONTRACT_ID := INUCONTRACTID;
             RCLISTUNITARYCOST.CONTRACTOR_ID := INUCONTRACTORID;
             RCLISTUNITARYCOST.GEOGRAP_LOCATION_ID := INUGEOLOCID;
             RCLISTUNITARYCOST.VALIDITY_START_DATE := IDTVALIDITYSTARTDATE;
             RCLISTUNITARYCOST.VALIDITY_FINAL_DATE := IDTVALIDITYFINALDATE;

             RCLISTUNITARYCOST.LIST_UNITARY_COST_ID := IONULISTUNITARYCOSTID;

             RCLISTUNITARYCOST.USER_ID := UT_SESSION.GETUSER;
             RCLISTUNITARYCOST.TERMINAL := UT_SESSION.GETTERMINAL;

             DAGE_LIST_UNITARY_COST.INSRECORD(RCLISTUNITARYCOST);
       RCLISTUNITARYCOSTANTERIOR:= DAGE_LIST_UNITARY_COST.FRCGETRECORD(GLOBALINUBASELISTUNITCOSTID);
       RCLISTUNITARYCOSTANTERIOR.VALIDITY_FINAL_DATE:=IDTVALIDITYSTARTDATE-1;
       DAGE_LIST_UNITARY_COST.UPDRECORD(RCLISTUNITARYCOSTANTERIOR);
       
         ELSE
             ERRORS.SETERROR(CNU_INVALID_PRICE_LIST);
                   DBMS_OUTPUT.PUT_LINE(GLOBALINUBASELISTUNITCOSTID||'-'||'CNU_INVALID_PRICE_LIST');
             raise_application_error(-20111, SQLERRM);
         END IF;
         
         UT_TRACE.TRACE('[GE_BOListUnitaryCost.insertListUnitaryCost] FIN', 2);

    EXCEPTION
        /*WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('[GE_BOListUnitaryCost.insertListUnitaryCost] CONTROLLED_ERROR', 2);
            RAISE EX.CONTROLLED_ERROR;*/
        WHEN OTHERS THEN
            --UT_TRACE.TRACE('[GE_BOListUnitaryCost.insertListUnitaryCost] others', 2);
            --ERRORS.SETERROR;
              DBMS_OUTPUT.PUT_LINE(GLOBALINUBASELISTUNITCOSTID||'-'||SQLERRM);
             raise_application_error(-20111, SQLERRM);
    END INSERTLISTUNITARYCOST;
--****************************************************************************************************************
    PROCEDURE VALIDATEDATES
    (
        INUOPERATINGUNITID    IN      GE_LIST_UNITARY_COST.OPERATING_UNIT_ID%TYPE,
        INUCONTRACTID         IN      GE_LIST_UNITARY_COST.CONTRACT_ID%TYPE,
        INUCONTRACTORID       IN      GE_LIST_UNITARY_COST.CONTRACTOR_ID%TYPE,
        INUGEOLOCID           IN      GE_LIST_UNITARY_COST.GEOGRAP_LOCATION_ID%TYPE,
        IDTVALIDITYSTARTDATE  IN      GE_LIST_UNITARY_COST.VALIDITY_START_DATE%TYPE,
        IDTVALIDITYFINALDATE  IN      GE_LIST_UNITARY_COST.VALIDITY_FINAL_DATE%TYPE
    )
    IS
        DTLISTINITIALDATE   DATE;
        DTLISTFINALDATE     DATE;
        
        
        PROCEDURE CLOSECURSORS
        IS
        BEGIN
            
            IF (GE_BCLISTUNITARYCOST.CUOPERATINGUNITCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUOPERATINGUNITCOSTLISTDATES;
            END IF;

            
            IF (GE_BCLISTUNITARYCOST.CUCONTRACTCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUCONTRACTCOSTLISTDATES;
            END IF;

            
            IF (GE_BCLISTUNITARYCOST.CUCONTRACTORCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUCONTRACTORCOSTLISTDATES;
            END IF;

            
            IF (GE_BCLISTUNITARYCOST.CUGEOLOCATIONCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUGEOLOCATIONCOSTLISTDATES;
            END IF;

            
            IF (GE_BCLISTUNITARYCOST.CUGENERICCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUGENERICCOSTLISTDATES;
            END IF;
        END;
        
    BEGIN
        UT_TRACE.TRACE('[GE_BOListUnitaryCost.validateDates] INICIO', 2);

        /*IF TRUNC(IDTVALIDITYSTARTDATE) < TRUNC(UT_DATE.FDTSYSDATE) THEN
            ERRORS.SETERROR(CNU_WRONG_INITIAL_DATE);
            raise_application_error(-20111, SQLERRM);
        END IF;*/

        IF TRUNC(IDTVALIDITYSTARTDATE) >= TRUNC(IDTVALIDITYFINALDATE) THEN
            ERRORS.SETERROR(CNU_WRONG_DATES);
            DBMS_OUTPUT.PUT_LINE(GLOBALINUBASELISTUNITCOSTID||'-'||'CNU_WRONG_DATES');
            raise_application_error(-20111, SQLERRM);
        END IF;
        
        IF (INUOPERATINGUNITID IS NOT NULL) THEN

            IF (GE_BCLISTUNITARYCOST.CUOPERATINGUNITCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUOPERATINGUNITCOSTLISTDATES;
            END IF;
            
            OPEN GE_BCLISTUNITARYCOST.CUOPERATINGUNITCOSTLISTDATES(INUOPERATINGUNITID);

            FETCH GE_BCLISTUNITARYCOST.CUOPERATINGUNITCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;

            WHILE (GE_BCLISTUNITARYCOST.CUOPERATINGUNITCOSTLISTDATES%FOUND) LOOP

                IF FBLPERIODOVERLAPPING(IDTVALIDITYSTARTDATE,
                                                IDTVALIDITYFINALDATE,
                                                DTLISTINITIALDATE,
                                                DTLISTFINALDATE)
                THEN
                    ERRORS.SETERROR(CNU_PERIOD_OVERLAPPING);
                    DBMS_OUTPUT.PUT_LINE(GLOBALINUBASELISTUNITCOSTID||'-299'||'CNU_PERIOD_OVERLAPPING');
                    raise_application_error(-20111, SQLERRM);
                END IF;

                FETCH GE_BCLISTUNITARYCOST.CUOPERATINGUNITCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;
            END LOOP;
            
        ELSIF (INUCONTRACTID IS NOT NULL) THEN

            IF (GE_BCLISTUNITARYCOST.CUCONTRACTCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUCONTRACTCOSTLISTDATES;
            END IF;

            OPEN GE_BCLISTUNITARYCOST.CUCONTRACTCOSTLISTDATES(INUCONTRACTID);

            FETCH GE_BCLISTUNITARYCOST.CUCONTRACTCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;

            WHILE (GE_BCLISTUNITARYCOST.CUCONTRACTCOSTLISTDATES%FOUND) LOOP

                IF FBLPERIODOVERLAPPING(IDTVALIDITYSTARTDATE,
                                                IDTVALIDITYFINALDATE,
                                                DTLISTINITIALDATE,
                                                DTLISTFINALDATE)
                THEN
                    ERRORS.SETERROR(CNU_PERIOD_OVERLAPPING);
                     DBMS_OUTPUT.PUT_LINE(GLOBALINUBASELISTUNITCOSTID||'-324'||'CNU_PERIOD_OVERLAPPING');
                    raise_application_error(-20111, SQLERRM);
                END IF;

                FETCH GE_BCLISTUNITARYCOST.CUCONTRACTCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;
            END LOOP;

        ELSIF (INUCONTRACTORID IS NOT NULL) THEN

            IF (GE_BCLISTUNITARYCOST.CUCONTRACTORCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUCONTRACTORCOSTLISTDATES;
            END IF;

            OPEN GE_BCLISTUNITARYCOST.CUCONTRACTORCOSTLISTDATES(INUCONTRACTORID);

            FETCH GE_BCLISTUNITARYCOST.CUCONTRACTORCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;

            WHILE (GE_BCLISTUNITARYCOST.CUCONTRACTORCOSTLISTDATES%FOUND) LOOP

                IF FBLPERIODOVERLAPPING(IDTVALIDITYSTARTDATE,
                                                IDTVALIDITYFINALDATE,
                                                DTLISTINITIALDATE,
                                                DTLISTFINALDATE)
                THEN
                    ERRORS.SETERROR(CNU_PERIOD_OVERLAPPING);
                     DBMS_OUTPUT.PUT_LINE(GLOBALINUBASELISTUNITCOSTID||'-349'||'CNU_PERIOD_OVERLAPPING');
                    raise_application_error(-20111, SQLERRM);
                END IF;

                FETCH GE_BCLISTUNITARYCOST.CUCONTRACTORCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;
            END LOOP;

        ELSIF (INUGEOLOCID IS NOT NULL) THEN

            IF (GE_BCLISTUNITARYCOST.CUGEOLOCATIONCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUGEOLOCATIONCOSTLISTDATES;
            END IF;

            OPEN GE_BCLISTUNITARYCOST.CUGEOLOCATIONCOSTLISTDATES(INUGEOLOCID);

            FETCH GE_BCLISTUNITARYCOST.CUGEOLOCATIONCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;

            WHILE (GE_BCLISTUNITARYCOST.CUGEOLOCATIONCOSTLISTDATES%FOUND) LOOP

                IF FBLPERIODOVERLAPPING(IDTVALIDITYSTARTDATE,
                                                IDTVALIDITYFINALDATE,
                                                DTLISTINITIALDATE,
                                                DTLISTFINALDATE)
                THEN
                    ERRORS.SETERROR(CNU_PERIOD_OVERLAPPING);
                     DBMS_OUTPUT.PUT_LINE(GLOBALINUBASELISTUNITCOSTID||'-374'||'CNU_PERIOD_OVERLAPPING');
           dbms_output.put_line(IDTVALIDITYSTARTDATE||'-'||IDTVALIDITYFINALDATE||'-'||DTLISTINITIALDATE||'-'||DTLISTFINALDATE);
                    raise_application_error(-20111, SQLERRM);
                END IF;

                FETCH GE_BCLISTUNITARYCOST.CUGEOLOCATIONCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;
            END LOOP;

        ELSE

            IF (GE_BCLISTUNITARYCOST.CUGENERICCOSTLISTDATES%ISOPEN) THEN
                CLOSE GE_BCLISTUNITARYCOST.CUGENERICCOSTLISTDATES;
            END IF;

            OPEN GE_BCLISTUNITARYCOST.CUGENERICCOSTLISTDATES;

            FETCH GE_BCLISTUNITARYCOST.CUGENERICCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;

            WHILE (GE_BCLISTUNITARYCOST.CUGENERICCOSTLISTDATES%FOUND) LOOP

                IF FBLPERIODOVERLAPPING(IDTVALIDITYSTARTDATE,
                                                IDTVALIDITYFINALDATE,
                                                DTLISTINITIALDATE,
                                                DTLISTFINALDATE)
                THEN
                    ERRORS.SETERROR(CNU_PERIOD_OVERLAPPING);
                     DBMS_OUTPUT.PUT_LINE(GLOBALINUBASELISTUNITCOSTID||'-399'||'CNU_PERIOD_OVERLAPPING');
                    raise_application_error(-20111, SQLERRM);
                END IF;

                FETCH GE_BCLISTUNITARYCOST.CUGENERICCOSTLISTDATES INTO DTLISTINITIALDATE, DTLISTFINALDATE;
            END LOOP;

        END IF;
        
        UT_TRACE.TRACE('[GE_BOListUnitaryCost.validateDates] FIN', 2);
    EXCEPTION
        /*WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('[GE_BOListUnitaryCost.validateDates] CONTROLLED_ERROR', 2);
            RAISE EX.CONTROLLED_ERROR;*/
        WHEN OTHERS THEN
            UT_TRACE.TRACE('[GE_BOListUnitaryCost.validateDates] others', 2);
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
            raise_application_error(-20111, SQLERRM);
            --RAISE EX.CONTROLLED_ERROR;
    END;
--*******************************************************************************
    PROCEDURE CONVERTLEVELVALUES
    (
        ISBLEVEL              IN  VARCHAR2,
        INUDETAIL             IN  NUMBER,
        ONUOPERATINGUNITID    OUT GE_LIST_UNITARY_COST.OPERATING_UNIT_ID%TYPE,
        ONUCONTRACTID         OUT GE_LIST_UNITARY_COST.CONTRACT_ID%TYPE,
        ONUCONTRACTORID       OUT GE_LIST_UNITARY_COST.CONTRACTOR_ID%TYPE,
        ONUGEOLOCID           OUT GE_LIST_UNITARY_COST.GEOGRAP_LOCATION_ID%TYPE
    )
   IS
    BEGIN
        UT_TRACE.TRACE('Inicio GE_BOListUnitaryCost.ConvertLevelValues
                                Nivel ['||ISBLEVEL||
                                ']Detalle ['||INUDETAIL||']', 10);
        IF (ISBLEVEL = GE_BOITEMSCONSTANTS.CSBOPERATINGUNIT) THEN
            UT_TRACE.TRACE('Unidad ['||INUDETAIL||']', 15);
            ONUOPERATINGUNITID := INUDETAIL;

        ELSIF (ISBLEVEL = GE_BOITEMSCONSTANTS.CSBCONTRACT) THEN
            UT_TRACE.TRACE('Contrato ['||INUDETAIL||']', 15);
            ONUCONTRACTID := INUDETAIL;

        ELSIF (ISBLEVEL = GE_BOITEMSCONSTANTS.CSBCONTRACTOR) THEN
            UT_TRACE.TRACE('Contratista ['||INUDETAIL||']', 15);
            ONUCONTRACTORID := INUDETAIL;
            
        ELSIF (ISBLEVEL = GE_BOITEMSCONSTANTS.CSBGEOLOC) THEN
            UT_TRACE.TRACE('Ubicaci?n ['||INUDETAIL||']', 15);
            ONUGEOLOCID :=  INUDETAIL;
            
        END IF;
        UT_TRACE.TRACE('FIN GE_BOListUnitaryCost.ConvertLevelValues', 10);
    EXCEPTION
       WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE(SQLERRM);
            raise_application_error(-20111, SQLERRM);
    END CONVERTLEVELVALUES;
--***************************************************************************************************
   PROCEDURE DCOPYUNITARYCOSTLIST
    (
        ISBLEVEL              IN  VARCHAR2,
        INUDETAIL             IN  NUMBER,
        IDTFECHAINI           IN GE_LIST_UNITARY_COST.VALIDITY_START_DATE%TYPE,
        IDTFECHAFIN           IN GE_LIST_UNITARY_COST.VALIDITY_FINAL_DATE%TYPE,
        ISBDESCRIP            IN GE_LIST_UNITARY_COST.DESCRIPTION%TYPE,
        INUBASELISTUNITCOSTID IN GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE
    )
   IS
        NUNEWLISTID           GE_LIST_UNITARY_COST.LIST_UNITARY_COST_ID%TYPE;
        NUOPERATINGUNITID     GE_LIST_UNITARY_COST.OPERATING_UNIT_ID%TYPE;
        NUCONTRACTID          GE_LIST_UNITARY_COST.CONTRACT_ID%TYPE;
        NUCONTRACTORID        GE_LIST_UNITARY_COST.CONTRACTOR_ID%TYPE;
        NUGEOLOCID            GE_LIST_UNITARY_COST.GEOGRAP_LOCATION_ID%TYPE;
		NULISTA 			  NUMBER;

    BEGIN
        UT_TRACE.TRACE('Inicio GE_BOListUnitaryCost.CopyUnitaryCostList
                                Nivel ['||ISBLEVEL||
                                ']Detalle ['||INUDETAIL||']', 5);
     GLOBALINUBASELISTUNITCOSTID:=INUBASELISTUNITCOSTID;
        
        CONVERTLEVELVALUES(
                                                 ISBLEVEL,
                                                 INUDETAIL,
                                                 NUOPERATINGUNITID,
                                                 NUCONTRACTID,
                                                 NUCONTRACTORID,
                                                 NUGEOLOCID
                                               );
    
        
        VALIDATEDATES(
                                           NUOPERATINGUNITID,
                                           NUCONTRACTID,
                                           NUCONTRACTORID,
                                           NUGEOLOCID,
                                           IDTFECHAINI,
                                           IDTFECHAFIN
                                          );
                                           
        
        INSERTLISTUNITARYCOST(
                                                   ISBDESCRIP,
                                                   NUOPERATINGUNITID,
                                                   NUCONTRACTID,
                                                   NUCONTRACTORID,
                                                   NUGEOLOCID,
                                                   IDTFECHAINI,
                                                   IDTFECHAFIN,
                                                   NUNEWLISTID
                                                   );

        
        GE_BOLISTUNITARYCOST.COPYITEMCOSTFROMLISTTOLIST(INUBASELISTUNITCOSTID,
                                                        NUNEWLISTID);
														
		IF ISBDESCRIP LIKE 'LISTA 1%' THEN
		 update GE_UNIT_COST_ITE_LIS set PRICE=38487, SALES_VALUE= 48108.75 where items_id=100000313 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=72798, SALES_VALUE= 90997.5 where items_id=100000315 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=33661, SALES_VALUE= 42076.25 where items_id=100000316 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=44740, SALES_VALUE= 55925 where items_id=100000317 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=51116, SALES_VALUE= 63895 where items_id=100000321 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=93675, SALES_VALUE= 117093.75 where items_id=100000328 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=93675, SALES_VALUE= 117093.75 where items_id=100000329 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=75375, SALES_VALUE= 94218.75 where items_id=100000332 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=75375, SALES_VALUE= 94218.75 where items_id=100000333 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=83978.72, SALES_VALUE= 104973.39 where items_id=100000345 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=10264.18, SALES_VALUE= 12830.27 where items_id=100000359 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=18054.20, SALES_VALUE= 22567.75 where items_id=100000361 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=26001.29, SALES_VALUE= 32501.61 where items_id=100000362 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=55078.06, SALES_VALUE= 68847.57 where items_id=100000365 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=23815.31, SALES_VALUE= 29769.14 where items_id=100000370 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=2512.44, SALES_VALUE= 3140.555 where items_id=100000373 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=8177.88, SALES_VALUE= 10222.355 where items_id=100000374 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=41216, SALES_VALUE= 51520 where items_id=100000396 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=34982, SALES_VALUE= 43727.5 where items_id=100000397 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=26171, SALES_VALUE= 32713.75 where items_id=100000400 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=28291, SALES_VALUE= 35363.75 where items_id=100000402 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=62245, SALES_VALUE= 77806.25 where items_id=100000406 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1692708, SALES_VALUE= 2115885 where items_id=100000414 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=144839, SALES_VALUE= 181048.75 where items_id=100000415 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=435459, SALES_VALUE= 544323.75 where items_id=100000419 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=2843411, SALES_VALUE= 3554263.75 where items_id=100000421 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=3633948, SALES_VALUE= 4542435 where items_id=100000422 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=555067, SALES_VALUE= 693833.75 where items_id=100000425 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1107053, SALES_VALUE= 1383816.25 where items_id=100000426 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=515756, SALES_VALUE= 644695 where items_id=100000427 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=123699, SALES_VALUE= 154623.75 where items_id=100000428 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=116505.13, SALES_VALUE= 145631.41 where items_id=100000429 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=964872, SALES_VALUE= 1206090 where items_id=100000430 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=329173, SALES_VALUE= 411466.25 where items_id=100000431 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=108675, SALES_VALUE= 135843.75 where items_id=100000432 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=101480.81, SALES_VALUE= 126851.01 where items_id=100000433 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1110107, SALES_VALUE= 1387633.75 where items_id=100000434 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=375186, SALES_VALUE= 468982.5 where items_id=100000435 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=159957, SALES_VALUE= 199946.25 where items_id=100000436 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=175329, SALES_VALUE= 219161.25 where items_id=100000437 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=223830, SALES_VALUE= 279787.5 where items_id=100000438 and LIST_UNITARY_COST_ID=NUNEWLISTID; 		
		
		END IF;
		IF ISBDESCRIP LIKE 'LISTA 2%' THEN
		 update GE_UNIT_COST_ITE_LIS set PRICE=40411, SALES_VALUE= 50513.75 where items_id=100000313 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=76438, SALES_VALUE= 95547.5 where items_id=100000315 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=35344, SALES_VALUE= 44180 where items_id=100000316 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=46977, SALES_VALUE= 58721.25 where items_id=100000317 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=53672, SALES_VALUE= 67090 where items_id=100000321 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=98359, SALES_VALUE= 122948.75 where items_id=100000328 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=98359, SALES_VALUE= 122948.75 where items_id=100000329 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=79144, SALES_VALUE= 98930 where items_id=100000332 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=79144, SALES_VALUE= 98930 where items_id=100000333 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=88178, SALES_VALUE= 110222.5 where items_id=100000345 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=10777, SALES_VALUE= 13471.25 where items_id=100000359 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=18957, SALES_VALUE= 23696.25 where items_id=100000361 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=27301, SALES_VALUE= 34126.25 where items_id=100000362 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=57832, SALES_VALUE= 72290 where items_id=100000365 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=25006, SALES_VALUE= 31257.5 where items_id=100000370 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=2638, SALES_VALUE= 3297.5 where items_id=100000373 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=8587, SALES_VALUE= 10733.75 where items_id=100000374 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=43277, SALES_VALUE= 54096.25 where items_id=100000396 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=36731, SALES_VALUE= 45913.75 where items_id=100000397 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=27480, SALES_VALUE= 34350 where items_id=100000400 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=29706, SALES_VALUE= 37132.5 where items_id=100000402 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=65357, SALES_VALUE= 81696.25 where items_id=100000406 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1777343, SALES_VALUE= 2221678.75 where items_id=100000414 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=152081, SALES_VALUE= 190101.25 where items_id=100000415 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=457232, SALES_VALUE= 571540 where items_id=100000419 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=2985582, SALES_VALUE= 3731977.5 where items_id=100000421 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=3815645, SALES_VALUE= 4769556.25 where items_id=100000422 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=582820, SALES_VALUE= 728525 where items_id=100000425 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1162406, SALES_VALUE= 1453007.5 where items_id=100000426 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=541544, SALES_VALUE= 676930 where items_id=100000427 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=129884, SALES_VALUE= 162355 where items_id=100000428 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=122330, SALES_VALUE= 152912.5 where items_id=100000429 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1013116, SALES_VALUE= 1266395 where items_id=100000430 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=345632, SALES_VALUE= 432040 where items_id=100000431 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=114109, SALES_VALUE= 142636.25 where items_id=100000432 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=106555, SALES_VALUE= 133193.75 where items_id=100000433 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1165612, SALES_VALUE= 1457015 where items_id=100000434 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=393945, SALES_VALUE= 492431.25 where items_id=100000435 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=167955, SALES_VALUE= 209943.75 where items_id=100000436 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=184095, SALES_VALUE= 230118.75 where items_id=100000437 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=235022, SALES_VALUE= 293777.5 where items_id=100000438 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		END IF;
		IF ISBDESCRIP LIKE 'LISTA 3%' THEN
		 update GE_UNIT_COST_ITE_LIS set PRICE=42336, SALES_VALUE= 52920 where items_id=100000313 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=80078, SALES_VALUE= 100097.5 where items_id=100000315 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=37027, SALES_VALUE= 46283.75 where items_id=100000316 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=49214, SALES_VALUE= 61517.5 where items_id=100000317 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=56228, SALES_VALUE= 70285 where items_id=100000321 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=103043, SALES_VALUE= 128803.75 where items_id=100000328 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=103043, SALES_VALUE= 128803.75 where items_id=100000329 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=82913, SALES_VALUE= 103641.25 where items_id=100000332 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=82913, SALES_VALUE= 103641.25 where items_id=100000333 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=92377, SALES_VALUE= 115471.25 where items_id=100000345 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=11291, SALES_VALUE= 14113.75 where items_id=100000359 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=19860, SALES_VALUE= 24825 where items_id=100000361 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=28601, SALES_VALUE= 35751.25 where items_id=100000362 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=60586, SALES_VALUE= 75732.5 where items_id=100000365 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=26197, SALES_VALUE= 32746.25 where items_id=100000370 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=2764, SALES_VALUE= 3455 where items_id=100000373 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=8996, SALES_VALUE= 11245 where items_id=100000374 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=45338, SALES_VALUE= 56672.5 where items_id=100000396 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=38480, SALES_VALUE= 48100 where items_id=100000397 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=28788, SALES_VALUE= 35985 where items_id=100000400 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=31120, SALES_VALUE= 38900 where items_id=100000402 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=68470, SALES_VALUE= 85587.5 where items_id=100000406 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1861979, SALES_VALUE= 2327473.75 where items_id=100000414 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=159323, SALES_VALUE= 199153.75 where items_id=100000415 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=479005, SALES_VALUE= 598756.25 where items_id=100000419 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=3127752, SALES_VALUE= 3909690 where items_id=100000421 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=3997343, SALES_VALUE= 4996678.75 where items_id=100000422 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=610574, SALES_VALUE= 763217.5 where items_id=100000425 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1217758, SALES_VALUE= 1522197.5 where items_id=100000426 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=567332, SALES_VALUE= 709165 where items_id=100000427 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=136069, SALES_VALUE= 170086.25 where items_id=100000428 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=128156, SALES_VALUE= 160195 where items_id=100000429 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1061359, SALES_VALUE= 1326698.75 where items_id=100000430 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=362090, SALES_VALUE= 452612.5 where items_id=100000431 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=119543, SALES_VALUE= 149428.75 where items_id=100000432 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=111629, SALES_VALUE= 139536.25 where items_id=100000433 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=1221118, SALES_VALUE= 1526397.5 where items_id=100000434 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=412705, SALES_VALUE= 515881.25 where items_id=100000435 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=175953, SALES_VALUE= 219941.25 where items_id=100000436 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=192862, SALES_VALUE= 241077.5 where items_id=100000437 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		 update GE_UNIT_COST_ITE_LIS set PRICE=246213, SALES_VALUE= 307766.25 where items_id=100000438 and LIST_UNITARY_COST_ID=NUNEWLISTID; 
		
		END IF;
		DBMS_OUTPUT.PUT_LINE('SE CREO LISTA'||NUNEWLISTID);
        UT_TRACE.TRACE('fin GE_BOListUnitaryCost.CopyUnitaryCostList',5);
    EXCEPTION
        /*WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR GE_BOListUnitaryCost.CopyUnitaryCostList',5);
            RAISE EX.CONTROLLED_ERROR;*/
        WHEN OTHERS THEN
            UT_TRACE.TRACE('others GE_BOListUnitaryCost.CopyUnitaryCostList',5);
      DBMS_OUTPUT.PUT_LINE(SQLERRM);
            --ERRORS.SETERROR;
           raise_application_error(-20111, SQLERRM);
    END DCOPYUNITARYCOSTLIST;
--***************************************************************************************************  

BEGIN
 FOR REG IN cuListasLoca LOOP
  
  UPDATE GE_LIST_UNITARY_COST SET VALIDITY_FINAL_DATE=TO_DATE('31/05/2016','DD/MM/YYYY') WHERE LIST_UNITARY_COST_ID = REG.LIST_UNITARY_COST_ID;
  DCOPYUNITARYCOSTLIST('UG', REG.GEOGRAP_LOCATION_ID,TO_DATE('01/06/2016','DD/MM/YYYY'),TO_DATE('31/12/2018','DD/MM/YYYY'),REPLACE(REG.DESCRIPTION, '2016', ' - JUNIO 2016') ,REG.LIST_UNITARY_COST_ID);
  COMMIT;
 END LOOP;
 
END;
/