PACKAGE BODY or_boOrderCost
IS
	
    CSBVERSION   CONSTANT VARCHAR2(20) := 'SAO195303';

	
    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;

    FUNCTION FBLITEMWASINWARRANTY
    (
      IRCORDERITEMS     IN  DAOR_ORDER_ITEMS.STYOR_ORDER_ITEMS,
      ITBACTIVITYITEMS  IN  OR_BCORDERACTIVITIES.TYTBACTIVITYITEMS
    )
    RETURN BOOLEAN
    IS
        DTFINALWARRANTYDATE GE_ITEM_WARRANTY.FINAL_WARRANTY_DATE%TYPE;
        NUITEMWARRANTYID    GE_ITEM_WARRANTY.ITEM_WARRANTY_ID%TYPE;
        NUINDEX             BINARY_INTEGER;
    BEGIN
        UT_TRACE.TRACE('[Or_BOLegalizeOrder.fblItemWasInWarranty] Inicio', 2);
        UT_TRACE.TRACE('ircOrderItems.items_id: '||IRCORDERITEMS.ITEMS_ID, 3);
        UT_TRACE.TRACE('ircOrderItems.element_id: '||IRCORDERITEMS.ELEMENT_ID, 3);
        IF IRCORDERITEMS.ITEMS_ID IS NULL THEN
            RETURN FALSE;
        END IF;
        IF ITBACTIVITYITEMS.COUNT > 0 THEN
            NUINDEX := ITBACTIVITYITEMS.FIRST;
            LOOP
                IF ITBACTIVITYITEMS(NUINDEX).NUITEMID = IRCORDERITEMS.ITEMS_ID
                AND (ITBACTIVITYITEMS(NUINDEX).NUELEMENTID = IRCORDERITEMS.ELEMENT_ID OR ITBACTIVITYITEMS(NUINDEX).NUELEMENTID IS NULL) THEN
                
                    RETURN TRUE;
                


                END IF;

                EXIT WHEN NUINDEX = ITBACTIVITYITEMS.LAST;
                NUINDEX := ITBACTIVITYITEMS.NEXT(NUINDEX);
            END LOOP;
        END IF;

        UT_TRACE.TRACE('[Or_BOLegalizeOrder.fblItemWasInWarranty] Fin', 2);

        RETURN FALSE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FBLITEMWASINWARRANTY;

    
























    PROCEDURE GETORDERCOST
    (
        IORCORDER           IN OUT NOCOPY  DAOR_ORDER.STYOR_ORDER
    )
    IS
        NUTOTALPRICE    OR_ORDER.ORDER_VALUE%TYPE;
        NULIQUIDMETHOD  PS_PACKAGE_TYPE.LIQUIDATION_METHOD%TYPE;
        NUPACKAGEID     MO_PACKAGES.PACKAGE_ID%TYPE;
    BEGIN

        UT_TRACE.TRACE('INICIO or_boOrderCost.getOrderCost. order_id: '||TO_CHAR(IORCORDER.ORDER_ID), 2 );
        
        IORCORDER.ORDER_COST_AVERAGE    := 0;
        IORCORDER.ORDER_COST_BY_LIST    := 0;

        
        OR_BOITEMVALUE.GETLIQMETHOD(IORCORDER.ORDER_ID, NUPACKAGEID, NULIQUIDMETHOD);

        UT_TRACE.TRACE('[or_boOrderCost.fnuGetOrderValue] Metodo de lidiquidaciï¿½n:['|| TO_CHAR(NULIQUIDMETHOD) ||']',3);

        
        
        
        IF (NULIQUIDMETHOD = OR_BOCONSTANTS.CNUMETODO_FIXED_PRICE) THEN
           IORCORDER.ORDER_VALUE := OR_BOTARIFVALUE.FNUGETVALCONBYORDERID(IORCORDER.ORDER_ID);
        ELSE
            
            IF OR_BCORDERITEMS.CUTOTALORDERPRICE%ISOPEN THEN
                CLOSE OR_BCORDERITEMS.CUTOTALORDERPRICE;
            END IF;

            
            OPEN OR_BCORDERITEMS.CUTOTALORDERPRICE(IORCORDER.ORDER_ID);
            FETCH OR_BCORDERITEMS.CUTOTALORDERPRICE INTO NUTOTALPRICE;

            
            IF (OR_BCORDERITEMS.CUTOTALORDERPRICE%NOTFOUND) THEN
                IORCORDER.ORDER_VALUE := 0;
            ELSE
                 IORCORDER.ORDER_VALUE := NUTOTALPRICE;
            END IF;

            
            CLOSE OR_BCORDERITEMS.CUTOTALORDERPRICE;
        END IF;

        UT_TRACE.TRACE('FIN or_boOrderCost.getOrderCost. nuTotalPrice: '||TO_CHAR(NUTOTALPRICE), 2 );
        
   EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            IF OR_BCORDERITEMS.CUTOTALORDERPRICE%ISOPEN THEN
                CLOSE OR_BCORDERITEMS.CUTOTALORDERPRICE;
            END IF;
            RAISE;
        WHEN OTHERS THEN
            IF OR_BCORDERITEMS.CUTOTALORDERPRICE%ISOPEN THEN
                CLOSE OR_BCORDERITEMS.CUTOTALORDERPRICE;
            END IF;
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETORDERCOST;

END OR_BOORDERCOST;