CREATE OR REPLACE PACKAGE BODY MO_BSREGISTERWITHXML IS
   CSBVERSION CONSTANT VARCHAR2( 250 ) := 'SAO167012';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE REGISTERREQUESTBYXML( ISBREQUESTXML IN VARCHAR2, ONUPACKAGEID OUT MO_PACKAGES.PACKAGE_ID%TYPE, ONUMOTIVEID OUT MO_MOTIVE.MOTIVE_ID%TYPE, ONUERRORCODE OUT GE_MESSAGE.MESSAGE_ID%TYPE, OSBERRORMESSAGE OUT VARCHAR2 )
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicia Metodo MO_BSRegisterWithXml.RegisterRequestByXML', 5 );
      MO_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      MO_BOREGISTERWITHXML.REGISTERREQUESTBYXML( ISBREQUESTXML, ONUPACKAGEID );
      ONUMOTIVEID := MO_BOPACKAGES.FNUGETFIRSTMOTIVE( ONUPACKAGEID );
      UT_TRACE.TRACE( 'Finaliza Metodo MO_BSRegisterWithXml.RegisterRequestByXML', 5 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
   END;
   FUNCTION FBLISREGISTERXML( ONUERRORCODE OUT GE_MESSAGE.MESSAGE_ID%TYPE, OSBERRORMESSAGE OUT VARCHAR2 )
    RETURN BOOLEAN
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicia Metodo MO_BSRegisterWithXml.fblIsRegisterXml', 5 );
      MO_BOUTILITIES.INITIALIZEOUTPUT( ONUERRORCODE, OSBERRORMESSAGE );
      RETURN MO_BOREGISTERWITHXML.FBLISREGISTERXML;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
         RETURN FALSE;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         ERRORS.GETERROR( ONUERRORCODE, OSBERRORMESSAGE );
         RETURN FALSE;
   END;
END MO_BSREGISTERWITHXML;
/


