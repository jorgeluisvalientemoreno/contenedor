PACKAGE BODY OR_BSDispatch
IS

























    
    
    
    CSBVERSION CONSTANT VARCHAR2(20) := 'SAO198736';

    

    
    FUNCTION FSBVERSION RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END FSBVERSION;

    




    PROCEDURE GETDAILYREQEQUIPBYUNIT
    (
        INUOPERATINGUNITID  IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        ORFEQUIPBYUNIT      OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE        OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE,
        OSBERRORMESSAGE     OUT GE_ERROR_LOG.DESCRIPTION%TYPE
    )
    IS
    BEGIN

        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);

        OR_BODISPATCH.DAILYREQEQUIPBYUNIT(INUOPERATINGUNITID, ORFEQUIPBYUNIT);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END GETDAILYREQEQUIPBYUNIT;

    




    PROCEDURE GETNEXTORDERINFBYUNI
    (
        INUOPERATINGUNITID      IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        ONUORDERID              OUT OR_ORDER.ORDER_ID%TYPE,
        ONUTASTTYPE             OUT OR_ORDER.TASK_TYPE_ID%TYPE,
        OSBTASKTYPEDESC         OUT OR_TASK_TYPE.DESCRIPTION%TYPE,
        OSBADDRESS              OUT AB_ADDRESS.ADDRESS%TYPE,
        OSBPROGRAMINGCLASS      OUT VARCHAR2,
        OSBPRIORITY             OUT VARCHAR2,
        ONUSEGMENT              OUT AB_SEGMENTS.SEGMENTS_ID%TYPE,
        ONUSUBSCRIBERID         OUT GE_SUBSCRIBER.SUBSCRIBER_ID%TYPE,
        OSBSUBSCRIBERNAME       OUT VARCHAR2,
        OSBSUBSCRIBERPHONE      OUT VARCHAR2,
        ONUPRODUCTID            OUT PR_PRODUCT.PRODUCT_ID%TYPE,
        ONUPRODUCTSTATUSID      OUT PS_PRODUCT_STATUS.PRODUCT_STATUS_ID%TYPE,
        OSBPRODUCTSTATUS        OUT PS_PRODUCT_STATUS.DESCRIPTION%TYPE,
        ONUMAINCOMPONENTID      OUT PR_COMPONENT.COMPONENT_ID%TYPE,
        OSBCOMMERCIALPLAN       OUT VARCHAR2,
        ONUPACKAGEID            OUT MO_PACKAGES.PACKAGE_ID%TYPE,
        ONUELEMENTID            OUT IF_NODE.ID%TYPE,
        OSBELEMENTCODE          OUT IF_NODE.CODE%TYPE,
        OSBCOMPOSITECODE        OUT IF_NODE.COMPOSITE_CODE%TYPE,
        ONUELEMENTTYPEID        OUT IF_ELEMENT_TYPE.ELEMENT_TYPE_ID%TYPE,
        OSBELEMENTTYPE          OUT IF_ELEMENT_TYPE.DESCRIPTION%TYPE,
        OSBDAMAGETYPE           OUT VARCHAR2,
        ONUORDERSTATUSID        OUT OR_ORDER.ORDER_STATUS_ID%TYPE,
        OSBORDERSTATUSDESC      OUT OR_ORDER_STATUS.DESCRIPTION%TYPE,
        ONUOPERUNITSTATUSID     OUT OR_OPERATING_UNIT.OPER_UNIT_STATUS_ID%TYPE,
        OSBOPERUNITSTATUSDESC   OUT OR_OPER_UNIT_STATUS.DESCRIPTION%TYPE,
        ONUERRORCODE            OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE,
        OSBERRORMESSAGE         OUT GE_ERROR_LOG.DESCRIPTION%TYPE
    )
    IS
    BEGIN

        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);

        OR_BODISPATCH.GETNEXTORDERINFBYUNI
        (
            INUOPERATINGUNITID,
            ONUORDERID,
            ONUTASTTYPE,
            OSBTASKTYPEDESC,
            OSBADDRESS,
            OSBPROGRAMINGCLASS,
            OSBPRIORITY,
            ONUSEGMENT,
            ONUSUBSCRIBERID,
            OSBSUBSCRIBERNAME,
            OSBSUBSCRIBERPHONE,
            ONUPRODUCTID,
            ONUPRODUCTSTATUSID,
            OSBPRODUCTSTATUS,
            ONUMAINCOMPONENTID,
            OSBCOMMERCIALPLAN,
            ONUPACKAGEID,
            ONUELEMENTID,
            OSBELEMENTCODE,
            OSBCOMPOSITECODE,
            ONUELEMENTTYPEID,
            OSBELEMENTTYPE,
            OSBDAMAGETYPE,
            ONUORDERSTATUSID,
            OSBORDERSTATUSDESC,
            ONUOPERUNITSTATUSID,
            OSBOPERUNITSTATUSDESC
        );

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    




    PROCEDURE GETASIGNORDERSBYUNI
    (
        INUOPERATINGUNITID  IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        ORFORDERBYUNIT      OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE        OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE,
        OSBERRORMESSAGE     OUT GE_ERROR_LOG.DESCRIPTION%TYPE
    )
    IS
    BEGIN

        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);
        
        OR_BODISPATCH.GETASIGNORDERSBYUNI
        (
            INUOPERATINGUNITID,
            ORFORDERBYUNIT
        );

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    




    PROCEDURE CHANGEORDSTAFROMMOBILE
    (
        INUORDER_ID			IN  OR_ORDER.ORDER_ID%TYPE,
        INUORDER_STATUS_ID	IN  OR_ORDER.ORDER_STATUS_ID%TYPE,
        ONUERRORCODE        OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE,
        OSBERRORMESSAGE     OUT GE_ERROR_LOG.DESCRIPTION%TYPE,
        IDTCHANGEDATE       IN OR_ORDER_STAT_CHANGE.STAT_CHG_DATE%TYPE DEFAULT NULL
    )
    IS
    BEGIN

        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);

        OR_BODISPATCH.CHANGEORDSTAFROMMOBILE
        (
            INUORDER_ID,
            INUORDER_STATUS_ID,
            IDTCHANGEDATE
        );

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    




    PROCEDURE GETSTATUSTRANSITORD
    (
        ORFSTATUSTRANSIT    OUT   CONSTANTS.TYREFCURSOR,
        ONUERRORCODE        OUT   NUMBER,
        OSBERRORMESSAGE     OUT   VARCHAR2
    )
    IS
       
        PROCEDURE INITIALIZEOUTPUT
        IS
        BEGIN
        
            ONUERRORCODE         := GE_BOCONSTANTS.CNUSUCCESS;
            OSBERRORMESSAGE      := NULL;
        
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
        END;
       
    BEGIN
    
        
        INITIALIZEOUTPUT;

        
        OR_BOTRANSITION.GETSTATUSTRANSITORD
        (
            ORFSTATUSTRANSIT
        );

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);

        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    



    PROCEDURE GETINVENTORYBYUNIT
    (
        INUOPERATINGUNITID  IN  OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        ORFEQUIPBYUNIT      OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE        OUT GE_ERROR_LOG.ERROR_LOG_ID%TYPE,
        OSBERRORMESSAGE     OUT GE_ERROR_LOG.DESCRIPTION%TYPE
    )
    IS
    BEGIN

        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);
        
        OR_BODISPATCH.GETINVENTORYBYUNIT(INUOPERATINGUNITID, ORFEQUIPBYUNIT);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);

        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;



    















    PROCEDURE VALSHEDEDITABLE
    (
        INUSCHEDAVAILABLEID   IN  OR_SCHED_AVAILABLE.SCHED_AVAILABLE_ID%TYPE,
        ONUERRORCODE        OUT     GE_MESSAGE.MESSAGE_ID%TYPE,
        OSBERRORMESSAGE     OUT     GE_ERROR_LOG.DESCRIPTION%TYPE
    )
    IS
    BEGIN
    
        
        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);

        OR_BODISPATCH.VALSHEDEDITABLE(INUSCHEDAVAILABLEID);

    
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);

        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    
        


























    PROCEDURE GETORDERSDISPATCHUNIT
    (
        INUOPERATINGUNITID  IN      OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE,
        IDTDATE             IN      DATE,
        OTBORDERS           IN OUT  OR_BCPROGRAMING .TYTBORDERS,
        ONUERRORCODE        OUT     GE_MESSAGE.MESSAGE_ID%TYPE,
        OSBERRORMESSAGE     OUT     GE_ERROR_LOG.DESCRIPTION%TYPE
    )
    IS
    BEGIN
        
        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE, OSBERRORMESSAGE);
        OTBORDERS.DELETE;

        OR_BOOPERATINGUNIT.VALIDOPERATINGUNIDID(INUOPERATINGUNITID);
        
        IF (IDTDATE IS NULL) THEN
            GE_BOERRORS.SETERRORCODE(2814);
        END IF;
        
        IF ( TRUNC( IDTDATE ) < TRUNC( UT_DATE.FDTSYSDATE )) THEN
            GE_BOERRORS.SETERRORCODEARGUMENT(3487,IDTDATE);
        END IF;

        
        OR_BODISPATCH.GETORDERSDISPATCHUNIT(
                                                                    INUOPERATINGUNITID,
                                                                    IDTDATE,
                                                                    OTBORDERS
                                                                    );

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETORDERSDISPATCHUNIT;
    
END OR_BSDISPATCH;