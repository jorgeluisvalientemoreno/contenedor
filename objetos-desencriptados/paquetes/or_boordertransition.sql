PACKAGE OR_boOrderTransition IS








































	FUNCTION FSBVERSION RETURN VARCHAR2;
	
    





    PROCEDURE CHANGESTATUSMOBILE
    (
        IORCORDER                   IN OUT NOCOPY DAOR_ORDER.STYOR_ORDER,
        IDTEXECUTIONDATE            IN OR_ORDER_STAT_CHANGE.EXECUTION_DATE%TYPE DEFAULT NULL,
        ISBRANGEDESCRIPTION         IN OR_ORDER_STAT_CHANGE.RANGE_DESCRIPTION%TYPE DEFAULT NULL,
        INUPROGRAMINGCLASSID        IN OR_ORDER_STAT_CHANGE.PROGRAMING_CLASS_ID%TYPE DEFAULT NULL,
        INUFINALOPERATINGUNITID     IN OR_ORDER_STAT_CHANGE.FINAL_OPER_UNIT_ID%TYPE DEFAULT NULL
    );


    




    PROCEDURE CHANGESTATUS
    (
        IORCORDER                   IN  OUT NOCOPY DAOR_ORDER.STYOR_ORDER,
        INUACTION_ID                IN  OR_TRANSITION.ACTION_ID%TYPE,
        INUFINALSTATUS              IN  OR_TRANSITION.FINAL_STATUS_ID%TYPE,
        IBLORDERDISPATCH            IN  BOOLEAN DEFAULT TRUE,
        IDTEXECUTIONDATE            IN OR_ORDER_STAT_CHANGE.EXECUTION_DATE%TYPE DEFAULT NULL,
        ISBRANGEDESCRIPTION         IN OR_ORDER_STAT_CHANGE.RANGE_DESCRIPTION%TYPE DEFAULT NULL,
        INUPROGRAMINGCLASSID        IN OR_ORDER_STAT_CHANGE.PROGRAMING_CLASS_ID%TYPE DEFAULT NULL,
        INUINITIALOPERATINGUNITID   IN OR_ORDER_STAT_CHANGE.INITIAL_OPER_UNIT_ID%TYPE DEFAULT NULL,
        INUFINALOPERATINGUNITID     IN OR_ORDER_STAT_CHANGE.FINAL_OPER_UNIT_ID%TYPE DEFAULT NULL,
        INUCOMMENTTYPEID            IN OR_ORDER_STAT_CHANGE.COMMENT_TYPE_ID%TYPE DEFAULT NULL,
        INUCAUSALID                 IN OR_ORDER_STAT_CHANGE.CAUSAL_ID%TYPE DEFAULT NULL,
        IDTCHANGEDATE               IN OR_ORDER_STAT_CHANGE.STAT_CHG_DATE%TYPE DEFAULT NULL
    );
    
    















    FUNCTION FBLEXISTSORDERTRANSITION
    (
        INUACTION_ID        IN OR_TRANSITION.ACTION_ID%TYPE,
        INUINITIALSTATUS    IN OR_TRANSITION.INITIAL_STATUS_ID%TYPE
    )
    RETURN BOOLEAN;

    




    FUNCTION FBLVALIDSTATUSREASSIGN
    (
        ORDERID             IN OR_TRANSITION.ACTION_ID%TYPE
    )
    RETURN BOOLEAN;
    




    PROCEDURE FIXDISPATCHSIZE
    (
        IORCSCHEDDISPATCH   IN OUT  DAOR_SCHED_DISPATCH.STYOR_SCHED_DISPATCH
    );
END OR_BOORDERTRANSITION;

PACKAGE BODY OR_boOrderTransition IS

    CSBVERSION      CONSTANT VARCHAR2(20) := 'SAO199134';
    
	FUNCTION FSBVERSION RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;
    
    


















    PROCEDURE CHANGESTATUSMOBILE
    (
        IORCORDER                   IN OUT NOCOPY DAOR_ORDER.STYOR_ORDER,
        IDTEXECUTIONDATE            IN OR_ORDER_STAT_CHANGE.EXECUTION_DATE%TYPE DEFAULT NULL,
        ISBRANGEDESCRIPTION         IN OR_ORDER_STAT_CHANGE.RANGE_DESCRIPTION%TYPE DEFAULT NULL,
        INUPROGRAMINGCLASSID        IN OR_ORDER_STAT_CHANGE.PROGRAMING_CLASS_ID%TYPE DEFAULT NULL,
        INUFINALOPERATINGUNITID     IN OR_ORDER_STAT_CHANGE.FINAL_OPER_UNIT_ID%TYPE DEFAULT NULL
    )
    IS
        NUACTION_ID        OR_TRANSITION.ACTION_ID%TYPE;
        NUFINALSTATUS      OR_TRANSITION.FINAL_STATUS_ID%TYPE;
        RCEXTESYSTID       DAOR_EXTERN_SYSTEMS_ID.STYOR_EXTERN_SYSTEMS_ID;
        RCTRANSITION       DAOR_TRANSITION.STYOR_TRANSITION;
        NUERR              GE_ERROR_LOG.MESSAGE_ID%TYPE;
        SBERR              GE_ERROR_LOG.DESCRIPTION%TYPE;
    BEGIN
        UT_TRACE.TRACE('Inicia OR_boOrderTransition.changeStatusMobile',15);

        NUACTION_ID := OR_BOCONSTANTS.CNUORDER_ACTION_ASSIGN;
        NUFINALSTATUS := OR_BOCONSTANTS.CNUORDER_STAT_ASSIGNED;

        UT_TRACE.TRACE('nuAction_id: '||NUACTION_ID||' - nuFinalStatus: '||NUFINALSTATUS,15);

        IF IORCORDER.STAGE_ID IS NOT NULL THEN
            PM_BOORDERTRANSITION.VALIDATESTATUSORDER(IORCORDER.ORDER_ID,IORCORDER.STAGE_ID,NUFINALSTATUS);
        END IF;

        
        RCTRANSITION := OR_BCORDERTRANSITION.FRCGETTRANSITION(NUACTION_ID, IORCORDER.ORDER_STATUS_ID, NUFINALSTATUS);

        
        
        
        IF RCTRANSITION.POST_EXPRESSION_ID IS NOT NULL THEN
            
            IF DAOR_EXTERN_SYSTEMS_ID.FBLEXIST(IORCORDER.ORDER_ID) THEN
                RCEXTESYSTID := DAOR_EXTERN_SYSTEMS_ID.FRCGETRECORD(IORCORDER.ORDER_ID);
            ELSE
                RCEXTESYSTID := NULL;
            END IF;
            
            OR_BOORDERINSTANCE.CREATEINSTANCE(IORCORDER, RCEXTESYSTID);
            
            GR_BOCONFIG_EXPRESSION.EXECUTE(RCTRANSITION.POST_EXPRESSION_ID, NUERR, SBERR);

            
            OR_BOINSTANCE.STOPINSTANCEMANAGER;

            
            IF NUERR != GE_BOCONSTANTS.OK THEN
                RAISE EX.CONTROLLED_ERROR;
            END IF;

        END IF;

        
        OR_BCORDERSTATCHANG.INSRECORD(
            IORCORDER.ORDER_ID,
            NUACTION_ID,
            OR_BOCONSTANTS.CNUORDER_STAT_REGISTERED,
            NUFINALSTATUS,
            IDTEXECUTIONDATE,
            ISBRANGEDESCRIPTION,
            INUPROGRAMINGCLASSID,
            NULL,
            INUFINALOPERATINGUNITID,
            NULL,
            NULL
            );

        
        IORCORDER.ORDER_STATUS_ID := NUFINALSTATUS;

        UT_TRACE.TRACE('Finaliza OR_boOrderTransition.changeStatusMobile',15);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END CHANGESTATUSMOBILE;
    
    































































    PROCEDURE CHANGESTATUS
    (
        IORCORDER                   IN  OUT NOCOPY DAOR_ORDER.STYOR_ORDER,
        INUACTION_ID                IN  OR_TRANSITION.ACTION_ID%TYPE,
        INUFINALSTATUS              IN  OR_TRANSITION.FINAL_STATUS_ID%TYPE,
        IBLORDERDISPATCH            IN  BOOLEAN DEFAULT TRUE,
        IDTEXECUTIONDATE            IN OR_ORDER_STAT_CHANGE.EXECUTION_DATE%TYPE DEFAULT NULL,
        ISBRANGEDESCRIPTION         IN OR_ORDER_STAT_CHANGE.RANGE_DESCRIPTION%TYPE DEFAULT NULL,
        INUPROGRAMINGCLASSID        IN OR_ORDER_STAT_CHANGE.PROGRAMING_CLASS_ID%TYPE DEFAULT NULL,
        INUINITIALOPERATINGUNITID   IN OR_ORDER_STAT_CHANGE.INITIAL_OPER_UNIT_ID%TYPE DEFAULT NULL,
        INUFINALOPERATINGUNITID     IN OR_ORDER_STAT_CHANGE.FINAL_OPER_UNIT_ID%TYPE DEFAULT NULL,
        INUCOMMENTTYPEID            IN OR_ORDER_STAT_CHANGE.COMMENT_TYPE_ID%TYPE DEFAULT NULL,
        INUCAUSALID                 IN OR_ORDER_STAT_CHANGE.CAUSAL_ID%TYPE DEFAULT NULL,
        IDTCHANGEDATE               IN OR_ORDER_STAT_CHANGE.STAT_CHG_DATE%TYPE DEFAULT NULL
    )
    IS
        RCEXTESYSTID                DAOR_EXTERN_SYSTEMS_ID.STYOR_EXTERN_SYSTEMS_ID;
        RCTRANSITION                DAOR_TRANSITION.STYOR_TRANSITION;
        NUERR                       GE_ERROR_LOG.MESSAGE_ID%TYPE;
        SBERR                       GE_ERROR_LOG.DESCRIPTION%TYPE;
        NUOPERATINGUNITID           OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE;
        NUOPERUNITSTATUSID          OR_OPERATING_UNIT.OPER_UNIT_STATUS_ID%TYPE;
        RCOLDSCHEDDISPATCH          DAOR_SCHED_DISPATCH.STYOR_SCHED_DISPATCH;
        BLCHANGESTATOPERUNIT        BOOLEAN;
        RCOPERATINGUNIT             DAOR_OPERATING_UNIT.STYOR_OPERATING_UNIT;
        DTDATELTCHGE                DATE;
    BEGIN
        UT_TRACE.TRACE('Inicia OR_boOrderTransition.changeStatus',15);
        UT_TRACE.TRACE('inuAction_id: '||INUACTION_ID||' - inuFinalStatus: '||INUFINALSTATUS,15);
        
        IF IORCORDER.STAGE_ID IS NOT NULL THEN
            PM_BOORDERTRANSITION.VALIDATESTATUSORDER(IORCORDER.ORDER_ID,IORCORDER.STAGE_ID,INUFINALSTATUS);
        END IF;
    
        
        RCTRANSITION := OR_BCORDERTRANSITION.FRCGETTRANSITION(INUACTION_ID, IORCORDER.ORDER_STATUS_ID, INUFINALSTATUS);

        
        
        
        IF RCTRANSITION.POST_EXPRESSION_ID IS NOT NULL THEN
            
            IF DAOR_EXTERN_SYSTEMS_ID.FBLEXIST(IORCORDER.ORDER_ID) THEN
                RCEXTESYSTID := DAOR_EXTERN_SYSTEMS_ID.FRCGETRECORD(IORCORDER.ORDER_ID);
            ELSE
                RCEXTESYSTID := NULL;
            END IF;
            
            OR_BOORDERINSTANCE.CREATEINSTANCE(IORCORDER, RCEXTESYSTID);
            
            GR_BOCONFIG_EXPRESSION.EXECUTE(RCTRANSITION.POST_EXPRESSION_ID, NUERR, SBERR);
            
            
            OR_BOINSTANCE.STOPINSTANCEMANAGER;

            
            IF NUERR != GE_BOCONSTANTS.OK THEN
                RAISE EX.CONTROLLED_ERROR;
            END IF;

        END IF;

        IF (IDTCHANGEDATE IS NOT NULL) THEN
                DTDATELTCHGE := OR_BCORDERSTATCHANG.FDTGETCHANGEDATE(IORCORDER.ORDER_ID,IORCORDER.ORDER_STATUS_ID);
                IF (DTDATELTCHGE IS NOT NULL) THEN
                        OR_BOFWLEGALIZEORDER.VALIDATEFINALDATE(DTDATELTCHGE,IDTCHANGEDATE);
                ELSE
                       OR_BOFWLEGALIZEORDERUTIL.VALIDFINALDATEOFSYSDATE(IDTCHANGEDATE);
                END IF;
        END IF;

        
        OR_BCORDERSTATCHANG.INSRECORD(
            IORCORDER.ORDER_ID, 
            INUACTION_ID,
            IORCORDER.ORDER_STATUS_ID,
            INUFINALSTATUS,
            IDTEXECUTIONDATE,
            ISBRANGEDESCRIPTION,
            INUPROGRAMINGCLASSID,
            INUINITIALOPERATINGUNITID,
            INUFINALOPERATINGUNITID,
            INUCOMMENTTYPEID,
            INUCAUSALID,
            IDTCHANGEDATE
            );
            
        
        IF (INUFINALSTATUS IN (
                              OR_BOCONSTANTS.CNUORDER_STAT_EXECUTING,
                              OR_BOCONSTANTS.CNUORDER_STAT_EXECUTED,
                              OR_BOCONSTANTS.CNUORDER_STAT_CLOSED,
                              OR_BOCONSTANTS.CNUORDER_STAT_MOVILIZING,
                              OR_BOCONSTANTS.CNUORDER_STAT_ASSIGNED,
                              OR_BOCONSTANTS.CNUORDER_STAT_REGISTERED)
                         AND  (NVL(IORCORDER.ADM_PENDING, GE_BOCONSTANTS.CSBNO) = GE_BOCONSTANTS.CSBNO)
                         AND  IBLORDERDISPATCH
            )
        THEN

            
            NUOPERATINGUNITID := DAOR_ORDER.FNUGETOPERATING_UNIT_ID(IORCORDER.ORDER_ID);
            UT_TRACE.TRACE('nuOperatingUnitId: '||NUOPERATINGUNITID,15);
            IF (NUOPERATINGUNITID IS NOT NULL) THEN
                DAOR_OPERATING_UNIT.GETRECORD(NUOPERATINGUNITID, RCOPERATINGUNIT);
                
                IF (RCOPERATINGUNIT.ASSIGN_TYPE = 'S') THEN
                    
                    IF ( RCOPERATINGUNIT.OPER_UNIT_CLASSIF_ID NOT IN
                        (OR_BCSCHED.GNUCLASDISPATCH , OR_BCSCHED.GNUSUPV_DISPATC) ) THEN
                        NUOPERUNITSTATUSID:=RCOPERATINGUNIT.OPER_UNIT_STATUS_ID;
                        UT_TRACE.TRACE('Estado Unidad:'||NUOPERUNITSTATUSID,15);
                        UT_TRACE.TRACE('inuFinalStatus:'||INUFINALSTATUS,15);

                        IF INUFINALSTATUS = OR_BOCONSTANTS.CNUORDER_STAT_MOVILIZING
                        THEN
                            OR_BOOPEUNI_TRANSIT.CHANGESTATUS (NUOPERATINGUNITID, OR_BOCONSTANTS.CNUOPERA_UNI_MOBILIZING);
                        END IF;

                        IF INUFINALSTATUS = OR_BOCONSTANTS.CNUORDER_STAT_EXECUTING
                        THEN
                            OR_BOOPEUNI_TRANSIT.CHANGESTATUS (NUOPERATINGUNITID, OR_BOCONSTANTS.CNUOPERA_UNI_EXECUTE);
                        END IF;
                         
                        BLCHANGESTATOPERUNIT := OR_BCDISPATCH.FBLGETDISPATCHBYORDER(IORCORDER.ORDER_ID, RCOLDSCHEDDISPATCH);
                        
                        IF  (
                               (
                                   IORCORDER.ORDER_STATUS_ID IN (OR_BOCONSTANTS.CNUORDER_STAT_MOVILIZING,
                                                            OR_BOCONSTANTS.CNUORDER_STAT_EXECUTING))
                            AND
                             (
                                   INUFINALSTATUS IN (OR_BOCONSTANTS.CNUORDER_STAT_EXECUTED,
                                                 OR_BOCONSTANTS.CNUORDER_STAT_CLOSED,
                                                 OR_BOCONSTANTS.CNUORDER_STAT_REGISTERED,
                                                 OR_BOCONSTANTS.CNUORDER_STAT_ASSIGNED)
                               )

                            )
                        THEN
                            
                            OR_BOOPEUNI_TRANSIT.CHANGESTATUS (NUOPERATINGUNITID, OR_BOCONSTANTS.CNUOPERA_UNI_AVAILABLE);

                            
                            IF INUFINALSTATUS = OR_BOCONSTANTS.CNUORDER_STAT_EXECUTED
                               THEN
                                IF( BLCHANGESTATOPERUNIT)THEN
                                    RCOLDSCHEDDISPATCH.DISPATCH_STATUS := OR_BOCONSTANTS.CSBDISPATCHSTATUSCLOSE;

                                END IF;
                            END IF;
                        END IF;
                    END IF;

                    IF (BLCHANGESTATOPERUNIT AND RCOLDSCHEDDISPATCH.DATE_ = TRUNC(UT_DATE.FDTSYSDATE)
                       AND INUFINALSTATUS IN (OR_BOCONSTANTS.CNUORDER_STAT_EXECUTED, OR_BOCONSTANTS.CNUORDER_STAT_CLOSED)) THEN
                           
                           
                           OR_BOORDERTRANSITION.FIXDISPATCHSIZE(RCOLDSCHEDDISPATCH);
                           
                           DAOR_SCHED_DISPATCH.UPDRECORD(RCOLDSCHEDDISPATCH);
                    END IF;
                END IF;
            END IF;
        END IF;

        IF (INUFINALSTATUS = OR_BOCONSTANTS.CNUORDER_STAT_EXECUTING) THEN
            
            IORCORDER.EXEC_INITIAL_DATE := UT_DATE.FDTSYSDATE;
        END IF;
        
        IF ((IORCORDER.EXEC_INITIAL_DATE IS NULL) AND
            (INUFINALSTATUS = OR_BOCONSTANTS.CNUORDER_STAT_EXECUTED)) THEN
            
            IORCORDER.EXEC_INITIAL_DATE := UT_DATE.FDTSYSDATE;
        END IF;

        
        IORCORDER.ORDER_STATUS_ID := INUFINALSTATUS;

        UT_TRACE.TRACE('Finaliza OR_boOrderTransition.changeStatus',15);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END CHANGESTATUS;
    
    
    FUNCTION FBLEXISTSORDERTRANSITION
    (
        INUACTION_ID        IN OR_TRANSITION.ACTION_ID%TYPE,
        INUINITIALSTATUS    IN OR_TRANSITION.INITIAL_STATUS_ID%TYPE
    )
    RETURN BOOLEAN
    IS
    BEGIN
        RETURN OR_BCORDERTRANSITION.FTBGETTRANSITIONS(
            INUACTION_ID, INUINITIALSTATUS).COUNT > 0;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;

    END FBLEXISTSORDERTRANSITION;

    















    FUNCTION FBLVALIDSTATUSREASSIGN
    (
        ORDERID             IN OR_TRANSITION.ACTION_ID%TYPE
    )
    RETURN BOOLEAN
    IS
        ORDERSTATUSID   OR_ORDER.ORDER_STATUS_ID%TYPE;
    BEGIN

        UT_TRACE.TRACE('INICIA  OR_boOrderTransition.fblValidStatusReassign
            orderId := '||ORDERID,15);

        ORDERSTATUSID := DAOR_ORDER.FNUGETORDER_STATUS_ID(ORDERID);

        UT_TRACE.TRACE('orderStatusId := '||ORDERSTATUSID,15);

        IF(OR_BCORDERTRANSITION.FTBGETTRANSITIONS(OR_BOCONSTANTS.CNUORDER_ACTION_ASSIGN, ORDERSTATUSID).COUNT > 0
           AND DAOR_ORDER_STATUS.FSBGETIS_FINAL_STATUS(ORDERSTATUSID) = OR_BOCONSTANTS.CSBNO) THEN
            RETURN TRUE;
        END IF;

        RETURN FALSE;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    















    PROCEDURE FIXDISPATCHSIZE
    (
        IORCSCHEDDISPATCH   IN OUT  DAOR_SCHED_DISPATCH.STYOR_SCHED_DISPATCH
    )
    IS

        NUMINUTEOFDAY   OR_SCHED_DISPATCH.HOUR_END%TYPE := UT_DATE.FNUMINUTEOFDAY(UT_DATE.FDTSYSDATE);
    BEGIN
        UT_TRACE.TRACE('INICIA  OR_boOrderTransition.FixDispatchSize', 2);
        UT_TRACE.TRACE('iorcSchedDispatch.SCHED_DISPATCH_ID: '||IORCSCHEDDISPATCH.SCHED_DISPATCH_ID||' iorcSchedDispatch.hour_start: '||IORCSCHEDDISPATCH.HOUR_START||' iorcSchedDispatch.hour_end: '||IORCSCHEDDISPATCH.HOUR_END, 2);
        UT_TRACE.TRACE('Minutos del d�a: '||NUMINUTEOFDAY, 2);
        
        
        
        IF (IORCSCHEDDISPATCH.HOUR_START <NUMINUTEOFDAY
            AND
            IORCSCHEDDISPATCH.HOUR_END > NUMINUTEOFDAY
            ) THEN
            IORCSCHEDDISPATCH.HOUR_END := NUMINUTEOFDAY;
            IORCSCHEDDISPATCH.DURATION := NUMINUTEOFDAY - IORCSCHEDDISPATCH.HOUR_START;
        END IF;

        UT_TRACE.TRACE('--FIN OR_boOrderTransition.FixDispatchSize', 2);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FIXDISPATCHSIZE;


END OR_BOORDERTRANSITION;