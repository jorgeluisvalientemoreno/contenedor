PACKAGE BODY PR_BOCreationComponent AS
    











    
    
    
    
    CSBVERSION      CONSTANT VARCHAR2(20)  := 'SAO202368';

    
    CNUNULLNUMS     CONSTANT NUMBER := PKGENERALPARAMETERSMGR.FNUGETNUMBERPARAMETER('NULLNUMS');
    EXCALLSERVICE   EXCEPTION;

    
    
    
    SBCALLSERVICE   VARCHAR2(2000);

    
    
    
    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;


    






















    PROCEDURE CREATIONCOMPONENTGROUP
        (
        INUPRODUCTID            IN PR_COMPONENT.PRODUCT_ID%TYPE,
        INUCOMPONENTTYPEID      IN PR_COMPONENT.COMPONENT_TYPE_ID%TYPE,
        INUCLASSSERVICEID       IN PR_COMPONENT.CLASS_SERVICE_ID%TYPE,
        IDTCREATIONDATE         IN PR_COMPONENT.CREATION_DATE%TYPE,
        IDTSERVICEDATE          IN PR_COMPONENT.SERVICE_DATE%TYPE,
        INUPARENTCOMPONENTID    IN PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE,
        INUCOMPONENTSTATUSID    IN PR_COMPONENT.COMPONENT_STATUS_ID%TYPE,
        ONUCOMPONENTIDGROUP     OUT PR_COMPONENT.COMPONENT_ID%TYPE
        )
    IS
        RCCOMPONENT     DAPR_COMPONENT.STYPR_COMPONENT;
        RCCOMPONENTLINK DAPR_COMPONENT_LINK.STYPR_COMPONENT_LINK;
        NUERRORCODE     GE_ERROR_LOG.ERROR_LOG_ID%TYPE;
        SBERRORMESSAGE  GE_ERROR_LOG.DESCRIPTION%TYPE;
    BEGIN
        
        DAPS_COMPONENT_TYPE.ACCKEY(INUCOMPONENTTYPEID);
        
        
        DAPS_CLASS_SERVICE.ACCKEY(INUCLASSSERVICEID);
    
        ONUCOMPONENTIDGROUP := PR_BOSEQUENCE.GETCOMPONENTID;

        RCCOMPONENT.COMPONENT_ID := ONUCOMPONENTIDGROUP;
        RCCOMPONENT.SERVICE_NUMBER := ONUCOMPONENTIDGROUP;
        RCCOMPONENT.COMPONENT_TYPE_ID := INUCOMPONENTTYPEID;
        RCCOMPONENT.PRODUCT_ID := INUPRODUCTID;
        RCCOMPONENT.IS_INCONSISTENT := GE_BOCONSTANTS.CSBNO;
        RCCOMPONENT.COMPONENT_STATUS_ID := INUCOMPONENTSTATUSID;
        RCCOMPONENT.IS_INCLUDED := GE_BOCONSTANTS.CSBNO;
        RCCOMPONENT.CREATION_DATE := IDTCREATIONDATE;
        RCCOMPONENT.LAST_UPD_DATE := IDTCREATIONDATE;
        RCCOMPONENT.CLASS_SERVICE_ID := INUCLASSSERVICEID;
        RCCOMPONENT.UNCHARGED_TIME := 0;
        RCCOMPONENT.QUANTITY := 1;
        RCCOMPONENT.IS_MAIN := GE_BOCONSTANTS.CSBNO;
        RCCOMPONENT.COMMERCIAL_PLAN_ID := NULL;

        
        DAPR_COMPONENT.INSRECORD(RCCOMPONENT);
        UT_TRACE.TRACE('Componente Agrupador Creado:['||ONUCOMPONENTIDGROUP||']',7);

        
        RCCOMPONENTLINK.COMPONENT_LINK_ID := PR_BOSEQUENCE.GETCOMPONENTLINKID;
        RCCOMPONENTLINK.PARENT_COMPONENT_ID := INUPARENTCOMPONENTID;
        RCCOMPONENTLINK.CHILD_COMPONENT_ID := ONUCOMPONENTIDGROUP;
        DAPR_COMPONENT_LINK.INSRECORD(RCCOMPONENTLINK);
        UT_TRACE.TRACE('Enlace Creado:['||RCCOMPONENTLINK.COMPONENT_LINK_ID||']',7);

        MO_BOUTILITIES.INITIALIZEOUTPUT(NUERRORCODE,SBERRORMESSAGE);

        
        PKSUBSSERVCOMPONENT.REGISTER(
                                    ONUCOMPONENTIDGROUP,
                                    INUPARENTCOMPONENTID,
                                    INUPRODUCTID,
                                    IDTSERVICEDATE,
                                    RCCOMPONENT.CLASS_SERVICE_ID,
                                    RCCOMPONENT.COMPONENT_TYPE_ID,
                                    RCCOMPONENT.COMPONENT_STATUS_ID,
                                    RCCOMPONENT.SERVICE_NUMBER,
                                    UT_DATE.FDTMAXDATE,
                                    RCCOMPONENT.SERVICE_NUMBER,
                                    RCCOMPONENT.UNCHARGED_TIME,
                                    INUPRODUCTID,
                                    NUERRORCODE,
                                    SBERRORMESSAGE,
                                    RCCOMPONENT.QUANTITY,
                                    GE_BOEQUIVALENCVALUES.FSBGETTARGETVALUE(GW_BOPARAMETER.FNUGETEQ_Y_N,GE_BOCONSTANTS.CSBNO),
                                    NULL,
                                    GE_BOCONSTANTS.CSBNO
                                    );
        GW_BOERRORS.CHECKERROR(NUERRORCODE,SBERRORMESSAGE);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;


    PROCEDURE COMPONENTMUSTBEINCLUDED
        (
        INUINCLUDEDFEATURESID       IN CC_INCLUDED_FEATURES.INCLUDED_FEATURES_ID%TYPE,
        INUPRODUCTID                IN PR_COMPONENT.PRODUCT_ID%TYPE,
        INUPARENTCOMPONENTID        IN PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE,
        IDTCREATIONDATE             IN PR_COMPONENT.CREATION_DATE%TYPE,
        INUCOMPONENTSTATUSID        IN PR_COMPONENT.COMPONENT_STATUS_ID%TYPE,
        OSBISINCLUDED               OUT PR_COMPONENT.IS_INCLUDED%TYPE,
        ONUPARENTCOMPONENTIDFINAL   OUT PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE
        )
    IS
        RCCOMPONENT         DAPR_COMPONENT.STYPR_COMPONENT;
        RCINCLUDEDFEATURES  DACC_INCLUDED_FEATURES.STYCC_INCLUDED_FEATURES;
        RCINCLUDED          DACC_INCLUDED.STYCC_INCLUDED;
        NUCOMPONENTIDGROUP  PR_COMPONENT.COMPONENT_ID%TYPE;
        NUQUANTITYCURRENT   NUMBER := 0;
    BEGIN

        
        IF (INUPARENTCOMPONENTID IS NULL) THEN
            UT_TRACE.TRACE('Componente Padre es Nulo',7);
            OSBISINCLUDED := GE_BOCONSTANTS.CSBNO;
            ONUPARENTCOMPONENTIDFINAL := NULL;
            RETURN;
        END IF;
    
        
        RCCOMPONENT := DAPR_COMPONENT.FRCGETRECORD(INUPARENTCOMPONENTID);
        UT_TRACE.TRACE('Componente Padre Includo:['||RCCOMPONENT.IS_INCLUDED||']',7);

        
        IF (RCCOMPONENT.IS_INCLUDED = GE_BOCONSTANTS.CSBYES) THEN
            UT_TRACE.TRACE('Componente Padre es Incluido',7);
            OSBISINCLUDED := GE_BOCONSTANTS.CSBYES;
            ONUPARENTCOMPONENTIDFINAL := INUPARENTCOMPONENTID;
            RETURN;
        END IF;

        
        IF (INUINCLUDEDFEATURESID IS NULL) THEN
            UT_TRACE.TRACE('Composicion es Nulo',7);
            OSBISINCLUDED := GE_BOCONSTANTS.CSBNO;
            ONUPARENTCOMPONENTIDFINAL := INUPARENTCOMPONENTID;
            RETURN;
        END IF;

        
        RCINCLUDEDFEATURES := DACC_INCLUDED_FEATURES.FRCGETRECORD(INUINCLUDEDFEATURESID);
        UT_TRACE.TRACE('Incluidos Configurados:['||RCINCLUDEDFEATURES.INCLUDED_QUANTITY||']Composicion Padre:['||RCINCLUDEDFEATURES.PARENT_INCLUDED_ID||']',7);

        

        IF  (RCCOMPONENT.IS_INCLUDED = GE_BOCONSTANTS.CSBNO)
            AND
            (RCINCLUDEDFEATURES.PARENT_INCLUDED_ID IS NOT NULL )
        THEN
            UT_TRACE.TRACE('La Composiciï¿½n Tiene Padre',7);
            OSBISINCLUDED := GE_BOCONSTANTS.CSBNO;
            ONUPARENTCOMPONENTIDFINAL := INUPARENTCOMPONENTID;
            RETURN;
        END IF;

        
        RCINCLUDED := DACC_INCLUDED.FRCGETRECORD(RCINCLUDEDFEATURES.INCLUDED_ID);
        
        
        FOR REC IN PR_BCCOMPONENT.CUCOMPONENTSBYTYPEANDCLASS(INUPRODUCTID, RCINCLUDED.COMPONENT_TYPE_ID, RCINCLUDED.CLASS_SERVICE_ID) LOOP
            NUCOMPONENTIDGROUP := REC.COMPONENT_ID;
        END LOOP;
        UT_TRACE.TRACE('Componente Agrupador:['||NUCOMPONENTIDGROUP||']',7);

        IF (NUCOMPONENTIDGROUP IS NULL) THEN
        
            
            CREATIONCOMPONENTGROUP  (
                                    INUPRODUCTID,
                                    RCINCLUDED.COMPONENT_TYPE_ID,
                                    RCINCLUDED.CLASS_SERVICE_ID,
                                    IDTCREATIONDATE,
                                    RCCOMPONENT.SERVICE_DATE,
                                    INUPARENTCOMPONENTID,
                                    INUCOMPONENTSTATUSID,
                                    NUCOMPONENTIDGROUP
                                    );
            OSBISINCLUDED := GE_BOCONSTANTS.CSBYES;
            ONUPARENTCOMPONENTIDFINAL := NUCOMPONENTIDGROUP;
            RETURN;
        END IF;

        
        FOR REC IN PR_BCCOMPONENT.CUCHILDCOMPONENTS(NUCOMPONENTIDGROUP) LOOP
            UT_TRACE.TRACE('Componente:['||REC.COMPONENT_ID||']Composicion Inc:['||REC.INCLUDED_FEATURES_ID||']',8);

            
            IF  (REC.INCLUDED_FEATURES_ID = INUINCLUDEDFEATURESID) THEN
                NUQUANTITYCURRENT := NUQUANTITYCURRENT + 1;
            END IF;
        END LOOP;
        UT_TRACE.TRACE('Incluidos Actuales:['||NUQUANTITYCURRENT||']',7);

        
        IF (NUQUANTITYCURRENT < RCINCLUDEDFEATURES.INCLUDED_QUANTITY) THEN
            OSBISINCLUDED := GE_BOCONSTANTS.CSBYES;
            ONUPARENTCOMPONENTIDFINAL := NUCOMPONENTIDGROUP;
            RETURN;
        END IF;

        OSBISINCLUDED := GE_BOCONSTANTS.CSBNO;
        ONUPARENTCOMPONENTIDFINAL := INUPARENTCOMPONENTID;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;




    


    PROCEDURE ADDRESSPARSER(
        INUGEOGRAPLOCATIONID    IN  AB_ADDRESS.GEOGRAP_LOCATION_ID%TYPE,
        ISBADDRESS              IN  AB_ADDRESS.ADDRESS%TYPE,
        INUNEIGHBORTHOODID      IN  AB_ADDRESS.NEIGHBORTHOOD_ID%TYPE,
        ONUADDRESSID            OUT AB_ADDRESS.ADDRESS_ID%TYPE,
        OSBADDRESSPARSED        OUT AB_ADDRESS.ADDRESS_PARSED%TYPE,
        OSBSUCCESSMESSAGE       OUT VARCHAR2
    ) IS
        PRAGMA AUTONOMOUS_TRANSACTION;
        
        ONUERRORCODE        GE_ERROR_LOG.ERROR_LOG_ID%TYPE;
	    OSBERRORMESSAGE     GE_ERROR_LOG.DESCRIPTION%TYPE;
	    
    BEGIN
        
		AB_BSADDRESSPARSER.INSERTADDRESSONNOTFOUND  (INUGEOGRAPLOCATIONID,
                                        			 ISBADDRESS,
                                        			 ONUADDRESSID,
                                        			 OSBADDRESSPARSED,
                                        			 OSBSUCCESSMESSAGE,
                                        			 ONUERRORCODE,
                                        			 OSBERRORMESSAGE,
                                        			 INUNEIGHBORTHOODID);
                                        			 
        GW_BOERRORS.CHECKERROR(ONUERRORCODE, OSBERRORMESSAGE);
        
        COMMIT;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ROLLBACK;
            RAISE;
        WHEN OTHERS THEN
            ROLLBACK;
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END ADDRESSPARSER;
    

    
    











































































    PROCEDURE REGISTER
    (
        INUPRODUCTID            IN PR_COMPONENT.PRODUCT_ID%TYPE,
        INUCOMPONENTTYPEID      IN PR_COMPONENT.COMPONENT_TYPE_ID%TYPE,
        INUCLASSSERVICEID       IN PR_COMPONENT.CLASS_SERVICE_ID%TYPE,
        ISBSERVICENUMBER        IN PR_COMPONENT.SERVICE_NUMBER%TYPE,
        IDTSERVICEDATE          IN PR_COMPONENT.SERVICE_DATE%TYPE,
        IDTMEDIATIONDATE        IN PR_COMPONENT.MEDIATION_DATE%TYPE,
        INUQUANTITY             IN PR_COMPONENT.QUANTITY%TYPE,
        INUUNCHARGEDTIME        IN PR_COMPONENT.UNCHARGED_TIME%TYPE,
        ISBDIRECTIONALITY       IN PR_COMPONENT.DIRECTIONALITY_ID%TYPE,
        INUCATEGORYID           IN PR_COMPONENT.CATEGORY_ID%TYPE,
        INUSUBCATEGORYID        IN PR_COMPONENT.SUBCATEGORY_ID%TYPE,
        INUDISTRIBUTADMINID     IN PR_COMPONENT.DISTRIBUT_ADMIN_ID%TYPE,
        INUMETER                IN PR_COMPONENT.METER%TYPE,
        INUBUILDINGID           IN PR_COMPONENT.BUILDING_ID%TYPE,
        INUASSIGNROUTEID        IN PR_COMPONENT.ASSIGN_ROUTE_ID%TYPE,
        INUPARENTCOMP           IN PR_COMPONENT.COMPONENT_ID%TYPE,
        ISBDISTRICTID           IN PR_COMPONENT.DISTRICT_ID%TYPE,
        ISBINCLUDED             IN PR_COMPONENT.IS_INCLUDED%TYPE,
        INUADDRESSID            IN AB_ADDRESS.ADDRESS_ID%TYPE,
        INUGEOGRAP_LOCATION_ID  IN GE_GEOGRA_LOCATION.GEOGRAP_LOCATION_ID%TYPE,
        INUNEIGHBORTHOOD_ID     IN AB_ADDRESS.NEIGHBORTHOOD_ID%TYPE,
        ISBADDRESS              IN AB_ADDRESS.ADDRESS%TYPE,
        INUPRODUCTORIGIN        IN PR_COMPONENT.PRODUCT_ORIGIN_ID%TYPE,
        INUINCLUDED_FEATURES_ID IN PR_COMPONENT.INCLUDED_FEATURES_ID%TYPE,
        ISBISMAIN               IN PR_COMPONENT.IS_MAIN%TYPE,
        INUCOMMERCIAL_PLAN_ID   IN PR_COMPONENT.COMMERCIAL_PLAN_ID%TYPE,
        ONUCOMPONENTID          OUT PR_COMPONENT.COMPONENT_ID%TYPE,
        IBLREGADDRESS           IN BOOLEAN DEFAULT TRUE,
        IBLELEMMEDI             IN BOOLEAN DEFAULT TRUE,
        IBLSPECIALPHONE         IN BOOLEAN DEFAULT TRUE,
        INUCOMPPRODPROVISIONID  IN PR_COMPONENT.COMP_PROD_PROV_ID%TYPE DEFAULT NULL,
        INUCOMPONENTSTATUSID    IN PR_COMPONENT.COMPONENT_STATUS_ID%TYPE DEFAULT NULL,
        IBLVALIDATE             IN BOOLEAN DEFAULT TRUE
    )
	IS
		
        NUERRORCODE        GE_ERROR_LOG.ERROR_LOG_ID%TYPE;
	    SBERRORMESSAGE     GE_ERROR_LOG.DESCRIPTION%TYPE;

		RCCOMPONENT   DAPR_COMPONENT.STYPR_COMPONENT;
		RCCOMPLINK    DAPR_COMPONENT_LINK.STYPR_COMPONENT_LINK;
        RCPRODUCT     DAPR_PRODUCT.STYPR_PRODUCT;
        
        DTSYSDATE     DATE := SYSDATE;
        
        RCADDRESS     DAAB_ADDRESS.STYAB_ADDRESS;

        SBADDRESS_PARSED      AB_ADDRESS.ADDRESS_PARSED%TYPE;
        NUADDRESS_ID          AB_ADDRESS.ADDRESS_ID%TYPE;
        
        SBSUCCESSMESSAGE      GE_ERROR_LOG.DESCRIPTION%TYPE;
        
        NUERROR			      GE_ERROR_LOG.ERROR_LOG_ID%TYPE;
        
        SBERRMSG              GE_ERROR_LOG.DESCRIPTION%TYPE;
        CNUADDRESS_TYPE_ID    CONSTANT NUMBER := 1; 
        SBADDRESS             AB_ADDRESS.ADDRESS%TYPE;
        NUGEOGRAP_LOCATION_ID AB_ADDRESS.GEOGRAP_LOCATION_ID%TYPE;
        NUNEIGHBORTHOOD_ID    AB_ADDRESS.NEIGHBORTHOOD_ID%TYPE;
        SBINCLUIDOBSS         VARCHAR2(5);
        NUELEMIDEM            ELEMMEDI.ELMEIDEM%TYPE;
        NUCOMPONENTID         PR_COMPONENT.COMPONENT_ID%TYPE;
        SBINCLUDED            PR_COMPONENT.IS_INCLUDED%TYPE;
        NUCATEGORYID          PR_COMPONENT.CATEGORY_ID%TYPE;
        NUSUBCATEGORYID       PR_COMPONENT.SUBCATEGORY_ID%TYPE;
        

        PROCEDURE VALIDATEDATAREGISTER
        IS
            NUSERVICIO   PR_PRODUCT.PRODUCT_TYPE_ID%TYPE;
        BEGIN
            UT_TRACE.TRACE('Inicia PR_BOCreationComponent.Register.ValidateDataRegister',11);

            NUSERVICIO := DAPR_PRODUCT.FNUGETPRODUCT_TYPE_ID(INUPRODUCTID);

            PS_BOPRODCOMPOSITION.VALIDATECOMPONENT( NUSERVICIO, INUCOMPONENTTYPEID);

            IF (INUCLASSSERVICEID IS NOT NULL) THEN
                PS_BOPRODCOMPOSITION.VALIDATECLASS( NUSERVICIO, INUCOMPONENTTYPEID, INUCLASSSERVICEID);
            END IF;
            
            IF (INUCATEGORYID IS NOT NULL) THEN
                PKTBLCATEGORI.ACCKEY(INUCATEGORYID);
                IF (INUSUBCATEGORYID IS NOT NULL) THEN
                    PKTBLSUBCATEG.ACCKEY(INUCATEGORYID,INUSUBCATEGORYID);
                END IF;
            END IF;

            IF ( INUPRODUCTORIGIN IS NOT NULL) THEN
                DAPR_PRODUCT.ACCKEY( INUPRODUCTORIGIN );
            END IF;
            
            IF ( INUINCLUDED_FEATURES_ID IS NOT NULL) THEN
                DACC_INCLUDED_FEATURES.ACCKEY(INUINCLUDED_FEATURES_ID);
            END IF;
            
            IF( INUQUANTITY IS NOT NULL AND INUQUANTITY  < 0 ) THEN
                ERRORS.SETERROR  (3305);
                RAISE  EX.CONTROLLED_ERROR;
            END IF;
            
            IF (INUPARENTCOMP IS NOT NULL) THEN
                DAPR_COMPONENT.ACCKEY( INUPARENTCOMP );
            END IF;
            
            IF (INUADDRESSID IS NOT NULL) THEN
                DAAB_ADDRESS.ACCKEY(INUADDRESSID);
            END IF;
            
            IF (INUGEOGRAP_LOCATION_ID IS NOT NULL) THEN
                DAGE_GEOGRA_LOCATION.ACCKEY(INUGEOGRAP_LOCATION_ID);
            END IF;
            
            IF ( INUNEIGHBORTHOOD_ID IS NOT NULL) THEN
                DAGE_GEOGRA_LOCATION.ACCKEY(INUNEIGHBORTHOOD_ID );
            END IF;
            
            IF ( INUCOMPPRODPROVISIONID IS NOT NULL) THEN
                DAPR_COMPONENT.ACCKEY(INUCOMPPRODPROVISIONID);
            END IF;

            UT_TRACE.TRACE('Finaliza PR_BOCreationComponent.Register.ValidateDataRegister',11);
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
        END;

    BEGIN
    
        UT_TRACE.TRACE('Inicia Mï¿½todo PR_BOCreationComponent.Register',8);
        UT_TRACE.TRACE('Clase:['||INUCLASSSERVICEID||']',9);

        
        IF (IBLVALIDATE) THEN
            VALIDATEDATAREGISTER;
        END IF;
        
        
        IF (ONUCOMPONENTID IS NULL) THEN
		    ONUCOMPONENTID := PR_BOSEQUENCE.GETCOMPONENTID;
		    NUCOMPONENTID  := ONUCOMPONENTID ;
		ELSE
 		    NUCOMPONENTID  := ONUCOMPONENTID  ;
 		END IF;
 		
		UT_TRACE.TRACE('Id Componente:['||NUCOMPONENTID||']',10);

        SBINCLUDED := NVL (ISBINCLUDED,GE_BOCONSTANTS.CSBNO);

        NUCATEGORYID := INUCATEGORYID;
        NUSUBCATEGORYID := INUSUBCATEGORYID;
        
        IF ( NUCATEGORYID  IS NULL) THEN
            NUCATEGORYID := DAPR_PRODUCT.FNUGETCATEGORY_ID(INUPRODUCTID);
        END IF;
        IF ( NUSUBCATEGORYID IS NULL) THEN
            NUSUBCATEGORYID := DAPR_PRODUCT.FNUGETSUBCATEGORY_ID(INUPRODUCTID);
        END IF;
        
        
        RCCOMPONENT.COMPONENT_ID                := NUCOMPONENTID;
        RCCOMPONENT.CATEGORY_ID                 := NUCATEGORYID;
        RCCOMPONENT.SUBCATEGORY_ID              := NUSUBCATEGORYID;
        RCCOMPONENT.COMPONENT_TYPE_ID           := INUCOMPONENTTYPEID;
        RCCOMPONENT.CLASS_SERVICE_ID            := INUCLASSSERVICEID;
        RCCOMPONENT.SERVICE_NUMBER              := NVL(ISBSERVICENUMBER,NUCOMPONENTID);
        RCCOMPONENT.SERVICE_DATE                := NVL(IDTSERVICEDATE,UT_DATE.FDTMAXDATE);
        RCCOMPONENT.QUANTITY                    := NVL(INUQUANTITY,1);
        
        IF (RCCOMPONENT.QUANTITY = 0) THEN RCCOMPONENT.QUANTITY := 1; END IF;
        
        RCCOMPONENT.IS_INCONSISTENT             := GE_BOCONSTANTS.CSBNO;
        RCCOMPONENT.PRODUCT_ID                  := INUPRODUCTID;
        RCCOMPONENT.DIRECTIONALITY_ID           := ISBDIRECTIONALITY;
        RCCOMPONENT.INSTALL_DIRECT_ID           := ISBDIRECTIONALITY;
        RCCOMPONENT.DISTRIBUT_ADMIN_ID          := INUDISTRIBUTADMINID;
        RCCOMPONENT.COMPONENT_STATUS_ID         := NVL(INUCOMPONENTSTATUSID, PR_BOPARAMETER.FNUGETCOMPACTI);
        RCCOMPONENT.CREATION_DATE               := DTSYSDATE;
        RCCOMPONENT.LAST_UPD_DATE               := DTSYSDATE;
        RCCOMPONENT.METER                       := INUMETER;
        RCCOMPONENT.BUILDING_ID                 := INUBUILDINGID;
        RCCOMPONENT.ASSIGN_ROUTE_ID             := INUASSIGNROUTEID;
        RCCOMPONENT.MEDIATION_DATE              := NVL(IDTMEDIATIONDATE,RCCOMPONENT.SERVICE_DATE);
        RCCOMPONENT.UNCHARGED_TIME              := INUUNCHARGEDTIME;
        RCCOMPONENT.DISTRICT_ID                 := ISBDISTRICTID;
        RCCOMPONENT.IS_INCLUDED                 := SBINCLUDED;
        RCCOMPONENT.PRODUCT_ORIGIN_ID           := INUPRODUCTORIGIN;
        RCCOMPONENT.INCLUDED_FEATURES_ID        := INUINCLUDED_FEATURES_ID;
        RCCOMPONENT.IS_MAIN                     := ISBISMAIN;
        RCCOMPONENT.COMMERCIAL_PLAN_ID          := INUCOMMERCIAL_PLAN_ID;
        RCCOMPONENT.COMP_PROD_PROV_ID           := INUCOMPPRODPROVISIONID;
        
        

        DAPR_COMPONENT.INSRECORD(RCCOMPONENT);

        
        RCCOMPLINK.COMPONENT_LINK_ID   := PR_BOSEQUENCE.GETCOMPONENTLINKID;
        RCCOMPLINK.PARENT_COMPONENT_ID := INUPARENTCOMP;
        RCCOMPLINK.CHILD_COMPONENT_ID  := ONUCOMPONENTID;
        
        DAPR_COMPONENT_LINK.INSRECORD(RCCOMPLINK);

        IF (IBLREGADDRESS) THEN
            IF (INUADDRESSID IS NULL) THEN
            
            
                IF ( INUGEOGRAP_LOCATION_ID IS NOT NULL  AND
                     ISBADDRESS IS NOT NULL)
                THEN
                    SBADDRESS := ISBADDRESS;
                    NUGEOGRAP_LOCATION_ID := INUGEOGRAP_LOCATION_ID;
                    NUNEIGHBORTHOOD_ID    := INUNEIGHBORTHOOD_ID;

        		    ADDRESSPARSER(INUGEOGRAP_LOCATION_ID,
                			 ISBADDRESS,
                			 NUNEIGHBORTHOOD_ID,
                			 NUADDRESS_ID,
                			 SBADDRESS_PARSED,
                			 SBSUCCESSMESSAGE
                			 );
                END IF;
            ELSE
                NUADDRESS_ID := INUADDRESSID;
                RCADDRESS    :=  DAAB_ADDRESS.FRCGETRECORD ( NUADDRESS_ID );
                SBADDRESS    :=  RCADDRESS.ADDRESS;
                NUGEOGRAP_LOCATION_ID := RCADDRESS.GEOGRAP_LOCATION_ID;
                NUNEIGHBORTHOOD_ID    := RCADDRESS.NEIGHBORTHOOD_ID;
            END IF;
            
            IF (  NUADDRESS_ID IS NOT NULL) THEN
                DAPR_COMPONENT.UPDADDRESS_ID( ONUCOMPONENTID, NUADDRESS_ID );
            END IF;
        END IF;
        

        IF (SBINCLUDED = GE_BOCONSTANTS.CSBYES) THEN

            SBINCLUIDOBSS := PKCONSTANTE.SI;

        ELSE

            SBINCLUIDOBSS := PKCONSTANTE.NO;
        END IF;

        
        PKSUBSSERVCOMPONENT.REGISTER(ONUCOMPONENTID,
                                     INUPARENTCOMP,
                                     INUPRODUCTID,
                                     NVL(IDTSERVICEDATE,UT_DATE.FDTMAXDATE),
                                     INUCLASSSERVICEID,
                                     INUCOMPONENTTYPEID,
                                     NVL(INUCOMPONENTSTATUSID, PR_BOPARAMETER.FNUGETCOMPACTI),
                                     NVL(ISBSERVICENUMBER,ONUCOMPONENTID),
                                     UT_DATE.FDTMAXDATE,
                                     NVL(ISBSERVICENUMBER,ONUCOMPONENTID),
                                     INUUNCHARGEDTIME,
                                     INUPRODUCTID,
                                     NUERRORCODE,
                                     SBERRORMESSAGE,
                                     INUQUANTITY,
                                     SBINCLUIDOBSS,
                                     INUCOMMERCIAL_PLAN_ID,
                                     ISBISMAIN
                                    );
                                    
        IF (NVL(NUERRORCODE,GE_BOCONSTANTS.CNUSUCCESS) <> GE_BOCONSTANTS.CNUSUCCESS) THEN
            SBCALLSERVICE := 'pkSubsServComponent.Register';
            RAISE EXCALLSERVICE;
        END IF;

        IF (IBLELEMMEDI ) THEN
        
            
            PR_BOMEASUREMENTELEMENT.CREATEMEASUREMENTELEMENT(
                                                            RCCOMPONENT.COMPONENT_ID,
                                                            RCCOMPONENT.COMPONENT_TYPE_ID,
                                                            RCCOMPONENT.SERVICE_NUMBER,
                                                            NUELEMIDEM
                                                            );

            
            PR_BOMEASUREMENTELEMENT.CREATEMEASUREELEMENTLINK(NUELEMIDEM,RCCOMPONENT);
            
        END IF;
        
        IF (IBLSPECIALPHONE ) THEN
            
            RCPRODUCT := DAPR_PRODUCT.FRCGETRECORD(INUPRODUCTID);
            
            GW_BOINTEGRATION.MAKESPECIALPHONEBSS(
                                                RCCOMPONENT.SERVICE_NUMBER,
                                                INUPRODUCTID,
                                                RCPRODUCT.PRODUCT_TYPE_ID,
                                                RCPRODUCT.COMMERCIAL_PLAN_ID,
                                                RCCOMPONENT.SERVICE_DATE
                                                );
        END IF;

        UT_TRACE.TRACE('Finaliza Mï¿½todo PR_BOCreationComponent.Register',8);
    EXCEPTION
       WHEN EXCALLSERVICE THEN
           ERRORS.SETERROR  (MO_BOCONSTERROR.CNUERRCALLSERVICE,
                            SBCALLSERVICE ||'|'|| TO_CHAR(NUERRORCODE)||' - '|| SBERRORMESSAGE);
            RAISE  EX.CONTROLLED_ERROR;
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END REGISTER;


    


















































    PROCEDURE INITIALCREATIONCOMPONENTIND
    (
        INUPRODUCTID            IN PR_COMPONENT.PRODUCT_ID%TYPE,
        INUPARENTCOMPONENTID    IN PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE,
        IDTDATE                 IN DATE,
        IRCCOMPONENTMOT         IN DAMO_COMPONENT.STYMO_COMPONENT,
        INUCOMPONENTSTATUSID    IN PR_COMPONENT.COMPONENT_STATUS_ID%TYPE,
        ONUCOMPONENTIDPROD      OUT PR_COMPONENT.COMPONENT_ID%TYPE,
        ONUPARENTCOMPONENTID    OUT PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE
    )
    IS
        SBINCCOMP                   PR_COMPONENT.IS_INCLUDED%TYPE;
        SBISINCLUDED                PR_COMPONENT.IS_INCLUDED%TYPE;
        NUCOMPONENTSTATUSID         PR_COMPONENT.COMPONENT_STATUS_ID%TYPE;
        NUFATHERCOMPONENTID         MO_COMP_LINK.FATHER_COMPONENT_ID%TYPE := NULL;
        NUPARENTCOMPONENTID         PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE;
        NUGRANDPARENTCOMPONENTID    PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE;
        RCCOMPONENTMOT              DAMO_COMPONENT.STYMO_COMPONENT;
        NUPRODUCTID                 PR_COMPONENT.PRODUCT_ID%TYPE;
        
        
        BLREGISTERADDRESS           BOOLEAN;
    BEGIN
        UT_TRACE.TRACE('Inicia PR_BOCreationComponent.InitialCreationComponentInd. Componente:['||IRCCOMPONENTMOT.COMPONENT_ID||']Producto:['||INUPRODUCTID||']',5);

        
        
        
        IF  (IRCCOMPONENTMOT.COMPONENT_ID_PROD IS NOT NULL) THEN

            
            NUCOMPONENTSTATUSID := DAPR_COMPONENT.FNUGETCOMPONENT_STATUS_ID(IRCCOMPONENTMOT.COMPONENT_ID_PROD);
            UT_TRACE.TRACE('Estado Componente Producto:['||NUCOMPONENTSTATUSID||']',5);

            
            IF (NUCOMPONENTSTATUSID <> PR_BOPARAMETER.FNUGETCOMPRETI) THEN

                
                ONUCOMPONENTIDPROD := IRCCOMPONENTMOT.COMPONENT_ID_PROD;

                
                FOR REC IN PR_BCCOMPONENT_LINK.CUCOMPONENTLINKBYCHILD(ONUCOMPONENTIDPROD) LOOP
                    ONUPARENTCOMPONENTID := REC.PARENT_COMPONENT_ID;
                END LOOP;

                
                RETURN;
            END IF;
        END IF;

        NUPRODUCTID := INUPRODUCTID;
        
        
        IF (NUPRODUCTID IS NULL) THEN
        
            NUPRODUCTID := DAMO_MOTIVE.FNUGETPRODUCT_ID(IRCCOMPONENTMOT.MOTIVE_ID);
            
        END IF;
        
        UT_TRACE.TRACE('Producto:['||NUPRODUCTID||']',5);

        
        DAPR_PRODUCT.ACCKEY(NUPRODUCTID);

        NUPARENTCOMPONENTID := INUPARENTCOMPONENTID;
        
        
        IF (NUPARENTCOMPONENTID IS NULL) THEN

            
            NUFATHERCOMPONENTID := DAMO_COMP_LINK.FNUGETFATHER_COMPONENT_ID(IRCCOMPONENTMOT.COMPONENT_ID);
            UT_TRACE.TRACE('Componente:['||IRCCOMPONENTMOT.COMPONENT_ID||']Padre:['||NUFATHERCOMPONENTID||']',6);

            
            IF (NUFATHERCOMPONENTID IS NOT NULL) THEN

                NUPARENTCOMPONENTID := DAMO_COMPONENT.FNUGETCOMPONENT_ID_PROD(NUFATHERCOMPONENTID);
                UT_TRACE.TRACE('Componente de Producto Padre:['||NUPARENTCOMPONENTID||']',6);

                
                IF (NUPARENTCOMPONENTID IS NULL) THEN
                
                    
                    INITIALCREATIONCOMPONENTIND (
                                                NUPRODUCTID,
                                                NULL,
                                                IDTDATE,
                                                DAMO_COMPONENT.FRCGETRECORD(NUFATHERCOMPONENTID),
                                                INUCOMPONENTSTATUSID,
                                                NUPARENTCOMPONENTID,
                                                NUGRANDPARENTCOMPONENTID
                                                );
                    UT_TRACE.TRACE('Componente de Producto Padre:['||NUPARENTCOMPONENTID||']',6);
                END IF;
            END IF;
        END IF;

        
        ONUPARENTCOMPONENTID := NUPARENTCOMPONENTID;
        
        
        IF ( IRCCOMPONENTMOT.ADDRESS_ID IS NULL )THEN
            BLREGISTERADDRESS := FALSE;
        ELSE
            BLREGISTERADDRESS := TRUE;
        END IF;


        
        REGISTER(
                NUPRODUCTID,
                IRCCOMPONENTMOT.COMPONENT_TYPE_ID,
                IRCCOMPONENTMOT.CLASS_SERVICE_ID,
                IRCCOMPONENTMOT.SERVICE_NUMBER,
                IRCCOMPONENTMOT.SERVICE_DATE,
                IRCCOMPONENTMOT.MEDIATION_DATE,
                IRCCOMPONENTMOT.QUANTITY,
                IRCCOMPONENTMOT.UNCHARGED_TIME,
                IRCCOMPONENTMOT.DIRECTIONALITY_ID,
                IRCCOMPONENTMOT.CATEGORY_ID,
                IRCCOMPONENTMOT.SUBCATEGORY_ID,
                IRCCOMPONENTMOT.DISTRIBUT_ADMIN_ID,
                IRCCOMPONENTMOT.METER,
                IRCCOMPONENTMOT.BUILDING_ID,
                IRCCOMPONENTMOT.ASSIGN_ROUTE_ID,
                ONUPARENTCOMPONENTID,
                IRCCOMPONENTMOT.DISTRICT_ID,
                SBISINCLUDED,
                IRCCOMPONENTMOT.ADDRESS_ID, 
                NULL,
                NULL,
                NULL,
                IRCCOMPONENTMOT.PRODUCT_ORIGIN_ID,
                IRCCOMPONENTMOT.INCLUDED_FEATURES_ID,
                NVL(IRCCOMPONENTMOT.IS_MAIN, GE_BOCONSTANTS.CSBNO),
                IRCCOMPONENTMOT.COMMERCIAL_PLAN_ID,
                ONUCOMPONENTIDPROD,
                BLREGISTERADDRESS,  
                FALSE,      
                FALSE,      
                IRCCOMPONENTMOT.COMP_PROD_PROV_ID,
                
                INUCOMPONENTSTATUSID
                );
        UT_TRACE.TRACE('Componente Creado:['||ONUCOMPONENTIDPROD||']Padre:['||ONUPARENTCOMPONENTID||']',6);

        
        RCCOMPONENTMOT := IRCCOMPONENTMOT;

        RCCOMPONENTMOT.COMPONENT_ID_PROD := NVL(RCCOMPONENTMOT.COMPONENT_ID_PROD,ONUCOMPONENTIDPROD);
        
        RCCOMPONENTMOT.PRODUCT_ID := NUPRODUCTID;
        DAMO_COMPONENT.UPDRECORD(RCCOMPONENTMOT);

        
        PR_BOREQUEST.CREATECOMPONENTREQUEST (
                                            MO_BOSTATUSPARAMETER.FNUGETSTATUS_ATTEND_COMP,
                                            IDTDATE,
                                            ONUCOMPONENTIDPROD,
                                            IRCCOMPONENTMOT.PACKAGE_ID,
                                            IRCCOMPONENTMOT.MOTIVE_ID,
                                            IRCCOMPONENTMOT.MOTIVE_TYPE_ID,
                                            IRCCOMPONENTMOT.COMPONENT_ID,
                                            DAMO_PACKAGES.FSBGETCUST_CARE_REQUES_NUM(IRCCOMPONENTMOT.PACKAGE_ID)
                                            );
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INITIALCREATIONCOMPONENTIND;


    














    PROCEDURE UPDATECOMPONENTGROUP
    (
        INUINCLUDEDFEATURESID   IN CC_INCLUDED_FEATURES.INCLUDED_FEATURES_ID%TYPE,
        INUPRODUCTID            IN PR_COMPONENT.PRODUCT_ID%TYPE,
        IDTSERVICEDATE          IN PR_COMPONENT.SERVICE_DATE%TYPE,
        IDTMEDIATIONDATE        IN PR_COMPONENT.MEDIATION_DATE%TYPE
    )
    IS
        RCINCLUDEDFEATURES  DACC_INCLUDED_FEATURES.STYCC_INCLUDED_FEATURES;
        RCINCLUDED          DACC_INCLUDED.STYCC_INCLUDED;
        RCCOMPONENT         DAPR_COMPONENT.STYPR_COMPONENT;
        RCCOMPSESU          COMPSESU%ROWTYPE;
    BEGIN
        IF (INUINCLUDEDFEATURESID IS NULL) THEN
            RETURN;
        END IF;
        
        
        RCINCLUDEDFEATURES := DACC_INCLUDED_FEATURES.FRCGETRECORD(INUINCLUDEDFEATURESID);
        UT_TRACE.TRACE('Incluidos Configurados:['||RCINCLUDEDFEATURES.INCLUDED_QUANTITY||']Composicion Padre:['||RCINCLUDEDFEATURES.PARENT_INCLUDED_ID||']',7);

        
        RCINCLUDED := DACC_INCLUDED.FRCGETRECORD(RCINCLUDEDFEATURES.INCLUDED_ID);

        
        FOR REC IN PR_BCCOMPONENT.CUCOMPONENTSBYTYPEANDCLASS(INUPRODUCTID, RCINCLUDED.COMPONENT_TYPE_ID, RCINCLUDED.CLASS_SERVICE_ID) LOOP
            RCCOMPONENT := REC;
        END LOOP;
        UT_TRACE.TRACE('Componente Agrupador:['||RCCOMPONENT.COMPONENT_ID||']',7);

        IF  (RCCOMPONENT.COMPONENT_ID IS NULL)
            OR
            (RCCOMPONENT.COMPONENT_STATUS_ID = PR_BOPARAMETER.FNUGETCOMPACTI)
        THEN
            RETURN;
        END IF;
        
        RCCOMPONENT.COMPONENT_STATUS_ID := PR_BOPARAMETER.FNUGETCOMPACTI;
        RCCOMPONENT.SERVICE_DATE := IDTSERVICEDATE;
        RCCOMPONENT.MEDIATION_DATE := IDTMEDIATIONDATE;
        DAPR_COMPONENT.UPDRECORD(RCCOMPONENT);
        
        RCCOMPSESU := PKTBLCOMPSESU.FRCGETRECORD(RCCOMPONENT.COMPONENT_ID);
        RCCOMPSESU.CMSSESCM := PR_BOPARAMETER.FNUGETCOMPACTI;
        RCCOMPSESU.CMSSFEIN := IDTSERVICEDATE;
        PKTBLCOMPSESU.UPRECORD(RCCOMPSESU);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END UPDATECOMPONENTGROUP;



    












































































































    PROCEDURE CREATIONCOMPONENT
        (
        INUCOMPONENTIDMOT       IN MO_COMPONENT.COMPONENT_ID%TYPE,
        INUPRODUCTID            IN PR_COMPONENT.PRODUCT_ID%TYPE,
        INUPARENTCOMPONENTID    IN PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE,
        ONUCOMPONENTIDPROD      OUT PR_COMPONENT.COMPONENT_ID%TYPE,
        IBLUPDATEINSTDATE       IN BOOLEAN DEFAULT TRUE
        )
    IS
        RCCOMPONENTMOT          DAMO_COMPONENT.STYMO_COMPONENT;
        RCCOMPONENTLINK         DAPR_COMPONENT_LINK.STYPR_COMPONENT_LINK;
        RCCOMPONENTPROD         DAPR_COMPONENT.STYPR_COMPONENT;
        RCPRODUCT               DAPR_PRODUCT.STYPR_PRODUCT;
        NUPERMANENCE            PR_PRODUCT.PERMANENCE%TYPE;
        DTSESUFEIN              SERVSUSC.SESUFEIN%TYPE;
        NUELEMIDEM              ELEMMEDI.ELMEIDEM%TYPE;
        SBCMSSINCL              COMPSESU.CMSSINCL%TYPE;
        DTSYSDATE               DATE := SYSDATE;
        NUPARENTCOMPONENTID     PR_COMPONENT_LINK.PARENT_COMPONENT_ID%TYPE;
        NUSHARECOMPMOTIVE       MO_COMPONENT.COMPONENT_ID%TYPE;
        NUSHAREMOCOMPONENT      MO_COMPONENT.COMPONENT_ID%TYPE;
        SBPRODUCTREFERENCE      PS_COMPONENT_TYPE.PRODUCT_REFERENCE%TYPE;
        NUERRORCODE             GE_ERROR_LOG.ERROR_LOG_ID%TYPE;
        SBERRORMESSAGE          GE_ERROR_LOG.DESCRIPTION%TYPE;
        CURFCOMPMOTIVEPROV      CONSTANTS.TYREFCURSOR;
        RCCOMPSESU              COMPSESU%ROWTYPE;
        NUPRODUCTTYPEID         PR_PRODUCT.PRODUCT_TYPE_ID%TYPE;
        NUMAINCOMPTYPEID        PS_COMPONENT_TYPE.COMPONENT_TYPE_ID%TYPE;
        NUMAINPRODMOTICOMPID    PS_PROD_MOTIVE_COMP.PROD_MOTIVE_COMP_ID%TYPE;
        DTFECHAEXP              PR_PRODUCT.EXPIRATION_OF_PLAN%TYPE;
        
    BEGIN
        UT_TRACE.TRACE('Inicia PR_BOCreationComponent.CreationComponent. Componente Mot:['||INUCOMPONENTIDMOT||']Producto:['||INUPRODUCTID||']Comp Padre:['||INUPARENTCOMPONENTID||']',4);

        
        RCCOMPONENTMOT := DAMO_COMPONENT.FRCGETRECORD(INUCOMPONENTIDMOT);
        UT_TRACE.TRACE('Comp Producto:['||RCCOMPONENTMOT.COMPONENT_ID_PROD||']Composicion Incluidos:['||RCCOMPONENTMOT.INCLUDED_FEATURES_ID||']',5);

        
        INITIALCREATIONCOMPONENTIND (
                                    INUPRODUCTID,
                                    INUPARENTCOMPONENTID,
                                    DTSYSDATE,
                                    RCCOMPONENTMOT,
                                    PR_BOPARAMETER.FNUGETCOMPACTI,
                                    ONUCOMPONENTIDPROD,
                                    NUPARENTCOMPONENTID
                                    );
        UT_TRACE.TRACE('Componente Producto:['||ONUCOMPONENTIDPROD||']Padre:['||NUPARENTCOMPONENTID||']',2);

        
        RCCOMPONENTPROD := DAPR_COMPONENT.FRCGETRECORD(ONUCOMPONENTIDPROD);
        RCCOMPSESU := PKTBLCOMPSESU.FRCGETRECORD(ONUCOMPONENTIDPROD);

        
        UT_TRACE.TRACE('Componente(de motivo) de Provisionamiento :['||RCCOMPONENTMOT.COMP_MOTIVE_PROV_ID||']',5);
        IF (RCCOMPONENTMOT.COMP_MOTIVE_PROV_ID IS NOT NULL) THEN

            
            RCCOMPONENTMOT.COMP_PROD_PROV_ID := DAMO_COMPONENT.FNUGETCOMPONENT_ID_PROD(RCCOMPONENTMOT.COMP_MOTIVE_PROV_ID);
        END IF;

        
        RCCOMPONENTPROD.COMP_PROD_PROV_ID       := RCCOMPONENTMOT.COMP_PROD_PROV_ID;
        RCCOMPONENTPROD.COMPONENT_STATUS_ID     := PR_BOPARAMETER.FNUGETCOMPACTI;
        RCCOMPONENTPROD.SERVICE_DATE            := NVL(RCCOMPONENTMOT.SERVICE_DATE, DTSYSDATE);
        RCCOMPONENTPROD.MEDIATION_DATE          := NVL(RCCOMPONENTMOT.MEDIATION_DATE, DTSYSDATE);
        RCCOMPONENTPROD.CATEGORY_ID             := RCCOMPONENTMOT.CATEGORY_ID;
        RCCOMPONENTPROD.SUBCATEGORY_ID          := RCCOMPONENTMOT.SUBCATEGORY_ID;
        RCCOMPONENTPROD.CLASS_SERVICE_ID        := RCCOMPONENTMOT.CLASS_SERVICE_ID;
        RCCOMPONENTPROD.SERVICE_NUMBER          := NVL(RCCOMPONENTMOT.SERVICE_NUMBER, ONUCOMPONENTIDPROD);
        RCCOMPONENTPROD.DIRECTIONALITY_ID       := RCCOMPONENTMOT.DIRECTIONALITY_ID;
        RCCOMPONENTPROD.DISTRIBUT_ADMIN_ID      := RCCOMPONENTMOT.DISTRIBUT_ADMIN_ID;
        RCCOMPONENTPROD.LAST_UPD_DATE           := DTSYSDATE;
        RCCOMPONENTPROD.METER                   := RCCOMPONENTMOT.METER;
        RCCOMPONENTPROD.BUILDING_ID             := RCCOMPONENTMOT.BUILDING_ID;
        RCCOMPONENTPROD.ASSIGN_ROUTE_ID         := RCCOMPONENTMOT.ASSIGN_ROUTE_ID;
        RCCOMPONENTPROD.UNCHARGED_TIME          := RCCOMPONENTMOT.UNCHARGED_TIME;
        RCCOMPONENTPROD.DISTRICT_ID             := RCCOMPONENTMOT.DISTRICT_ID;
        RCCOMPONENTPROD.PRODUCT_ORIGIN_ID       := RCCOMPONENTMOT.PRODUCT_ORIGIN_ID;
        RCCOMPONENTPROD.IS_MAIN                 := NVL(RCCOMPONENTMOT.IS_MAIN, GE_BOCONSTANTS.CSBNO);

        DAPR_COMPONENT.UPDRECORD(RCCOMPONENTPROD);

        
        RCCOMPSESU.CMSSFEIN := NVL(RCCOMPONENTMOT.SERVICE_DATE, DTSYSDATE);
        RCCOMPSESU.CMSSESCM := PR_BOPARAMETER.FNUGETCOMPACTI;
        RCCOMPSESU.CMSSDAAD := NVL(RCCOMPONENTMOT.SERVICE_NUMBER, ONUCOMPONENTIDPROD);
        RCCOMPSESU.CMSSCLSE := RCCOMPONENTMOT.CLASS_SERVICE_ID;
        RCCOMPSESU.CMSSCOUC := NVL(RCCOMPONENTMOT.SERVICE_NUMBER, ONUCOMPONENTIDPROD);
        RCCOMPSESU.CMSSDIGR := RCCOMPONENTMOT.UNCHARGED_TIME;
        RCCOMPSESU.CMSSPLCO := RCCOMPONENTMOT.COMMERCIAL_PLAN_ID;
        RCCOMPSESU.CMSSMAIN := NVL(RCCOMPONENTMOT.IS_MAIN, GE_BOCONSTANTS.CSBNO);
        PKTBLCOMPSESU.UPRECORD(RCCOMPSESU);

        
        UPDATECOMPONENTGROUP(RCCOMPONENTMOT.INCLUDED_FEATURES_ID, INUPRODUCTID, RCCOMPONENTPROD.SERVICE_DATE, RCCOMPONENTPROD.MEDIATION_DATE);

        
        PR_BOCREATIONADDITDATAPROD.SETADDITIONALDATA(INUCOMPONENTIDMOT, ONUCOMPONENTIDPROD);

        
        IF (DAPS_MOTI_COMP_PARAM.FBLEXIST(RCCOMPONENTMOT.PROD_MOTIVE_COMP_ID, 2001)) THEN
            PR_BOYIELDTO.RETIREPRODUCTYIELDED(ONUCOMPONENTIDPROD);
        END IF;

        
        SBPRODUCTREFERENCE := DAPS_COMPONENT_TYPE.FSBGETPRODUCT_REFERENCE(RCCOMPONENTMOT.COMPONENT_TYPE_ID);

        





        IF  (NUPARENTCOMPONENTID IS NULL)
            AND
            (NVL(SBPRODUCTREFERENCE,GE_BOCONSTANTS.CSBNO) = GE_BOCONSTANTS.CSBNO)
            AND
            IBLUPDATEINSTDATE
        THEN

            
            NUPRODUCTTYPEID:= DAPR_PRODUCT.FNUGETPRODUCT_TYPE_ID(INUPRODUCTID);
            
            PS_BOPRODCOMPOSITION.GETMAINCOMPTYPE(NUPRODUCTTYPEID,NUMAINCOMPTYPEID, NUMAINPRODMOTICOMPID);
            
            
            IF (RCCOMPONENTPROD.COMPONENT_TYPE_ID=NUMAINCOMPTYPEID) THEN
                
                DTSESUFEIN := PKTBLSERVSUSC.FDTGETINSTALLATIONDATE(INUPRODUCTID);
                UT_TRACE.TRACE('Instalaciï¿½n Ser:['||DTSESUFEIN||']Fecha Servicio:['||RCCOMPONENTPROD.SERVICE_DATE||']',5);
                IF (DTSESUFEIN < RCCOMPONENTPROD.SERVICE_DATE) THEN

                    PKSUBSCRIBERSERVICE.UPDATEINSTALLATIONDATE(INUPRODUCTID, RCCOMPONENTPROD.SERVICE_DATE, NUERRORCODE, SBERRORMESSAGE);
                    GW_BOERRORS.CHECKERROR(NUERRORCODE,SBERRORMESSAGE);

                    
                    IF(DAPR_PRODUCT.FBLEXIST(INUPRODUCTID)) THEN
                    
                        UT_TRACE.TRACE('Entro a Actualizar la fecha de expiraciï¿½n del Producto ['||INUPRODUCTID||']',5);
                        NUPERMANENCE := DAPR_PRODUCT.FNUGETPERMANENCE(INUPRODUCTID);
                        UT_TRACE.TRACE('Dias de Permanencia:'|| NUPERMANENCE, 5);
                        DTFECHAEXP := CC_BOCOMMPERMANENCE.FDTCALCULATEEXPDATE(RCCOMPONENTPROD.SERVICE_DATE, NUPERMANENCE) ;
                        DAPR_PRODUCT.UPDEXPIRATION_OF_PLAN(INUPRODUCTID, DTFECHAEXP);

                     END IF;
                END IF;
            END IF;
        END IF;

        
        PR_BOMEASUREMENTELEMENT.CREATEMEASUREMENTELEMENT(
                                                        ONUCOMPONENTIDPROD,
                                                        RCCOMPONENTPROD.COMPONENT_TYPE_ID,
                                                        RCCOMPONENTPROD.SERVICE_NUMBER,
                                                        NUELEMIDEM
                                                        );

        
        PR_BOMEASUREMENTELEMENT.CREATEMEASUREELEMENTLINK(NUELEMIDEM, RCCOMPONENTPROD);

        
        IF (NUELEMIDEM IS NOT NULL) THEN

            
            RCPRODUCT := DAPR_PRODUCT.FRCGETRECORD(INUPRODUCTID);

            
            GW_BOINTEGRATION.MAKESPECIALPHONEBSS(
                                                RCCOMPONENTPROD.SERVICE_NUMBER,
                                                INUPRODUCTID,
                                                RCPRODUCT.PRODUCT_TYPE_ID,
                                                RCPRODUCT.COMMERCIAL_PLAN_ID,
                                                RCCOMPONENTPROD.SERVICE_DATE
                                                );
        END IF;


        
        
        CURFCOMPMOTIVEPROV := IM_BCSHARENETWORK.FRFGETCOMPMOTBYPROVISIONMOTIVE(RCCOMPONENTMOT.COMPONENT_ID);
        FETCH CURFCOMPMOTIVEPROV INTO NUSHARECOMPMOTIVE;
        WHILE CURFCOMPMOTIVEPROV%FOUND  LOOP
            UT_TRACE.TRACE('Componente de motivo hijo de provisionamiento :['||NUSHARECOMPMOTIVE||']',13);

            NUSHAREMOCOMPONENT := NUSHARECOMPMOTIVE;

            DAMO_COMPONENT.UPDCOMP_MOTIVE_PROV_ID(NUSHAREMOCOMPONENT, NULL);

            DAMO_COMPONENT.UPDCOMP_PROD_PROV_ID(NUSHAREMOCOMPONENT, RCCOMPONENTPROD.COMPONENT_ID);

            FETCH CURFCOMPMOTIVEPROV INTO NUSHARECOMPMOTIVE;
        END LOOP;
        
        GE_BOGENERALUTIL.CLOSE_REFCURSOR( CURFCOMPMOTIVEPROV );

        UT_TRACE.TRACE('Finaliza PR_BOCreationComponent.CreationComponent',4);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            GE_BOGENERALUTIL.CLOSE_REFCURSOR( CURFCOMPMOTIVEPROV );
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            GE_BOGENERALUTIL.CLOSE_REFCURSOR( CURFCOMPMOTIVEPROV );
            RAISE EX.CONTROLLED_ERROR;
    END CREATIONCOMPONENT;

    PROCEDURE REGISTERCOMPONENTBUNDLE
    (
        IRCCOMPONENTMOT IN DAMO_COMPONENT.STYMO_COMPONENT
    ) IS
        NUCOMPONENTIDPROD   PR_COMPONENT.COMPONENT_ID%TYPE;
        NUPRODUCTBUNDLE    PR_PRODUCT.PRODUCT_ID%TYPE;
        DTSYSDATE           DATE := SYSDATE;
    BEGIN
        NUPRODUCTBUNDLE := DAMO_MOTIVE.FNUGETPRODUCT_ID( IRCCOMPONENTMOT.MOTIVE_ID);
        UT_TRACE.TRACE('Inicia PR_BOCreationComponent.RegisterComponentBundle. Prod Paq:['||NUPRODUCTBUNDLE||']',10);

        
        MO_BOCOMMERCIALRELAT.CREATEPRODBOUNDLERELAT (
                                                    IRCCOMPONENTMOT.PRODUCT_ORIGIN_ID,
                                                    NUPRODUCTBUNDLE,
                                                    IRCCOMPONENTMOT.PACKAGE_ID
                                                    );

        
        IF (IRCCOMPONENTMOT.IS_MAIN  = GE_BOCONSTANTS.CSBYES) THEN
            
            
            PKTBLSERVSUSC.UPCONSUMPTIONCYCLE (
                    NUPRODUCTBUNDLE,
                    PKTBLSERVSUSC.FNUGETCYCLE(IRCCOMPONENTMOT.PRODUCT_ORIGIN_ID)
                    );
            
            
            FOR RC IN PR_BCCOMPONENT.CUCOMPONENTSBYTYPE
                       (IRCCOMPONENTMOT.PRODUCT_ORIGIN_ID, PR_BOCONSTANTS.CNUCOMPBUNDLETYPE) LOOP
                DAPR_COMPONENT.UPDCOMMERCIAL_PLAN_ID(RC.COMPONENT_ID,IRCCOMPONENTMOT.COMMERCIAL_PLAN_ID);
            END LOOP;
        END IF;
        
        REGISTER (
            IRCCOMPONENTMOT.PRODUCT_ORIGIN_ID,
            PR_BOCONSTANTS.CNUCOMPBUNDLETYPE,
            NULL,
            NULL,
            NVL(IRCCOMPONENTMOT.SERVICE_DATE,DTSYSDATE),
            NVL(IRCCOMPONENTMOT.MEDIATION_DATE,DTSYSDATE),
            IRCCOMPONENTMOT.QUANTITY,
            IRCCOMPONENTMOT.UNCHARGED_TIME,
            IRCCOMPONENTMOT.DIRECTIONALITY_ID,
            IRCCOMPONENTMOT.CATEGORY_ID,
            IRCCOMPONENTMOT.SUBCATEGORY_ID,
            IRCCOMPONENTMOT.DISTRIBUT_ADMIN_ID,
            IRCCOMPONENTMOT.METER,
            IRCCOMPONENTMOT.BUILDING_ID,
            IRCCOMPONENTMOT.ASSIGN_ROUTE_ID,
            NULL, 
            IRCCOMPONENTMOT.DISTRICT_ID,
            GE_BOCONSTANTS.CSBNO,  
            NULL,
            NULL,
            NULL,
            NULL,
            NUPRODUCTBUNDLE,
            IRCCOMPONENTMOT.INCLUDED_FEATURES_ID,
            IRCCOMPONENTMOT.IS_MAIN,
            IRCCOMPONENTMOT.COMMERCIAL_PLAN_ID,
            NUCOMPONENTIDPROD,
            FALSE,  
            FALSE,  
            FALSE   
        );
        UT_TRACE.TRACE('Componente de producto creado['|| NUCOMPONENTIDPROD ||']',10);
        
        PR_BOREQUEST.CREATECOMPONENTREQUEST (
                                            MO_BOSTATUSPARAMETER.FNUGETSTATUS_ATTEND_COMP,
                                            DTSYSDATE,
                                            NUCOMPONENTIDPROD,
                                            IRCCOMPONENTMOT.PACKAGE_ID,
                                            IRCCOMPONENTMOT.MOTIVE_ID,
                                            IRCCOMPONENTMOT.MOTIVE_TYPE_ID,
                                            IRCCOMPONENTMOT.COMPONENT_ID,
                                            DAMO_PACKAGES.FSBGETCUST_CARE_REQUES_NUM(IRCCOMPONENTMOT.PACKAGE_ID)
                                            );

        UT_TRACE.TRACE('Fin PR_BOCreationComponent.RegisterComponentBundle',10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END REGISTERCOMPONENTBUNDLE;
    

    






























    PROCEDURE CREATIONCOMPONENTBYCOPY
    (
        IRCCOMPONENT            IN  DAPR_COMPONENT.STYPR_COMPONENT,
        IRCCOMPSESU             IN  COMPSESU%ROWTYPE,
        INUPRODUCTID            IN  PR_COMPONENT.PRODUCT_ID%TYPE,
        INUCOMPONENTIDFATHER    IN  PR_COMPONENT.COMPONENT_ID%TYPE,
        INUCATEGORYID           IN  PR_COMPONENT.CATEGORY_ID%TYPE,
        INUSUBCATEGORYID        IN  PR_COMPONENT.SUBCATEGORY_ID%TYPE,
        IDTCREATIONDATE         IN  PR_COMPONENT.CREATION_DATE%TYPE,
        INUCOMPONENTTYPEID      IN  PR_COMPONENT.COMPONENT_TYPE_ID%TYPE,
        INUCLASSSERVICEID       IN  PR_COMPONENT.CLASS_SERVICE_ID%TYPE,
        ONUCOMPONENTIDNEW       OUT PR_COMPONENT.COMPONENT_ID%TYPE
    )
    IS
        RCCOMPONENT     DAPR_COMPONENT.STYPR_COMPONENT;
        RCCOMPSESU      COMPSESU%ROWTYPE;
        NUELEMIDEM      ELEMMEDI.ELMEIDEM%TYPE;
        NUERRORCODE     GE_ERROR_LOG.ERROR_LOG_ID%TYPE;
        SBERRORMESSAGE  GE_ERROR_LOG.DESCRIPTION%TYPE;
    BEGIN
        UT_TRACE.TRACE('Inicia PR_BOCreationComponent.CreationComponentByCopy. Componente:['||IRCCOMPONENT.COMPONENT_ID||']',11);
        UT_TRACE.TRACE('Componente Padre:['||INUCOMPONENTIDFATHER||']Producto:['||INUPRODUCTID||']',12);

        RCCOMPONENT := IRCCOMPONENT;
        RCCOMPSESU := IRCCOMPSESU;

        
        ONUCOMPONENTIDNEW := PR_BOSEQUENCE.GETCOMPONENTID;
        UT_TRACE.TRACE('Nuevo Componente:['||ONUCOMPONENTIDNEW||']Nï¿½mero Servicio Actual:['||IRCCOMPONENT.SERVICE_NUMBER||']',12);

        
        RCCOMPONENT.COMPONENT_ID := ONUCOMPONENTIDNEW;
        RCCOMPONENT.PRODUCT_ID := INUPRODUCTID;

        IF (IRCCOMPONENT.SERVICE_NUMBER = TO_CHAR(IRCCOMPONENT.COMPONENT_ID)) THEN
            RCCOMPONENT.SERVICE_NUMBER := TO_CHAR(ONUCOMPONENTIDNEW);
        END IF;

        RCCOMPONENT.COMPONENT_TYPE_ID := INUCOMPONENTTYPEID;
        RCCOMPONENT.CREATION_DATE     := IDTCREATIONDATE;
        RCCOMPONENT.LAST_UPD_DATE     := IDTCREATIONDATE;
        RCCOMPONENT.CATEGORY_ID       := NVL(INUCATEGORYID,       RCCOMPONENT.CATEGORY_ID);
        RCCOMPONENT.SUBCATEGORY_ID    := NVL(INUSUBCATEGORYID, RCCOMPONENT.SUBCATEGORY_ID);
        RCCOMPONENT.MEDIATION_DATE    := IDTCREATIONDATE;
        RCCOMPONENT.SERVICE_DATE      := IDTCREATIONDATE;
        RCCOMPONENT.CLASS_SERVICE_ID  := INUCLASSSERVICEID;

        
        DAPR_COMPONENT.INSRECORD(RCCOMPONENT);

        
        PR_BOCREATIONADDITDATAPROD.COPYADDITIONALDATA(IRCCOMPONENT.COMPONENT_ID, ONUCOMPONENTIDNEW, INUCOMPONENTIDFATHER, INUPRODUCTID);
        
        
        PKSUBSSERVCOMPONENT.REGISTER(
                                    ONUCOMPONENTIDNEW,
                                    INUCOMPONENTIDFATHER,
                                    INUPRODUCTID,
                                    IDTCREATIONDATE,
                                    INUCLASSSERVICEID,
                                    INUCOMPONENTTYPEID,
                                    PR_BOPARAMETER.FNUGETCOMPACTI,
                                    RCCOMPONENT.SERVICE_NUMBER,
                                    UT_DATE.FDTMAXDATE,
                                    RCCOMPONENT.SERVICE_NUMBER,
                                    RCCOMPSESU.CMSSDIGR,
                                    INUPRODUCTID,
                                    NUERRORCODE,
                                    SBERRORMESSAGE,
                                    RCCOMPSESU.CMSSCANT,
                                    RCCOMPSESU.CMSSINCL,
                                    RCCOMPSESU.CMSSPLCO,
                                    RCCOMPSESU.CMSSMAIN
                                    );

        
        PR_BOMEASUREMENTELEMENT.CREATEMEASUREMENTELEMENT(
                                                        ONUCOMPONENTIDNEW,
                                                        INUCOMPONENTTYPEID,
                                                        RCCOMPONENT.SERVICE_NUMBER,
                                                        NUELEMIDEM
                                                        );

        
        PR_BOMEASUREMENTELEMENT.CREATEMEASUREELEMENTLINK(NUELEMIDEM, RCCOMPONENT);

        UT_TRACE.TRACE('Finaliza PR_BOCreationComponent.CreationComponentByCopy',11);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    

    PROCEDURE INITIALCREATIONCOMPONENT
    (
        INUPACKAGEID    IN MO_PACKAGES.PACKAGE_ID%TYPE,
        INUPRODUCTID    IN PR_PRODUCT.PRODUCT_ID%TYPE,
        IDTDATE         IN DATE
    )
    IS
        TBCOMPONENT             DAMO_COMPONENT.TYTBMO_COMPONENT;
        ININDEX                 INTEGER := 1;
        NUFATHERCOMPONENTIDPROD PR_COMPONENT.COMPONENT_ID%TYPE := NULL;
        NUCOMPONENTIDPROD       PR_COMPONENT.COMPONENT_ID%TYPE := NULL;
    BEGIN
        UT_TRACE.TRACE('Inicia PR_BOCreationComponent.InitialCreationComponent. Solicitud:['||INUPACKAGEID||']Producto:['||INUPRODUCTID||']',5);

        
        FOR REC IN MO_BCMOTIVE.CUMOTIVESACTIVESBYPACKAGE(INUPACKAGEID) LOOP
        
            FOR RECCOMP IN MO_BCCOMPONENT.CUCOMPACTHIERARCHYBYMOT(REC.MOTIVE_ID) LOOP
                TBCOMPONENT(ININDEX) := DAMO_COMPONENT.FRCGETRECORD(RECCOMP.COMPONENT_ID);

                ININDEX := ININDEX + 1;
            END LOOP;
        END LOOP;

        
        ININDEX := TBCOMPONENT.FIRST;
        WHILE ININDEX <= TBCOMPONENT.LAST LOOP

            
            INITIALCREATIONCOMPONENTIND (
                                        INUPRODUCTID,
                                        NULL,
                                        IDTDATE,
                                        TBCOMPONENT(ININDEX),
                                        CNUCOMPSTATINSTALLATIONPEND,
                                        NUCOMPONENTIDPROD,
                                        NUFATHERCOMPONENTIDPROD
                                        );
                                        
                                        

            ININDEX := TBCOMPONENT.NEXT(ININDEX);
        END LOOP;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INITIALCREATIONCOMPONENT;
    
    
    PROCEDURE SETINCLUDEDFEATURES
    (
        INUPRODUCTID        IN      PR_COMPONENT.PRODUCT_ID%TYPE
    )
    IS
        BLFOUND             BOOLEAN;
        BLUPDATE            BOOLEAN := FALSE;
        TBTMPINCLFEATURES   CC_BCINCLUDED.TYTBINCLUDED_FEATURES;
        TBINCLFEATURES      CC_BCINCLUDED.TYTBINCLUDED_FEATURES;
        TBCOMPONENTS        DAPR_COMPONENT.TYTBPR_COMPONENT;

        NUCOMPONENTID       PR_COMPONENT.COMPONENT_ID%TYPE;
        SBINCLUIDOBSS       COMPSESU.CMSSINCL%TYPE;
        
        PROCEDURE INCLUDECHILDCOMP
        (
            INUFATHCOMPID     IN      PR_COMPONENT.COMPONENT_ID%TYPE
        )IS
        BEGIN
            FOR RCCHILDCOMP IN  PR_BCCOMPONENT.CUCHILDCOMPONENTS(INUFATHCOMPID) LOOP
                IF (TBCOMPONENTS.EXISTS(RCCHILDCOMP.COMPONENT_ID)) THEN
                    TBCOMPONENTS(RCCHILDCOMP.COMPONENT_ID).IS_INCLUDED := GE_BOCONSTANTS.CSBYES;
                END IF;
            END LOOP;
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
        END;

    BEGIN
        UT_TRACE.TRACE('Inicia PR_BOCreationComponent.SetIncludedFeatures. ProductId:['||INUPRODUCTID||']',5);

        
        TBINCLFEATURES.DELETE;

        
        FOR RCCOMPONENT IN PR_BCCOMPONENT.CUCOMPONENTSBYPRODUCTID(INUPRODUCTID) LOOP
            
            IF (RCCOMPONENT.COMPONENT_TYPE_ID = PS_BOCOMPONENTTYPE.FNUGETCOMBO) THEN
                BLFOUND := CC_BCINCLUDED.FBLGETINCLUDEDFEATURE(RCCOMPONENT.SERVICE_NUMBER,TBTMPINCLFEATURES);
                IF (BLFOUND) THEN
                    FOR IDX IN TBTMPINCLFEATURES.FIRST .. TBTMPINCLFEATURES.LAST LOOP
                        TBINCLFEATURES(TBINCLFEATURES.COUNT) := TBTMPINCLFEATURES(IDX);
                    END LOOP;
                END IF;
            ELSE
                IF (RCCOMPONENT.IS_INCLUDED = GE_BOCONSTANTS.CSBYES) THEN
                    
                    RCCOMPONENT.IS_INCLUDED := GE_BOCONSTANTS.CSBNO;
                    RCCOMPONENT.INCLUDED_FEATURES_ID := NULL;
                    BLUPDATE := TRUE;
                END IF;
                TBCOMPONENTS(RCCOMPONENT.COMPONENT_ID) := RCCOMPONENT;
            END IF;
        END LOOP;

        
        IF (TBINCLFEATURES.FIRST IS NOT NULL) THEN
            BLUPDATE := TRUE;

            
            FOR IDX IN TBINCLFEATURES.FIRST .. TBINCLFEATURES.LAST LOOP
                UT_TRACE.TRACE('Busca ('||TBINCLFEATURES(IDX).INCLUDED_QUANTITY||') Componentes ['||TBINCLFEATURES(IDX).COMPONENT_TYPE_ID||'] ['||TBINCLFEATURES(IDX).CLASS_SERVICE_ID||']',9);
                BLFOUND := TRUE;
                WHILE ((BLFOUND) AND (TBINCLFEATURES(IDX).INCLUDED_QUANTITY > 0)) LOOP
                    BLFOUND := FALSE;
                    NUCOMPONENTID := TBCOMPONENTS.FIRST;
                    WHILE (NUCOMPONENTID IS NOT NULL) LOOP
                        IF (TBCOMPONENTS(NUCOMPONENTID).IS_INCLUDED = GE_BOCONSTANTS.CSBNO) THEN
                            IF (TBINCLFEATURES(IDX).COMPONENT_TYPE_ID = TBCOMPONENTS(NUCOMPONENTID).COMPONENT_TYPE_ID) AND
                              ((TBINCLFEATURES(IDX).CLASS_SERVICE_ID IS NULL) OR (TBINCLFEATURES(IDX).CLASS_SERVICE_ID = TBCOMPONENTS(NUCOMPONENTID).CLASS_SERVICE_ID))
                            THEN
                                UT_TRACE.TRACE('Encontrï¿½ componente ['||TBCOMPONENTS(NUCOMPONENTID).COMPONENT_ID||']',10);
                                
                                TBINCLFEATURES(IDX).INCLUDED_QUANTITY := TBINCLFEATURES(IDX).INCLUDED_QUANTITY - 1;
                                TBCOMPONENTS(NUCOMPONENTID).IS_INCLUDED := GE_BOCONSTANTS.CSBYES;
                                TBCOMPONENTS(NUCOMPONENTID).INCLUDED_FEATURES_ID := TBINCLFEATURES(IDX).INCLUDED_FEATURES_ID;
                                INCLUDECHILDCOMP(NUCOMPONENTID);
                                BLFOUND := TRUE;
                                EXIT;
                            END IF;
                        END IF;
                        NUCOMPONENTID := TBCOMPONENTS.NEXT(NUCOMPONENTID);
                    END LOOP;
                END LOOP;
            END LOOP;
        END IF;

        
        IF (BLUPDATE) THEN
            NUCOMPONENTID := TBCOMPONENTS.FIRST;
            WHILE (NUCOMPONENTID IS NOT NULL) LOOP
                
                DAPR_COMPONENT.UPDRECORD(TBCOMPONENTS(NUCOMPONENTID));
                
                
                SBINCLUIDOBSS:=GE_BOEQUIVALENCVALUES.FSBGETTARGETVALUE(GW_BOPARAMETER.FNUGETEQ_Y_N,
                                                                       NVL(TBCOMPONENTS(NUCOMPONENTID).IS_INCLUDED,GE_BOCONSTANTS.CSBNO)
                                                                      );
                
                DACOMPSESU.UPDCMSSINCL(TBCOMPONENTS(NUCOMPONENTID).COMPONENT_ID,SBINCLUIDOBSS);
                
                NUCOMPONENTID := TBCOMPONENTS.NEXT(NUCOMPONENTID);


            END LOOP;
        END IF;

        UT_TRACE.TRACE('Termina PR_BOCreationComponent.SetIncludedFeatures',5);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            IF (PR_BCCOMPONENT.CUCOMPONENTSBYPRODUCTID%ISOPEN) THEN
                CLOSE PR_BCCOMPONENT.CUCOMPONENTSBYPRODUCTID;
            END IF;
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            IF (PR_BCCOMPONENT.CUCOMPONENTSBYPRODUCTID%ISOPEN) THEN
                CLOSE PR_BCCOMPONENT.CUCOMPONENTSBYPRODUCTID;
            END IF;
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SETINCLUDEDFEATURES;
    
END PR_BOCREATIONCOMPONENT;