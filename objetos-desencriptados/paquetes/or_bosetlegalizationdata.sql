CREATE OR REPLACE PACKAGE BODY OR_BOSETLEGALIZATIONDATA IS
   CSBVERSION CONSTANT VARCHAR2( 20 ) := 'SAO123697';
   CNUERR_2393 CONSTANT NUMBER( 4 ) := 2393;
   CNUERR249 CONSTANT NUMBER( 3 ) := 249;
   CNUERR251 CONSTANT NUMBER( 3 ) := 251;
   CNUERR_111121 CONSTANT NUMBER( 6 ) := 111121;
   CNUERR_112462 CONSTANT NUMBER( 6 ) := 112462;
   CNUERR_114713 CONSTANT NUMBER( 6 ) := 114713;
   GNUOPERATINGUNITID OR_ORDER.OPERATING_UNIT_ID%TYPE := NULL;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE ADDADITIONALDATA( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUATTRIBUTESETID IN GE_ATTRIBUTES_SET.ATTRIBUTE_SET_ID%TYPE, INUATTRIBUTEID IN GE_ATTRIBUTES.ATTRIBUTE_ID%TYPE, ISBVALUE IN VARCHAR2 )
    IS
      CNUCAUSALONE CONSTANT NUMBER( 1 ) := 1;
      RCORDER DAOR_ORDER.STYOR_ORDER;
      NUACTIONID GE_ACTION_MODULE.ACTION_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddAditionalData INICIO ', 2 );
      OR_BOORDERATTRIBUTESET.DELETEADDIDATAFROMTEMPTABLE( INUORDERID );
      RCORDER := DAOR_ORDER.FRCGETRECORD( INUORDERID );
      NUACTIONID := OR_BOLEGALIZEORDER.FNUGETACTIONFORCAUSAL( CNUCAUSALONE, RCORDER.ORDER_ID );
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddAditionalData nuActionId[' || NUACTIONID || ']', 2 );
      IF OR_BOITEMS.FBLISEMPTYORDERITEMSTEMPTAB( INUORDERID ) THEN
         IF OR_BOORDERSAVEDDATAVALUES.FBLEXISTETEMPDATA( INUORDERID ) THEN
            UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddAditionalData carga items Order', 2 );
            OR_BOITEMS.FILLORDERITEMSTEMPTABLESAVE( INUORDERID, FALSE );
          ELSE
            UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddAditionalData carga items tabla temp', 2 );
            OR_BOITEMS.FILLORDERITEMSTEMPTABLE( INUORDERID, FALSE );
         END IF;
      END IF;
      IF OR_BOORDERSAVEDDATAVALUES.FBLEXISTETEMPDATA( RCORDER.ORDER_ID ) THEN
         OR_BOORDERSAVEDDATAVALUES.UPDDATAVALUES( RCORDER.ORDER_ID );
      END IF;
      OR_BOORDERATTRIBUTESET.SETATTRVALUEINTEMPTABLEERROR( RCORDER.ORDER_ID, INUATTRIBUTESETID, INUATTRIBUTEID, ISBVALUE );
      OR_BOORDERSAVEDDATAVALUES.SAVETEMPDATA( RCORDER.ORDER_ID, NULL, NULL, NULL, CNUCAUSALONE, NULL );
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddAditionalData FIN ', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE VALINPUTDATA( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUATTRIBUTESETID IN GE_ATTRIBUTES_SET.ATTRIBUTE_SET_ID%TYPE, INUATTRIBUTEID IN GE_ATTRIBUTES.ATTRIBUTE_ID%TYPE, ISBVALUE IN VARCHAR2 )
    IS
      CNUCAUSALONE CONSTANT NUMBER( 1 ) := 1;
      RCORDER DAOR_ORDER.STYOR_ORDER;
      NUACTIONID OR_TRANSITION.ACTION_ID%TYPE;
      CNUMAXLENGTH NUMBER( 3 ) := 150;
    BEGIN
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.ValInputData INCIO', 2 );
      OR_BOVALIDATOR.VALIDATELEGALIZEBYSTATUS( INUORDERID );
      DAGE_ATTRIBUTES_SET.ACCKEY( INUATTRIBUTESETID );
      DAGE_ATTRIB_SET_ATTRIB.ACCKEY( INUATTRIBUTESETID, INUATTRIBUTEID );
      IF ISBVALUE IS NULL THEN
         ERRORS.SETERROR( CNUERR_2393, INUATTRIBUTEID || '|' || INUATTRIBUTESETID || '|' || INUORDERID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF LENGTH( ISBVALUE ) > CNUMAXLENGTH THEN
         ERRORS.SETERROR( CNUERR_112462, INUATTRIBUTEID || '|' || CNUMAXLENGTH );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.ValInputData FIN', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE ADDITEMSORDER( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUITEMID IN GE_ITEMS.ITEMS_ID%TYPE, INUMEASUREUNITID IN GE_ITEMS.MEASURE_UNIT_ID%TYPE, INULEGALITEMAMOUNT IN OR_ORDER_ITEMS.LEGAL_ITEM_AMOUNT%TYPE )
    IS
      RCORDER DAOR_ORDER.STYOR_ORDER;
      NUGETITEMCLASSIFID GE_ITEMS.ITEM_CLASSIF_ID%TYPE;
      SBOUT_ OR_ORDER_ITEMS.OUT_%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddItemsOrder INICIO', 2 );
      IF DAGE_ITEMS.FNUGETMEASURE_UNIT_ID( INUITEMID ) != INUMEASUREUNITID THEN
         ERRORS.SETERROR( CNUERR_114713, INUITEMID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      RCORDER := DAOR_ORDER.FRCGETRECORD( INUORDERID );
      IF OR_BOITEMS.FBLISEMPTYORDERITEMSTEMPTAB( INUORDERID ) THEN
         IF OR_BOORDERSAVEDDATAVALUES.FBLEXISTETEMPDATA( INUORDERID ) THEN
            UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddItemsOrder carga items Order', 2 );
            OR_BOITEMS.FILLORDERITEMSTEMPTABLESAVE( INUORDERID, FALSE );
          ELSE
            UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddItemsOrder carga items tabla temp', 2 );
            OR_BOITEMS.FILLORDERITEMSTEMPTABLE( INUORDERID, FALSE );
         END IF;
      END IF;
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddItemsOrderValida datos del items', 2 );
      GE_BOITEMS.VALIDISNORMALITEM( INUITEMID );
      NUGETITEMCLASSIFID := DAGE_ITEMS.FNUGETITEM_CLASSIF_ID( INUITEMID );
      IF ( DAGE_ITEM_CLASSIF.FSBGETUSED_IN_LEGALIZE( NUGETITEMCLASSIFID ) != OR_BOCONSTANTS.CSBSI ) THEN
         ERRORS.SETERROR( CNUERR249, INUITEMID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddItemsOrderValida existe U.O', 2 );
      UT_TRACE.TRACE( 'U.O[' || RCORDER.OPERATING_UNIT_ID || '] Item[' || INUITEMID || ']', 3 );
      IF NOT DAOR_OPE_UNI_ITEM_BALA.FBLEXIST( INUITEMID, RCORDER.OPERATING_UNIT_ID ) THEN
         ERRORS.SETERROR( CNUERR251, INUITEMID || '|' || RCORDER.OPERATING_UNIT_ID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddItemsOrderValida Registra Tabla TMP', 2 );
      SBOUT_ := OR_BCLEGALIZEITEMS.FSBISOUT( DAOR_ORDER.FNUGETTASK_TYPE_ID( INUORDERID ) );
      OR_BOITEMS.ADDITEMSTEMPTABLE( INUORDERID, INUITEMID, INULEGALITEMAMOUNT, SBOUT_ );
      OR_BOORDERSAVEDDATAVALUES.SAVEITEMS( INUORDERID );
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.AddItemsOrder FIN', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE VALINPUTDATAITEM( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUITEMID IN GE_ITEMS.ITEMS_ID%TYPE, INUMEASUREUNITID IN GE_ITEMS.MEASURE_UNIT_ID%TYPE, INULEGALITEMAMOUNT IN OR_ORDER_ITEMS.LEGAL_ITEM_AMOUNT%TYPE )
    IS
      CNUCAUSALONE CONSTANT NUMBER( 1 ) := 1;
      RCORDER DAOR_ORDER.STYOR_ORDER;
      NUACTIONID OR_TRANSITION.ACTION_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.ValInputDataItem INCIO ', 2 );
      OR_BOVALIDATOR.VALIDATELEGALIZEBYSTATUS( INUORDERID );
      DAGE_ITEMS.ACCKEY( INUITEMID );
      DAGE_MEASURE_UNIT.ACCKEY( INUMEASUREUNITID );
      IF INULEGALITEMAMOUNT IS NULL THEN
         ERRORS.SETERROR( CNUERR_111121, INUITEMID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      UT_TRACE.TRACE( 'OR_BOSetLegalizationData.ValInputDataItem FIN ', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
END OR_BOSETLEGALIZATIONDATA;
/


