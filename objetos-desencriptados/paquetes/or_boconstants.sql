PACKAGE BODY Or_BOConstants AS
























































































































































































































































































































































































    
    
    
    
    CSBVERSION  CONSTANT VARCHAR2(20)  := 'SAO221238';

    
    
    
    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;
    
    FUNCTION FSBDIAGNOSTICUSE RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBDIAGNOSTICUSE;
    END;

    FUNCTION  FSBGETOPERUNITSTATUSAVAILABLE RETURN NUMBER IS
    BEGIN
        RETURN ( CNUOPERA_UNI_AVAILABLE );
    END;


    FUNCTION  FSBGETOPERUNITSTATUSMOBILIZING RETURN NUMBER IS
    BEGIN
        RETURN ( CNUOPERA_UNI_MOBILIZING );
    END;

    FUNCTION  FSBGETOPERUNITSTATUSEXECUTE RETURN NUMBER IS
    BEGIN
        RETURN ( CNUOPERA_UNI_EXECUTE );
    END;

    FUNCTION  FSBGETOPERUNITSTATUSOUTSERVICE RETURN NUMBER IS
    BEGIN
        RETURN ( CNUOPERA_UNI_OUT_SERVICE );
    END;
    
    FUNCTION  FSBGETCONECOLLMNGTASKTYPE RETURN VARCHAR2 IS
    BEGIN
        RETURN ( CSBCONECOLLMNGTASKTYPE );
    END;

    FUNCTION  FSBGETSUSPCOLLMNGTASKTYPE RETURN VARCHAR2 IS
    BEGIN
        RETURN ( CSBSUSPCOLLMNGTASKTYPE );
    END;

    FUNCTION FNUGETAUTOMORDERCLASSIF
    RETURN OR_ORDER.ORDER_CLASSIF_ID%TYPE
    IS
    BEGIN
        RETURN CNUAUTOMORDERCLASSIF;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    FUNCTION FSBGETINSTALLACTION
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBINSTALLACTION;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;


    FUNCTION FSBGETDELETEACTION
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBDELETE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    FUNCTION FSBGETUPDATEACTION
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBUPDATEACTION;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    FUNCTION FSBGETADDACTION
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBADDACTION;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    FUNCTION FSBGETREMOVEACTION
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBREMOVEACTION;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    FUNCTION FSBGETSELECTACTION
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBSELECTACTION;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;


    FUNCTION FSBGETINSTALLACTIONDESC
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBINSTALLACTIONDESC;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;


    FUNCTION FSBGETDELETEACTIONDESC
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBDELETEDESC;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    FUNCTION FSBGETUPDATEACTIONDESC
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBUPDATEACTIONDESC;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    FUNCTION FSBGETADDACTIONDESC
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBADDACTIONDESC;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    FUNCTION FSBGETREMOVEACTIONDESC
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBREMOVEACTIONDESC;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

    FUNCTION FSBGETSELECTACTIONDESC
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CSBSELECTACTIONDESC;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    FUNCTION FSBINCREASE
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CNUINCREASE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBINCREASE;
    
    FUNCTION FSBDECREASE
    RETURN VARCHAR2
    IS
    BEGIN
        RETURN OR_BOCONSTANTS.CNUDECREASE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBDECREASE;
    
    
    














    FUNCTION FSBDISPATCHSTATUSOCCUPIED RETURN VARCHAR2
    IS
    BEGIN

        RETURN CSBDISPATCHSTATUSOCCUPIED;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    
    














    FUNCTION FSBDISPATCHSTATUSOVERLOAD RETURN VARCHAR2
    IS
    BEGIN

        RETURN CSBDISPATCHSTATUSOVERLOAD;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    
    














    FUNCTION FSBDISPATCHSTATUSMOVING RETURN VARCHAR2
    IS
    BEGIN

        RETURN CSBDISPATCHSTATUSMOVING;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    
    














    FUNCTION FSBDISPATCHSTATUSEXECUTING RETURN VARCHAR2
    IS
    BEGIN

        RETURN CSBDISPATCHSTATUSEXECUTING;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    










    FUNCTION FNUGETMINACTIVITYTIME RETURN NUMBER
    IS
    BEGIN

        RETURN CNUMIN_ACTIVITY_TIME;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    
    










    FUNCTION FNUGETLOGISTPROVIDCLASSIF
    RETURN OR_OPER_UNIT_CLASSIF.OPER_UNIT_CLASSIF_ID%TYPE
    IS
    BEGIN

        RETURN CNULOGISTPROVIDCLASSIF;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;


    










    FUNCTION FNUGETREPAIRCENTERCLASSIF
    RETURN OR_OPER_UNIT_CLASSIF.OPER_UNIT_CLASSIF_ID%TYPE
    IS
    BEGIN

        RETURN CNUREPAIRCENTERCLASSIF;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    
    
    










    FUNCTION FNUGETITEMS_CLASS_TO_ACTIVITY
    RETURN GE_ITEMS.ITEM_CLASSIF_ID%TYPE
    IS
    BEGIN
        RETURN CNUITEMS_CLASS_TO_ACTIVITY;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETITEMS_CLASS_TO_ACTIVITY;

    










    FUNCTION FNUGETADMIN_ACTIV_CLASSIF
    RETURN GE_ITEMS.ITEM_CLASSIF_ID%TYPE
    IS
    BEGIN
        RETURN CNUADMIN_ACTIV_CLASSIF;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETADMIN_ACTIV_CLASSIF;

    









    FUNCTION FNUGETINSPECOPERUNIT
    RETURN OR_OPER_UNIT_CLASSIF.OPER_UNIT_CLASSIF_ID%TYPE
    IS
    BEGIN

        RETURN CNUINSPECOPERUNIT;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    




















    FUNCTION FNUGETITEMACTIVITY
    RETURN GE_ITEMS.ITEM_CLASSIF_ID%TYPE
    IS
    BEGIN
        RETURN CNUITEMS_CLASS_TO_ACTIVITY;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    FUNCTION FNUDAYSFORSEACHPROG
    RETURN NUMBER
    IS
    BEGIN

        RETURN CNUDAYSFORSEACHPROG;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUDAYSFORSEACHPROG;



  















  FUNCTION FSBREGISTERSTATUS RETURN OR_ORDER_ACTIVITY.STATUS%TYPE IS
  BEGIN
  
    RETURN CSBREGISTERSTATUS;
  
  EXCEPTION
    WHEN EX.CONTROLLED_ERROR THEN
      RAISE;
    WHEN OTHERS THEN
      ERRORS.SETERROR;
      RAISE EX.CONTROLLED_ERROR;
  END FSBREGISTERSTATUS;

  















  FUNCTION FSBASSIGNEDSTATUS RETURN OR_ORDER_ACTIVITY.STATUS%TYPE IS
  BEGIN
  
    RETURN CSBASSIGNEDSTATUS;
  
  EXCEPTION
    WHEN EX.CONTROLLED_ERROR THEN
      RAISE;
    WHEN OTHERS THEN
      ERRORS.SETERROR;
      RAISE EX.CONTROLLED_ERROR;
  END FSBASSIGNEDSTATUS;
  
     















  
    FUNCTION FNUGETLABORATORYCLASSIF
    RETURN GE_ITEMS_ESTADO_INV.ID_ITEMS_ESTADO_INV%TYPE
    IS
    BEGIN

        RETURN CNULABORATORYCLASSIF;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETLABORATORYCLASSIF;

    










    FUNCTION FNUGETIDLETOOPTIMIZE RETURN NUMBER
    IS
    BEGIN

        RETURN CNUIDLETOOPTIMIZE;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETIDLETOOPTIMIZE;
    
    













    FUNCTION FNUGETCLIENTNOANSWER
    RETURN NUMBER
    IS
    BEGIN

        RETURN CNUCLIENTNOANSWER;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETCLIENTNOANSWER;
    
    




















    FUNCTION FNUGETNOVELTYCOMPONENT
    RETURN NUMBER
    IS
    BEGIN

        RETURN CNUNOVELTYCOMPONENT ;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETNOVELTYCOMPONENT;
    
    
    













    FUNCTION FNUGETPROCESSMANUALCHARGE
    RETURN NUMBER
    IS
    BEGIN

        RETURN CNUPROCESS_MANUAL_CHARGES;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETPROCESSMANUALCHARGE;
    
    













    FUNCTION FNUGETASSIGNBYCAPACITY
    RETURN OR_OPERATING_UNIT.ASSIGN_TYPE%TYPE
    IS
    BEGIN

        RETURN CNUASSIGNBYCAPACITY;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETASSIGNBYCAPACITY;
    
    













    FUNCTION FNUGETASSIGNBYSCHEDULE
    RETURN OR_OPERATING_UNIT.ASSIGN_TYPE%TYPE
    IS
    BEGIN

        RETURN CNUASSIGNBYSCHEDULE;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETASSIGNBYSCHEDULE;

    













    FUNCTION FNUGETLOCK_ORDER_ACTION
    RETURN GE_ACTION_MODULE.ACTION_ID%TYPE
    IS
    BEGIN

        RETURN CNULOCK_ORDER_ACTION;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUGETLOCK_ORDER_ACTION;

    















    FUNCTION FNUSUCCESCAUSAL
    RETURN GE_CLASS_CAUSAL.CLASS_CAUSAL_ID%TYPE
    IS
    BEGIN

        RETURN CNUSUCCESSCAUSAL;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUSUCCESCAUSAL;

END OR_BOCONSTANTS;