PACKAGE CC_BOCCCCR_Instance
IS


































































































	
    TYPE TYTBDATA IS TABLE OF GE_BOINSTANCECONTROL.STYSBVALUE INDEX BY GE_BOINSTANCECONTROL.STYSBNAME;
    
    TYPE TYRCCURRENT IS RECORD
    (
        SBINSTANCE          GE_BOINSTANCECONTROL.STYSBNAME,
        SBENTITY            GE_BOINSTANCECONTROL.STYSBNAME,
        SBATTRIBUTE         GE_BOINSTANCECONTROL.STYSBNAME,
        SBVALUE             GE_BOINSTANCECONTROL.STYSBVALUE
    );
    
    TYPE TYRCCONFIG IS RECORD
    (
        SBEXTERNALENTITY    GE_BOINSTANCECONTROL.STYSBNAME,
        SBMAINENTITY        GE_BOINSTANCECONTROL.STYSBNAME,
        SBMAINATTRIBUTE     GE_BOINSTANCECONTROL.STYSBNAME,
        TBMAINENTITYDATA    CC_BOCCCCR_INSTANCE.TYTBDATA,
        TBCONFIGDATA        DAGI_TMP_CONFIGURATION.TYTBGI_TMP_CONFIGURATION
    );

	

	
	FUNCTION FSBVERSION
    RETURN VARCHAR2;

	









    FUNCTION FSBGETENTITYNAME
    (
        INUENTITYID   IN  GE_ENTITY.ENTITY_ID%TYPE
    )
    RETURN GE_ENTITY.NAME_%TYPE;

    









    FUNCTION FSBGETATTRIBUTENAME
    (
        INUATTRIBUTEID   IN  GE_ENTITY_ATTRIBUTES.ENTITY_ATTRIBUTE_ID%TYPE
    )
    RETURN GE_ENTITY_ATTRIBUTES.TECHNICAL_NAME%TYPE;
    
    









    PROCEDURE GETCURRENTDATA
    (
        ORCCURRENTDATA  OUT CC_BOCCCCR_INSTANCE.TYRCCURRENT
    );

    









    PROCEDURE GETATTRIBUTEVALUE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME,
        OSBVALUE        OUT GE_BOINSTANCECONTROL.STYSBVALUE
    );

    









    FUNCTION FSBGETATTRIBUTEVALUE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME
    )RETURN GE_BOINSTANCECONTROL.STYSBVALUE;

	









    PROCEDURE SETATTRIBUTEVALUE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE        IN GE_BOINSTANCECONTROL.STYSBVALUE
    );
    
	









    PROCEDURE SETCURRENTATTRIBUTE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME
    );
    
	









    PROCEDURE EXECATTRIBEXPRESSION
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME,
        INUEXPRESSION   IN NUMBER
    );

	









    PROCEDURE INSERTINSTANCE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME
    );

	









    PROCEDURE UPDATEINSTANCE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME
    );

	









    PROCEDURE DELETEINSTANCE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME
    );
    
	PROCEDURE EXECEXPRESSION
    (
        INUEXPRESSION   IN VARCHAR2
    );

    









    PROCEDURE INSTANCESINGLEENTITY
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITYKEY        GE_BOINSTANCECONTROL.STYSBVALUE
    );
    
    









    PROCEDURE INSTANCEMULTIENTITY
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITYKEY        GE_BOINSTANCECONTROL.STYSBVALUE
    );

    













    PROCEDURE GETDATA
    (
        ISBINSTANCE             IN  GE_BOINSTANCECONTROL.STYSBNAME,
        IRCCONFIG               IN  DAGI_CONFIG.STYGI_CONFIG,
        INUEXTERNALID           IN  NUMBER,
        ISBMAINENTITYDATA       IN  VARCHAR2,
        ORFDATA                 OUT CONSTANTS.TYREFCURSOR
    );
    
    









    FUNCTION FBLEQUALS
    (
        ISBVALUE1       IN GE_BOINSTANCECONTROL.STYSBVALUE,
        ISBVALUE2       IN GE_BOINSTANCECONTROL.STYSBVALUE
    )
    RETURN BOOLEAN;

    










    FUNCTION FBLHASCHANGES
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME
    )
    RETURN BOOLEAN;
    
    






    PROCEDURE SAVEENTITYDATA
    (
        IRCENTITY       IN  GE_BOINSTANCECONTROL.TYRCENTITYSTACK,
        ISBATTRIBUTE    IN  GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITYKEY    IN  GE_BOINSTANCECONTROL.STYSBVALUE
    );
    
    









    PROCEDURE SAVEENTITYDATA
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITYKEY        GE_BOINSTANCECONTROL.STYSBVALUE
    );
    
    












    PROCEDURE SAVEDATA
    (
        ISBINSTANCE             IN  GE_BOINSTANCECONTROL.STYSBNAME,
        IRCCONFIG               IN  DAGI_CONFIG.STYGI_CONFIG,
        OSBMAINENTITYDATA       OUT VARCHAR2
    );

    










    PROCEDURE SAVEGE_SUBS_DOCUMEN_DATA;
    
    













    PROCEDURE INITSUBSCRIBER;

    









    PROCEDURE INITSUBSCRIPTION;

    









    PROCEDURE INITPRODUCT;

    









    PROCEDURE INSTANCEPR_STAMP_TAX_DATA;

    









    PROCEDURE INSTANCESUBS_EXT_SCORING;

    











    PROCEDURE INSTANCECLIENT_REGISTER;
    
    FUNCTION GETCURRENTGROUP
    RETURN VARCHAR2;

    









    PROCEDURE SAVEGE_SUBS_GENERAL_DATA;
    
    









    PROCEDURE SAVEPR_SUBS_TYPE_PROD;
    
    





    PROCEDURE SAVESUSCRIPC;

    





    FUNCTION FNUCOUNTINSTANCES
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME
    )
    RETURN NUMBER;

    





    FUNCTION FNUCOUNTBYATTRVALUES
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE            GE_BOINSTANCECONTROL.STYSBVALUE,
        IBOINCLUDENULL      BOOLEAN DEFAULT TRUE
    )
    RETURN NUMBER;
    
    





    FUNCTION FNUCOUNTSTACKBYATTRVALUES
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE            GE_BOINSTANCECONTROL.STYSBVALUE
    )
    RETURN NUMBER;
END CC_BOCCCCR_INSTANCE;


PACKAGE BODY CC_BOCCCCR_Instance
IS
    CSBVERSION   CONSTANT VARCHAR2(20) := 'SAO197847';

    GTBENTITYNAME           TYTBDATA;
    GTBATTRIBUTENAME        TYTBDATA;
    GRCCURRENT              TYRCCURRENT;
    GRCCONFIG               TYRCCONFIG;

    CURSOR CUCONFIGDATA
    (
        INUEXTERNALENTITYID     IN  GI_TMP_CONFIGURATION.ENTITY_TYPE_ID%TYPE,
        INUEXTERNALID           IN  GI_TMP_CONFIGURATION.EXTERNAL_TYPE_ID%TYPE
    )
    IS
        SELECT  A.*,
                A.ROWID
        FROM    GI_TMP_CONFIGURATION A,
                GI_FRAME B,
                GI_COMPOSITION C,
                GI_COMPOSITION_ADITI D,
                GI_CONFIG_COMP E
        WHERE   A.FRAME_ID          = B.FRAME_ID
          AND   B.COMPOSITION_ID    = C.COMPOSITION_ID
          AND   C.COMPOSITION_ID    = D.COMPOSITION_ID
          AND   D.COMPOSITION_ID    = E.COMPOSITION_ID
          AND   A.ENTITY_TYPE_ID    = INUEXTERNALENTITYID
          AND   A.EXTERNAL_TYPE_ID  = INUEXTERNALID;


    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;

    FUNCTION FSBGETENTITYNAME
    (
        INUENTITYID   IN  GE_ENTITY.ENTITY_ID%TYPE
    )
    RETURN GE_ENTITY.NAME_%TYPE
    IS
    BEGIN
        IF  (NOT GTBENTITYNAME.EXISTS(INUENTITYID)) THEN
            GTBENTITYNAME(INUENTITYID) := DAGE_ENTITY.FSBGETNAME_(INUENTITYID);
        END IF;

        RETURN GTBENTITYNAME(INUENTITYID);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETENTITYNAME;

    FUNCTION FSBGETATTRIBUTENAME
    (
        INUATTRIBUTEID   IN  GE_ENTITY_ATTRIBUTES.ENTITY_ATTRIBUTE_ID%TYPE
    )
    RETURN GE_ENTITY_ATTRIBUTES.TECHNICAL_NAME%TYPE
    IS
    BEGIN
        IF  (NOT GTBATTRIBUTENAME.EXISTS(INUATTRIBUTEID)) THEN
            GTBATTRIBUTENAME(INUATTRIBUTEID) := DAGE_ENTITY_ATTRIBUTES.FSBGETTECHNICAL_NAME(INUATTRIBUTEID);
        END IF;

        RETURN GTBATTRIBUTENAME(INUATTRIBUTEID);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETATTRIBUTENAME;

    PROCEDURE CLEARINSTANCEDATA
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.ClearInstanceData', 10);

        GRCCURRENT             := NULL;
        GRCCONFIG              := NULL;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.ClearInstanceData', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END CLEARINSTANCEDATA;
    
    PROCEDURE GETCURRENTDATA
    (
        ORCCURRENTDATA  OUT CC_BOCCCCR_INSTANCE.TYRCCURRENT
    )
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.GetInstanceData', 10);

        ORCCURRENTDATA      := GRCCURRENT;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.GetInstanceData', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETCURRENTDATA;
    
    PROCEDURE GETMAINENTITYVALUE
    (
        ISBATTRIBUTE    IN  GE_BOINSTANCECONTROL.STYSBNAME,
        OSBVALUE        OUT GE_BOINSTANCECONTROL.STYSBVALUE
    )
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.GetMainEntityValue['||ISBATTRIBUTE||']', 10);
        
        IF  (GRCCONFIG.TBMAINENTITYDATA.EXISTS(ISBATTRIBUTE)) THEN
            OSBVALUE := GRCCONFIG.TBMAINENTITYDATA(ISBATTRIBUTE);
        END IF;
        
        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.GetMainEntityValue['||OSBVALUE||']', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETMAINENTITYVALUE;
    
    FUNCTION FSBGETMAINENTITYVALUE
    (
        ISBATTRIBUTE    IN  GE_BOINSTANCECONTROL.STYSBNAME
    )
    RETURN GE_BOINSTANCECONTROL.STYSBVALUE
    IS
        SBVALUE         GE_BOINSTANCECONTROL.STYSBVALUE;
    BEGIN
        CC_BOCCCCR_INSTANCE.GETMAINENTITYVALUE(ISBATTRIBUTE, SBVALUE);

        RETURN SBVALUE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETMAINENTITYVALUE;
    
    PROCEDURE SETMAINENTITYVALUE
    (
        ISBATTRIBUTE    IN  GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE        IN  GE_BOINSTANCECONTROL.STYSBVALUE
    )
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SetMainEntityValue['||ISBATTRIBUTE||']['||ISBVALUE||']', 10);

        GRCCONFIG.TBMAINENTITYDATA(ISBATTRIBUTE) := ISBVALUE;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SetMainEntityValue', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SETMAINENTITYVALUE;

    FUNCTION FBOHASCONFIGDATA
    (
        ISBENTITY   IN  GI_TMP_CONFIGURATION.ENTITY_NAME%TYPE
    )
    RETURN BOOLEAN
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.fboHasConfigData['||ISBENTITY||']', 10);

        IF  (GRCCONFIG.TBCONFIGDATA.COUNT > 0) THEN

            FOR I IN GRCCONFIG.TBCONFIGDATA.FIRST .. GRCCONFIG.TBCONFIGDATA.LAST LOOP

                IF  (GRCCONFIG.TBCONFIGDATA(I).ENTITY_NAME = ISBENTITY) THEN

                    UT_TRACE.TRACE('End CC_BOCCCCR_Instance.fboHasConfigData[Y]', 10);

                    RETURN TRUE;
                END IF;

            END LOOP;

        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.fboHasConfigData[N]', 10);

        RETURN FALSE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FBOHASCONFIGDATA;

    









    FUNCTION FRCCONFIGDATA
    (
        ISBENTITY       IN  GI_TMP_CONFIGURATION.ENTITY_NAME%TYPE,
        ISBATTRIBUTE    IN  GI_TMP_CONFIGURATION.ATTRIBUTE_NAME%TYPE
    )
	RETURN DAGI_TMP_CONFIGURATION.STYGI_TMP_CONFIGURATION
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.frcConfigData['||ISBENTITY||'] ['||ISBATTRIBUTE||']', 10);

        IF  (GRCCONFIG.TBCONFIGDATA.COUNT > 0) THEN

            FOR I IN GRCCONFIG.TBCONFIGDATA.FIRST .. GRCCONFIG.TBCONFIGDATA.LAST LOOP

                IF  (GRCCONFIG.TBCONFIGDATA(I).ENTITY_NAME = ISBENTITY) AND
                    (GRCCONFIG.TBCONFIGDATA(I).ATTRIBUTE_NAME = ISBATTRIBUTE) AND
                    (GRCCONFIG.TBCONFIGDATA(I).TYPE_ATTRIB_ID = 2) AND
                    (GRCCONFIG.TBCONFIGDATA(I).PARENT_CONF_ID IS NOT NULL)
                THEN

                    UT_TRACE.TRACE('End CC_BOCCCCR_Instance.frcConfigData[Y]', 10);

                    RETURN GRCCONFIG.TBCONFIGDATA(I);
                END IF;

            END LOOP;

        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.frcConfigData[N]', 10);

        RETURN NULL;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FRCCONFIGDATA;

    PROCEDURE GETMAINENTITYVALUES
    (
        ISBDATA IN  VARCHAR2,
        OTBDATA OUT CC_BOCCCCR_INSTANCE.TYTBDATA
    )
    IS
        TBBLOCKS    UT_STRING.TYTB_STRING;
        TBFIELDS    UT_STRING.TYTB_STRING;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.GetMainEntityValues['||ISBDATA||']', 10);

        UT_STRING.EXTSTRING(ISBDATA,'|',TBBLOCKS);

        IF  (TBBLOCKS.COUNT > 0) THEN

            FOR I IN TBBLOCKS.FIRST .. TBBLOCKS.LAST LOOP

                UT_STRING.EXTSTRING(TBBLOCKS(I),'=',TBFIELDS);

                IF  (TBFIELDS.COUNT = 2) THEN

                    OTBDATA(TBFIELDS(TBFIELDS.FIRST)) := TBFIELDS(TBFIELDS.FIRST+1);

                END IF;

                TBFIELDS.DELETE;

            END LOOP;

        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.GetMainEntityValues['||OTBDATA.COUNT||']', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETMAINENTITYVALUES;

    PROCEDURE GETMAINENTITYVALUES
    (
        ITBDATA IN  CC_BOCCCCR_INSTANCE.TYTBDATA,
        OSBDATA OUT VARCHAR2
    )
    IS
        SBATTRIBUTE     GE_BOINSTANCECONTROL.STYSBNAME;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.GetMainEntityValues['||ITBDATA.COUNT||']', 10);

        SBATTRIBUTE := ITBDATA.FIRST;

        WHILE (SBATTRIBUTE IS NOT NULL) LOOP

            IF  (ITBDATA(SBATTRIBUTE) IS NOT NULL) THEN

                IF  (OSBDATA IS NULL) THEN
                    OSBDATA := SBATTRIBUTE || '=' || ITBDATA(SBATTRIBUTE);
                ELSE
                    OSBDATA := OSBDATA || '|' || SBATTRIBUTE || '=' || ITBDATA(SBATTRIBUTE);
                END IF;

            END IF;

            SBATTRIBUTE := ITBDATA.NEXT(SBATTRIBUTE);

        END LOOP;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.GetMainEntityValues['||OSBDATA||']', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETMAINENTITYVALUES;

	PROCEDURE ADDATTRIBUTE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE        IN GE_BOINSTANCECONTROL.STYSBVALUE,
        IBOSETOLDVALUE  IN BOOLEAN DEFAULT TRUE
    )
    IS
	BEGIN
        GE_BOINSTANCECONTROL.ADDATTRIBUTE
        (
            ISBINSTANCE,
            ISBGROUP,
            ISBENTITY,
            ISBATTRIBUTE,
            ISBVALUE,
            TRUE
        );

        IF  (IBOSETOLDVALUE) THEN
            GE_BOINSTANCECONTROL.SETATTRIBUTEOLDVALUE
            (
                ISBINSTANCE,
                ISBGROUP,
                ISBENTITY,
                ISBATTRIBUTE,
                ISBVALUE
            );
        END IF;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END ADDATTRIBUTE;

	PROCEDURE SETATTRIBUTEVALUE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE        IN GE_BOINSTANCECONTROL.STYSBVALUE
    )
    IS
	BEGIN
        GE_BOINSTANCECONTROL.ADDATTRIBUTE
        (
            ISBINSTANCE,
            ISBGROUP,
            ISBENTITY,
            ISBATTRIBUTE,
            ISBVALUE,
            TRUE
        );

        GE_BOINSTANCECONTROL.SETATTRIBUTENEWVALUE
        (
            ISBINSTANCE,
            ISBGROUP,
            ISBENTITY,
            ISBATTRIBUTE,
            ISBVALUE
        );
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SETATTRIBUTEVALUE;

	PROCEDURE GETATTRIBUTEVALUE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME,
        OSBVALUE        OUT GE_BOINSTANCECONTROL.STYSBVALUE
    )
    IS
	BEGIN
        GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
        (
            ISBINSTANCE,
            ISBGROUP,
            ISBENTITY,
            ISBATTRIBUTE,
            OSBVALUE
        );
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETATTRIBUTEVALUE;

    FUNCTION FSBGETATTRIBUTEVALUE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME
    )RETURN GE_BOINSTANCECONTROL.STYSBVALUE
    IS
        SBVALUE         GE_BOINSTANCECONTROL.STYSBVALUE;
    BEGIN

        CC_BOCCCCR_INSTANCE.GETATTRIBUTEVALUE
        (
            ISBINSTANCE,
            ISBGROUP,
            ISBENTITY,
            ISBATTRIBUTE,
            SBVALUE
        );

        RETURN SBVALUE;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;

	PROCEDURE SETCURRENTATTRIBUTE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME
    )
    IS
	BEGIN
        GE_BOINSTANCECONTROL.SETCURRENTDATA(ISBINSTANCE, ISBGROUP, ISBENTITY, ISBATTRIBUTE);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SETCURRENTATTRIBUTE;

	PROCEDURE EXECATTRIBEXPRESSION
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE    IN GE_BOINSTANCECONTROL.STYSBNAME,
        INUEXPRESSION   IN NUMBER
    )
    IS
	BEGIN
        GE_BOINSTANCECONTROL.SETCURRENTDATA(ISBINSTANCE, ISBGROUP, ISBENTITY, ISBATTRIBUTE);
        GE_BOINSTANCECONTROL.EXECUTEEXPRESSION(INUEXPRESSION);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END EXECATTRIBEXPRESSION;

	PROCEDURE INSERTINSTANCE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME
    )
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InsertInstance['||ISBINSTANCE||']['||ISBGROUP||']['||ISBENTITY||']', 10);

        GE_BOINSTANCECONTROL.LOADENTITYATTRIBUTES
        (
            ISBINSTANCE,
            ISBGROUP,
            ISBENTITY
        );

        GE_BOINSTANCECONTROL.SETENTITYEVENT
        (
            ISBINSTANCE,
            ISBGROUP,
            ISBENTITY,
            GE_BOINSTANCECONSTANTS.CNUINSERT
        );

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InsertInstance', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INSERTINSTANCE;

	PROCEDURE UPDATEINSTANCE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME
    )
    IS
        NUENTITYEVENT   NUMBER;
	BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.UpdateInstance['||ISBINSTANCE||']['||ISBGROUP||']['||ISBENTITY||']', 10);

        GE_BOINSTANCECONTROL.GETENTITYEVENT(ISBINSTANCE,ISBGROUP,ISBENTITY,NUENTITYEVENT);

        IF  (NUENTITYEVENT <> GE_BOINSTANCECONSTANTS.CNUINSERT) THEN
            GE_BOINSTANCECONTROL.SETENTITYEVENT
            (
                ISBINSTANCE,
                ISBGROUP,
                ISBENTITY,
                GE_BOINSTANCECONSTANTS.CNUUPDATE
            );
        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.UpdateInstance', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END UPDATEINSTANCE;

	PROCEDURE DELETEINSTANCE
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME
    )
    IS
        NUENTITYEVENT   NUMBER;
	BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.DeleteInstance['||ISBINSTANCE||']['||ISBGROUP||']['||ISBENTITY||']', 10);

        GE_BOINSTANCECONTROL.GETENTITYEVENT(ISBINSTANCE,ISBGROUP,ISBENTITY,NUENTITYEVENT);

        IF  (NUENTITYEVENT = GE_BOINSTANCECONSTANTS.CNUINSERT) THEN
            GE_BOINSTANCECONTROL.DESTROYENTITY
            (
                ISBINSTANCE,
                ISBGROUP,
                ISBENTITY
            );
        ELSE
            GE_BOINSTANCECONTROL.SETENTITYEVENT
            (
                ISBINSTANCE,
                ISBGROUP,
                ISBENTITY,
                GE_BOINSTANCECONSTANTS.CNUDELETE
            );
        END IF;

        GE_BOINSTANCECONTROL.SETCURRENTDATA(ISBINSTANCE, NULL, NULL, NULL);

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.DeleteInstance', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END DELETEINSTANCE;

	PROCEDURE EXECEXPRESSION
    (
        INUEXPRESSION   IN VARCHAR2
    )
    IS
    BEGIN
        GE_BOINSTANCECONTROL.EXECUTEEXPRESSION(INUEXPRESSION);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END EXECEXPRESSION;

    PROCEDURE INITMAINENTITY
    IS
        SBATTRIBUTE     GE_BOINSTANCECONTROL.STYSBNAME;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InitMainEntity['||GRCCURRENT.SBINSTANCE||']['||GRCCONFIG.SBMAINENTITY||']', 10);

        SBATTRIBUTE     := GRCCONFIG.TBMAINENTITYDATA.FIRST;

        WHILE (SBATTRIBUTE IS NOT NULL) LOOP

            GE_BOINSTANCECONTROL.SETATTRIBUTENEWVALUE(GRCCURRENT.SBINSTANCE,NULL,GRCCONFIG.SBMAINENTITY,SBATTRIBUTE,GRCCONFIG.TBMAINENTITYDATA(SBATTRIBUTE));

            SBATTRIBUTE     := GRCCONFIG.TBMAINENTITYDATA.NEXT(SBATTRIBUTE);

        END LOOP;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InitMainEntity', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INITMAINENTITY;

    PROCEDURE INITSUBSCRIBER
    IS
        RCSUSBSCRIBER               DAGE_SUBSCRIBER.STYGE_SUBSCRIBER;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InitSUBSCRIBER['||GRCCURRENT.SBINSTANCE||']['||GRCCONFIG.SBMAINENTITY||']', 10);

        CC_BOCCCCR_INSTANCE.GETMAINENTITYVALUE('IDENT_TYPE_ID',RCSUSBSCRIBER.IDENT_TYPE_ID);
        CC_BOCCCCR_INSTANCE.GETMAINENTITYVALUE('IDENTIFICATION',RCSUSBSCRIBER.IDENTIFICATION);
        CC_BOCCCCR_INSTANCE.GETMAINENTITYVALUE('SUBSCRIBER_ID',RCSUSBSCRIBER.SUBSCRIBER_ID);

        IF  (RCSUSBSCRIBER.IDENTIFICATION IS NOT NULL) AND (RCSUSBSCRIBER.IDENT_TYPE_ID IS NOT NULL) AND (RCSUSBSCRIBER.SUBSCRIBER_ID IS NULL) THEN
            IF  (GE_BOSUBSCRIBER.VALIDIDENTIFICATION(RCSUSBSCRIBER.IDENTIFICATION, RCSUSBSCRIBER.IDENT_TYPE_ID, RCSUSBSCRIBER.SUBSCRIBER_ID)) THEN
                CC_BOCCCCR_INSTANCE.SETMAINENTITYVALUE('SUBSCRIBER_ID',RCSUSBSCRIBER.SUBSCRIBER_ID);
            END IF;
        END IF;

        IF  (RCSUSBSCRIBER.SUBSCRIBER_ID IS NULL) THEN
            IF(RCSUSBSCRIBER.IDENT_TYPE_ID IS NOT NULL) THEN
                
                CC_BOCLIENTREGISTEREXPRESSIONS.VALIDATEIDENTIFICATION(RCSUSBSCRIBER.IDENT_TYPE_ID, RCSUSBSCRIBER.IDENTIFICATION);
            END IF;
        ELSE
            
            CC_BORULEVALIDATE.VALIDATEIDENTIFICATION(RCSUSBSCRIBER.IDENT_TYPE_ID, RCSUSBSCRIBER.IDENTIFICATION);
        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InitSUBSCRIBER');
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INITSUBSCRIBER;

    PROCEDURE INITSUBSCRIPTION
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InitSUBSCRIPTION['||GRCCURRENT.SBINSTANCE||']['||GRCCONFIG.SBMAINENTITY||']', 10);

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InitSUBSCRIPTION');
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INITSUBSCRIPTION;

    PROCEDURE INITPRODUCT
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InitPRODUCT['||GRCCURRENT.SBINSTANCE||']['||GRCCONFIG.SBMAINENTITY||']', 10);

        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InitPRODUCT', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INITPRODUCT;

    PROCEDURE INSTANCEMULTIENTITY
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITYKEY        GE_BOINSTANCECONTROL.STYSBVALUE
    )
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InstanceMultiEntity['||ISBINSTANCE||']['||ISBENTITY||']['||ISBATTRIBUTE||']['||ISBENTITYKEY||']', 10);

        IF  (ISBATTRIBUTE IS NOT NULL) AND (ISBENTITYKEY IS NOT NULL) THEN

            GE_BOINSTANCECONTROL.INITMULTISELECT(ISBINSTANCE, ISBENTITY);
            GE_BOINSTANCECONTROL.SETMULTISELECTWHERE(ISBATTRIBUTE, ISBENTITYKEY);

            GE_BOINSTANCECONTROL.SETMULTISELECTGROUP('ROWID');
            GE_BOINSTANCECONTROL.EXECUTEMULTISELECT;

        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InstanceMultiEntity', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INSTANCEMULTIENTITY;

    PROCEDURE INSTANCESINGLEENTITY
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITYKEY        GE_BOINSTANCECONTROL.STYSBVALUE
    )
    IS
        NUERROR             NUMBER;
        SBERROR             VARCHAR2(2000);
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InstanceSingleEntity['||ISBINSTANCE||']['||ISBENTITY||']['||ISBATTRIBUTE||']['||ISBENTITYKEY||']', 10);

        IF  (ISBENTITYKEY IS NULL) THEN
            GE_BOINSTANCECONTROL.LOADENTITYATTRIBUTES(ISBINSTANCE, NULL, ISBENTITY);
            GE_BOINSTANCECONTROL.SETENTITYEVENT(ISBINSTANCE, NULL, ISBENTITY, GE_BOINSTANCECONSTANTS.CNUINSERT);
        ELSE
            GE_BOINSTANCECONTROL.LOADENTITYOLDVALUESID(ISBINSTANCE, NULL, ISBENTITY, ISBENTITYKEY);
            GE_BOINSTANCECONTROL.SETENTITYEVENT(ISBINSTANCE, NULL, ISBENTITY, GE_BOINSTANCECONSTANTS.CNUUPDATE);
        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InstanceSingleEntity', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(NUERROR, SBERROR);
            IF  (NUERROR = GE_BOINSTANCECONSTANTS.CNUMSG_NO_RECORD_ENTITY) THEN

                GE_BOINSTANCECONTROL.LOADENTITYATTRIBUTES(ISBINSTANCE, NULL, ISBENTITY);
                GE_BOINSTANCECONTROL.SETENTITYEVENT(ISBINSTANCE, NULL, ISBENTITY, GE_BOINSTANCECONSTANTS.CNUINSERT);

            ELSIF   (NUERROR = GE_BOINSTANCECONSTANTS.CNUMSG_ATTRIBUTE_NULL) THEN

                GE_BOINSTANCECONTROL.LOADENTITYATTRIBUTES(ISBINSTANCE, NULL, ISBENTITY);
                GE_BOINSTANCECONTROL.SETENTITYEVENT(ISBINSTANCE, NULL, ISBENTITY, GE_BOINSTANCECONSTANTS.CNUINSERT);

            ELSIF   (NUERROR = GE_BOINSTANCECONSTANTS.CNUMSG_MULTI_ENTITY_KEY) THEN

                CC_BOCCCCR_INSTANCE.INSTANCEMULTIENTITY(ISBINSTANCE, ISBENTITY, ISBATTRIBUTE, ISBENTITYKEY);

            ELSE
                RAISE EX.CONTROLLED_ERROR;
            END IF;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INSTANCESINGLEENTITY;

    
    PROCEDURE INSTANCEPR_STAMP_TAX_DATA
    IS
        SBVALUE                     GE_BOINSTANCECONTROL.STYSBVALUE;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InstancePR_STAMP_TAX_DATA['||GRCCURRENT.SBINSTANCE||']['||GRCCURRENT.SBENTITY||']', 10);

        CC_BOCCCCR_INSTANCE.GETMAINENTITYVALUE(GRCCONFIG.SBMAINATTRIBUTE, SBVALUE);
        
        
        IF  (SBVALUE IS NOT NULL) THEN
        
            
            SBVALUE := PR_BOSTAMPTAXDATA.FNUGETIDSTAMPTAXDATA(SBVALUE);
            
        END IF;
        
        CC_BOCCCCR_INSTANCE.INSTANCESINGLEENTITY(GRCCURRENT.SBINSTANCE, GRCCURRENT.SBENTITY, NULL, SBVALUE);

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InstancePR_STAMP_TAX_DATA', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INSTANCEPR_STAMP_TAX_DATA;
    
    PROCEDURE INSTANCESUBS_EXT_SCORING
    IS
        RCGE_SUBS_EXT_SCORING   DAGE_SUBS_EXT_SCORING.STYGE_SUBS_EXT_SCORING;

        CURSOR CUGETDATA
        IS
            SELECT  A.*,
                    A.ROWID
            FROM    GE_SUBS_EXT_SCORING A
            WHERE   A.SUBSCRIBER_ID = RCGE_SUBS_EXT_SCORING.SUBSCRIBER_ID
            AND     ROWNUM = 1;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InstanceSUBS_EXT_SCORING['||GRCCURRENT.SBINSTANCE||']['||GRCCURRENT.SBENTITY||']', 10);

        CC_BOCCCCR_INSTANCE.GETMAINENTITYVALUE(GRCCONFIG.SBMAINATTRIBUTE, RCGE_SUBS_EXT_SCORING.SUBSCRIBER_ID);

        GE_BOINSTANCECONTROL.LOADENTITYATTRIBUTES(GRCCURRENT.SBINSTANCE, NULL, GRCCURRENT.SBENTITY);

        
        IF  (RCGE_SUBS_EXT_SCORING.SUBSCRIBER_ID IS NOT NULL) THEN

            
            OPEN    CUGETDATA;
            FETCH   CUGETDATA INTO RCGE_SUBS_EXT_SCORING;
            CLOSE   CUGETDATA;

        END IF;

        IF  (RCGE_SUBS_EXT_SCORING.ROWID IS NOT NULL) THEN

            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'ROWID',RCGE_SUBS_EXT_SCORING.ROWID);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'SUBSCRIBER_ID',RCGE_SUBS_EXT_SCORING.SUBSCRIBER_ID);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'IDENT_TYPE_ID',RCGE_SUBS_EXT_SCORING.IDENT_TYPE_ID);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'IDENTIFICATION',RCGE_SUBS_EXT_SCORING.IDENTIFICATION);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'AUTORIZATION_NUMBER',RCGE_SUBS_EXT_SCORING.AUTORIZATION_NUMBER);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'PERSON_ID',RCGE_SUBS_EXT_SCORING.PERSON_ID);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'RESULT',RCGE_SUBS_EXT_SCORING.RESULT);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'ORIGINAL_RESULT',RCGE_SUBS_EXT_SCORING.ORIGINAL_RESULT);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'SCORE',RCGE_SUBS_EXT_SCORING.SCORE);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'QUERY_DATE',TO_CHAR(RCGE_SUBS_EXT_SCORING.QUERY_DATE,GI_BSPARAMANDCONSTANTS.CSBDEFAULT_DATE_FORMAT));
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'AUTORIZ_PERSON_ID',RCGE_SUBS_EXT_SCORING.AUTORIZ_PERSON_ID);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'PACKAGE_ID',RCGE_SUBS_EXT_SCORING.PACKAGE_ID);
            CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'COMMENT_',RCGE_SUBS_EXT_SCORING.COMMENT_);
            
            GE_BOINSTANCECONTROL.SETENTITYEVENT(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,GE_BOINSTANCECONSTANTS.CNUUPDATE);
        ELSE
            GE_BOINSTANCECONTROL.SETENTITYEVENT(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,GE_BOINSTANCECONSTANTS.CNUINSERT);
        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InstanceSUBS_EXT_SCORING', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INSTANCESUBS_EXT_SCORING;

    
    PROCEDURE INSTANCECLIENT_REGISTER
    IS
        RCCONFIGDATA            DAGI_TMP_CONFIGURATION.STYGI_TMP_CONFIGURATION;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.InstanceCLIENT_REGISTER['||GRCCURRENT.SBINSTANCE||']['||NULL||']['||GRCCURRENT.SBENTITY||']', 10);

        GE_BOINSTANCECONTROL.LOADENTITYATTRIBUTES(GRCCURRENT.SBINSTANCE, NULL, GRCCURRENT.SBENTITY);

        CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,'PROCESS_MESSAGE',NULL, TRUE);

        
        FOR I IN GRCCONFIG.TBCONFIGDATA.FIRST .. GRCCONFIG.TBCONFIGDATA.LAST LOOP

            RCCONFIGDATA    := GRCCONFIG.TBCONFIGDATA(I);

            
            IF  (RCCONFIGDATA.ENTITY_NAME = 'CLIENT_REGISTER') THEN
                CC_BOCCCCR_INSTANCE.ADDATTRIBUTE(GRCCURRENT.SBINSTANCE,NULL,RCCONFIGDATA.ENTITY_NAME,RCCONFIGDATA.ATTRIBUTE_NAME, NULL, TRUE);
            END IF;

        END LOOP;
        
        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.InstanceCLIENT_REGISTER', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END INSTANCECLIENT_REGISTER;

    









    PROCEDURE GETDATA
    (
        ISBINSTANCE         IN  GE_BOINSTANCECONTROL.STYSBNAME,
        IORFDATA            IN OUT NOCOPY CONSTANTS.TYREFCURSOR
    )
    IS

        NUEVENT             NUMBER;
        
        RCCONFIGDATA        DAGI_TMP_CONFIGURATION.STYGI_TMP_CONFIGURATION;
        
        RCATTRIBUTE         GE_BOINSTANCECONTROL.TYRCATTRIBUTESTACK;
        
        NUATTRIBUTE         GE_BOINSTANCECONTROL.STYNUINDEX;
        
        TBATTRIBUTES        GE_TYTBSTRING;
    BEGIN

        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.GetData['||ISBINSTANCE||']', 10);

        TBATTRIBUTES := GE_TYTBSTRING();

        GE_BOINSTANCECONTROL.GETFIRSTINSTANCEATTRIBUTE(ISBINSTANCE, NUATTRIBUTE);

        WHILE NUATTRIBUTE IS NOT NULL LOOP

            GE_BOINSTANCECONTROL.GETATTRIBUTE(NUATTRIBUTE, RCATTRIBUTE);

            UT_TRACE.TRACE('['||RCATTRIBUTE.SBINSTANCE||']['||RCATTRIBUTE.SBGROUP||']['||RCATTRIBUTE.SBENTITY||']['||RCATTRIBUTE.SBATTRIBUTE||']', 10);
            
            IF  (RCATTRIBUTE.SBGROUP IS NULL) THEN

                NUEVENT := GE_BOINSTANCECONTROL.FNUGETENTITYEVENT(RCATTRIBUTE.SBINSTANCE, RCATTRIBUTE.SBGROUP, RCATTRIBUTE.SBENTITY);

                RCCONFIGDATA := CC_BOCCCCR_INSTANCE.FRCCONFIGDATA(RCATTRIBUTE.SBENTITY, RCATTRIBUTE.SBATTRIBUTE);

                UT_TRACE.TRACE('['||RCATTRIBUTE.NUINITIALIZEEXPRESSION||']['||RCCONFIGDATA.INIT_EXPRESSION_ID||']', 12);

                
                IF  (RCCONFIGDATA.INIT_EXPRESSION_ID IS NOT NULL) THEN

                    GE_BOINSTANCECONTROL.SETATTRIBUTEEXPRESSIONS
                    (
                        RCATTRIBUTE.SBINSTANCE,
                        RCATTRIBUTE.SBGROUP,
                        RCATTRIBUTE.SBENTITY,
                        RCATTRIBUTE.SBATTRIBUTE,
                        RCCONFIGDATA.INIT_EXPRESSION_ID,
                        GE_BOINSTANCECONSTANTS.CNUINITIALIZE_EXPRESSION
                    );

                    RCATTRIBUTE.NUINITIALIZEEXPRESSION := RCCONFIGDATA.INIT_EXPRESSION_ID;
                END IF;

                
                IF  (RCCONFIGDATA.VALID_EXPRESSION_ID IS NOT NULL) THEN

                    GE_BOINSTANCECONTROL.SETATTRIBUTEEXPRESSIONS
                    (
                        RCATTRIBUTE.SBINSTANCE,
                        RCATTRIBUTE.SBGROUP,
                        RCATTRIBUTE.SBENTITY,
                        RCATTRIBUTE.SBATTRIBUTE,
                        RCCONFIGDATA.VALID_EXPRESSION_ID,
                        GE_BOINSTANCECONSTANTS.CNUPROCESS_EXPRESSION
                    );

                    RCATTRIBUTE.NUPROCESSEXPRESSION := RCCONFIGDATA.VALID_EXPRESSION_ID;
                END IF;

                IF  (NUEVENT = GE_BOINSTANCECONSTANTS.CNUINSERT) AND
                    (RCATTRIBUTE.NUINITIALIZEEXPRESSION IS NOT NULL)
                THEN

                    GE_BOINSTANCECONTROL.EXEATTEXPRESSIONS
                    (
                        RCATTRIBUTE.SBINSTANCE,
                        RCATTRIBUTE.SBGROUP,
                        RCATTRIBUTE.SBENTITY,
                        RCATTRIBUTE.SBATTRIBUTE,
                        GE_BOINSTANCECONSTANTS.CNUINITIALIZE_EXPRESSION
                    );

                    GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
                    (
                        RCATTRIBUTE.SBINSTANCE,
                        RCATTRIBUTE.SBGROUP,
                        RCATTRIBUTE.SBENTITY,
                        RCATTRIBUTE.SBATTRIBUTE,
                        RCATTRIBUTE.SBNEWVALUE
                    );

                END IF;
            
            END IF;

            TBATTRIBUTES.EXTEND(1);
            
            TBATTRIBUTES(TBATTRIBUTES.COUNT) := RCATTRIBUTE.SBINSTANCE  || '|' ||
                                                RCATTRIBUTE.SBGROUP     || '|' ||
                                                RCATTRIBUTE.SBENTITY    || '|' ||
                                                RCATTRIBUTE.SBATTRIBUTE || '|' ||
                                                RCATTRIBUTE.SBNEWVALUE  || '|' ||
                                                NUEVENT;

            GE_BOINSTANCECONTROL.GETNEXTINSTANCEATTRIBUTE(NUATTRIBUTE);

        END LOOP;

        OPEN IORFDATA FOR
    		SELECT 	UT_STRING.EXTSTRFIELD(COLUMN_VALUE,'|',1) INSTANCE_NAME,
    	   			UT_STRING.EXTSTRFIELD(COLUMN_VALUE,'|',2) GROUP_NAME,
    	   			UT_STRING.EXTSTRFIELD(COLUMN_VALUE,'|',3) ENTITY_NAME,
    	   			UT_STRING.EXTSTRFIELD(COLUMN_VALUE,'|',4) ATTRIBUTE_NAME,
    	   			UT_STRING.EXTSTRFIELD(COLUMN_VALUE,'|',5) VALUE,
    	   			UT_STRING.EXTSTRFIELD(COLUMN_VALUE,'|',6) EVENT
            FROM TABLE(CAST(TBATTRIBUTES AS GE_TYTBSTRING)) A;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.GetData isbInstance['||ISBINSTANCE||']', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETDATA;

    PROCEDURE GETDATA
    (
        ISBINSTANCE             IN  GE_BOINSTANCECONTROL.STYSBNAME,
        IRCCONFIG               IN  DAGI_CONFIG.STYGI_CONFIG,
        INUEXTERNALID           IN  NUMBER,
        ISBMAINENTITYDATA       IN  VARCHAR2,
        ORFDATA                 OUT CONSTANTS.TYREFCURSOR
    )
    IS
        RCLDM                   DACC_LDM.STYCC_LDM;
        TBLDMENTITY             DACC_LDM_ENTITY.TYTBCC_LDM_ENTITY;
        
        PROCEDURE INSTANCEENTITY
        (
            IRCLDMENTITY        IN  DACC_LDM_ENTITY.STYCC_LDM_ENTITY
        )
        IS
        BEGIN
            UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.GetData.InstanceEntity['||IRCLDMENTITY.LDM_ENTITY_ID||']['||IRCLDMENTITY.ENTITY_ID||']', 10);

            GRCCURRENT.SBENTITY    := CC_BOCCCCR_INSTANCE.FSBGETENTITYNAME(IRCLDMENTITY.ENTITY_ID);
            
            IF   (CC_BOCCCCR_INSTANCE.FBOHASCONFIGDATA(GRCCURRENT.SBENTITY)) THEN
            
                
                IF  (IRCLDMENTITY.ENTITY_ID = RCLDM.MAIN_ENTITY_ID) THEN
                    
                    GRCCONFIG.SBMAINATTRIBUTE   := CC_BOCCCCR_INSTANCE.FSBGETATTRIBUTENAME(IRCLDMENTITY.ENTITY_PK_ID);
                    GRCCURRENT.SBATTRIBUTE      := GRCCONFIG.SBMAINATTRIBUTE;
                    GRCCURRENT.SBVALUE          := CC_BOCCCCR_INSTANCE.FSBGETMAINENTITYVALUE(GRCCURRENT.SBATTRIBUTE);
                    
                ELSIF  (IRCLDMENTITY.FOREIGN_ENTITY_ID = RCLDM.MAIN_ENTITY_ID) THEN
                    GRCCURRENT.SBATTRIBUTE      := CC_BOCCCCR_INSTANCE.FSBGETATTRIBUTENAME(IRCLDMENTITY.ENTITY_FK_ID);
                    GRCCURRENT.SBVALUE          := CC_BOCCCCR_INSTANCE.FSBGETMAINENTITYVALUE(GRCCONFIG.SBMAINATTRIBUTE);
                ELSE
                    GRCCURRENT.SBATTRIBUTE      := NULL;
                    GRCCURRENT.SBVALUE          := NULL;
                END IF;

                
                IF  (IRCLDMENTITY.INSTANCE_SERVICE IS NOT NULL) THEN
                    GE_BOOBJECT.EXECOBJECTBYNAME_IMMEDIATE(IRCLDMENTITY.INSTANCE_SERVICE);
                ELSE
                    IF  (IRCLDMENTITY.MAX_INSTANCES = 1) THEN
                        CC_BOCCCCR_INSTANCE.INSTANCESINGLEENTITY(GRCCURRENT.SBINSTANCE,GRCCURRENT.SBENTITY,GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);
                    ELSE
                        CC_BOCCCCR_INSTANCE.INSTANCEMULTIENTITY(GRCCURRENT.SBINSTANCE,GRCCURRENT.SBENTITY,GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);
                    END IF;
                END IF;
                
                IF  (IRCLDMENTITY.ENTITY_ID = RCLDM.MAIN_ENTITY_ID) THEN

                    CC_BOCCCCR_INSTANCE.INITMAINENTITY;
                
                END IF;

            END IF;

            UT_TRACE.TRACE('End CC_BOCCCCR_Instance.GetData.InstanceEntity', 10);
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
        END INSTANCEENTITY;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.GetData['||IRCCONFIG.CONFIG_ID||']['||IRCCONFIG.CONFIG_TYPE_ID||']['||IRCCONFIG.ENTITY_ROOT_ID||']['||ISBMAINENTITYDATA||']', 10);

        
        OPEN ORFDATA
        FOR
    		SELECT  NULL INSTANCE_NAME,
    	   			NULL GROUP_NAME,
    	   			NULL ENTITY_NAME,
    	   			NULL ATTRIBUTE_NAME,
    	   			NULL VALUE,
    	   			NULL EVENT
            FROM    DUAL
            WHERE   1 = 0;

        
        CC_BOCCCCR_INSTANCE.CLEARINSTANCEDATA;
        
        IF  (IRCCONFIG.CONFIG_ID IS NULL) THEN
            UT_TRACE.TRACE('WARNING: NO DATA FOUND GI_CONFIG', 10);
            RETURN;
        END IF;
        
        
        OPEN    CC_BOCCCCR_INSTANCE.CUCONFIGDATA(IRCCONFIG.ENTITY_ROOT_ID, IRCCONFIG.EXTERNAL_ROOT_ID);
        FETCH   CC_BOCCCCR_INSTANCE.CUCONFIGDATA BULK COLLECT INTO GRCCONFIG.TBCONFIGDATA;
        CLOSE   CC_BOCCCCR_INSTANCE.CUCONFIGDATA;

        IF  (GRCCONFIG.TBCONFIGDATA.COUNT = 0) THEN
            UT_TRACE.TRACE('WARNING: NO DATA FOUND GI_TMP_CONFIGURATION', 10);
            RETURN;
        END IF;

        RCLDM := CC_BCLDMMGR.FRCGETLDMBYEXTTYPANDENT(IRCCONFIG.CONFIG_TYPE_ID, IRCCONFIG.ENTITY_ROOT_ID);

        IF  (RCLDM.LDM_ID IS NULL) THEN
            UT_TRACE.TRACE('WARNING: NO DATA FOUND CC_LDM', 10);
            RETURN;
        END IF;

        
        TBLDMENTITY                         := CC_BCLDMMGR.FTBGETENTITYBYLDM(RCLDM.LDM_ID, TRUE, FALSE);

        IF  (TBLDMENTITY.COUNT = 0) THEN
            UT_TRACE.TRACE('WARNING: NO DATA FOUND CC_LDM_ENTITY', 10);
            RETURN;
        END IF;
        
        GRCCURRENT.SBINSTANCE       := ISBINSTANCE;
        GRCCONFIG.SBMAINENTITY      := CC_BOCCCCR_INSTANCE.FSBGETENTITYNAME(RCLDM.MAIN_ENTITY_ID);
        GRCCONFIG.SBEXTERNALENTITY  := CC_BOCCCCR_INSTANCE.FSBGETENTITYNAME(RCLDM.EXTERNAL_ENTITY_ID);
        
        
        CC_BOCCCCR_INSTANCE.GETMAINENTITYVALUES(ISBMAINENTITYDATA, GRCCONFIG.TBMAINENTITYDATA);
    
        
        IF  (CC_BOCCCCR_INSTANCE.FBOHASCONFIGDATA(GRCCONFIG.SBMAINENTITY)) THEN
            
            IF  (RCLDM.INSTANCE_SERVICE IS NOT NULL) THEN
                GE_BOOBJECT.EXECOBJECTBYNAME_IMMEDIATE(RCLDM.INSTANCE_SERVICE);
            END IF;
        END IF;

        
        
        FOR I IN TBLDMENTITY.FIRST .. TBLDMENTITY.LAST LOOP
            INSTANCEENTITY(TBLDMENTITY(I));
        END LOOP;

        CC_BOCCCCR_INSTANCE.GETDATA
        (
            GRCCURRENT.SBINSTANCE,
            ORFDATA
        );

        CC_BOCCCCR_INSTANCE.CLEARINSTANCEDATA;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.GetData', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            CC_BOCCCCR_INSTANCE.CLEARINSTANCEDATA;
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            CC_BOCCCCR_INSTANCE.CLEARINSTANCEDATA;
            RAISE EX.CONTROLLED_ERROR;
    END GETDATA;
    
    









    FUNCTION FBLEQUALS
    (
        ISBVALUE1       IN GE_BOINSTANCECONTROL.STYSBVALUE,
        ISBVALUE2       IN GE_BOINSTANCECONTROL.STYSBVALUE
    )
    RETURN BOOLEAN
    IS
    BEGIN
        RETURN NVL((ISBVALUE1 = ISBVALUE2) OR (ISBVALUE1 IS NULL AND ISBVALUE2 IS NULL), FALSE);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FBLEQUALS;

    










    FUNCTION FBLHASCHANGES
    (
        INUENTITY       IN GE_BOINSTANCECONTROL.STYNUINDEX
    )
    RETURN BOOLEAN
    IS
        NUATTRIBINDEX   GE_BOINSTANCECONTROL.STYNUINDEX;
        RCATTRIBUTE     GE_BOINSTANCECONTROL.TYRCATTRIBUTESTACK;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.fblHasChanges['||INUENTITY||']', 30);

        GE_BOINSTANCECONTROL.GETFIRSTENTITYATTRIBUTE(INUENTITY, NUATTRIBINDEX);

        WHILE NUATTRIBINDEX IS NOT NULL LOOP

            GE_BOINSTANCECONTROL.GETATTRIBUTE(NUATTRIBINDEX,RCATTRIBUTE);

            IF  (NOT CC_BOCCCCR_INSTANCE.FBLEQUALS(RCATTRIBUTE.SBOLDVALUE, RCATTRIBUTE.SBNEWVALUE))
            THEN

                UT_TRACE.TRACE('End CC_BOCCCCR_Instance.fblHasChanges[Y]['||RCATTRIBUTE.SBATTRIBUTE||']', 30);

                RETURN TRUE;

            END IF;

            GE_BOINSTANCECONTROL.GETNEXTENTITYATTRIBUTE(NUATTRIBINDEX);

        END LOOP;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.fblHasChanges[N]', 30);

        RETURN FALSE;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FBLHASCHANGES;

    









    FUNCTION FBLHASCHANGES
    (
        ISBINSTANCE     IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBGROUP        IN GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY       IN GE_BOINSTANCECONTROL.STYSBNAME
    )
    RETURN BOOLEAN
    IS
        NUENTITY        GE_BOINSTANCECONTROL.STYNUINDEX;
    BEGIN
        UT_TRACE.TRACE('CC_BOCCCCR_Instance.fblHasChanges['||ISBINSTANCE||']['||ISBGROUP||']['||ISBENTITY||']', 30);

        GE_BOINSTANCECONTROL.ACCKEYENTITYSTACK(ISBINSTANCE, ISBGROUP, ISBENTITY, NUENTITY);

        RETURN CC_BOCCCCR_INSTANCE.FBLHASCHANGES(NUENTITY);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FBLHASCHANGES;
    
    










    PROCEDURE SAVEGE_SUBS_DOCUMEN_DATA
    IS
        NUINSTANCE          GE_BOINSTANCECONTROL.STYNUINDEX;
        NUENTITYINDEX       GE_BOINSTANCECONTROL.STYNUINDEX;
        CSBFILE_ATTRIBUTE   GE_BOINSTANCECONTROL.STYSBNAME := 'FILE_ID';

        RCENTITY            GE_BOINSTANCECONTROL.TYRCENTITYSTACK;
        TBENTITY            GE_BOINSTANCECONTROL.TYTBENTITYSTACK;
        RCFILE              DACC_FILE.STYCC_FILE;
        TBFILEIDTODELETE    DACC_FILE.TYTBFILE_ID;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SaveGE_SUBS_DOCUMEN_DATA['||GRCCURRENT.SBINSTANCE||']['||GRCCURRENT.SBENTITY||']', 10);
        
        
        GE_BOINSTANCECONTROL.ACCKEYINSTANCESTACK(GRCCURRENT.SBINSTANCE, NUINSTANCE);

        GE_BOINSTANCECONTROL.GETENTITYSTACKBYENTITY(NUINSTANCE, GRCCURRENT.SBENTITY, TBENTITY);

        NUENTITYINDEX       := TBENTITY.FIRST;

        WHILE NUENTITYINDEX IS NOT NULL LOOP

            RCENTITY        := TBENTITY(NUENTITYINDEX);

                  IF  (RCENTITY.NUEVENT IN (GE_BOINSTANCECONSTANTS.CNUINSERT, GE_BOINSTANCECONSTANTS.CNUUPDATE)) AND
                    (CC_BOCCCCR_INSTANCE.FBLHASCHANGES(RCENTITY.NUENTITY))
                THEN

                    
                    CC_BOATTACHFILES.GETFILE
                    (
                        ISBINSTANCE=>RCENTITY.SBINSTANCE,
                        ISBGROUP=>RCENTITY.SBGROUP,
                        ISBENTITY=>RCENTITY.SBENTITY,
                        ISBATTRIBUTE=>CSBFILE_ATTRIBUTE,
                        ORCFILE=>RCFILE
                    );

                    IF  (RCFILE.FILE_ID IS NOT NULL) THEN

                        RCFILE.OBJECT_ID        := GRCCURRENT.SBVALUE;
                        RCFILE.OBJECT_LEVEL     := 'CUSTOMER';

                        CC_BOATTACHFILES.SAVEFILE
                        (
                            IORCFILE=>RCFILE
                        );

                        CC_BOATTACHFILES.SETFILE
                        (
                            ISBINSTANCE=>RCENTITY.SBINSTANCE,
                            ISBGROUP=>RCENTITY.SBGROUP,
                            ISBENTITY=>RCENTITY.SBENTITY,
                            ISBATTRIBUTE=>CSBFILE_ATTRIBUTE,
                            IRCFILE=>RCFILE
                        );

                        
                        GE_BOINSTANCECONTROL.SETATTRIBUTENEWVALUE
                        (
                            RCENTITY.SBINSTANCE,
                            RCENTITY.SBGROUP,
                            RCENTITY.SBENTITY,
                            'FILE_ID',
                            RCFILE.FILE_ID
                        );

                    END IF;

                    
                    CC_BOCCCCR_INSTANCE.SAVEENTITYDATA(RCENTITY,GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);

                ELSIF RCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUDELETE THEN

                    
                    GE_BOINSTANCECONTROL.GETATTRIBUTEOLDVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'FILE_ID',
                        RCFILE.FILE_ID
                    );

                    
                    CC_BOCCCCR_INSTANCE.SAVEENTITYDATA(RCENTITY,GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);

                    IF  (RCFILE.FILE_ID IS NOT NULL) THEN

                        
                        CC_BOATTACHFILES.DELATTACHFILE(RCFILE.FILE_ID, FALSE);

                    END IF;

                END IF;



            NUENTITYINDEX := TBENTITY.NEXT(NUENTITYINDEX);

        END LOOP;

               UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SaveGE_SUBS_DOCUMEN_DATA['||TBFILEIDTODELETE.COUNT||']', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SAVEGE_SUBS_DOCUMEN_DATA;
    
    PROCEDURE SAVEGE_SUBS_GENERAL_DATA
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SaveGE_SUBS_GENERAL_DATA['||GRCCURRENT.SBINSTANCE||']['||GRCCURRENT.SBENTITY||']', 10);

        GE_BOINSTANCECONTROL.SETATTRIBUTENEWVALUE(GRCCURRENT.SBINSTANCE, NULL, GRCCURRENT.SBENTITY, 'LAST_UPDATE', UT_DATE.FSBSTR_SYSDATE);

        
        CC_BOCCCCR_INSTANCE.SAVEENTITYDATA(GRCCURRENT.SBINSTANCE,GRCCURRENT.SBENTITY,GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SaveGE_SUBS_GENERAL_DATA', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SAVEGE_SUBS_GENERAL_DATA;
    
    









    PROCEDURE SAVEENTITYDATA
    (
        IRCENTITY       IN  GE_BOINSTANCECONTROL.TYRCENTITYSTACK,
        ISBATTRIBUTE    IN  GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITYKEY    IN  GE_BOINSTANCECONTROL.STYSBVALUE
    )
    IS
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SaveEntityData['||IRCENTITY.NUEVENT||']=>['||IRCENTITY.SBINSTANCE||']['||IRCENTITY.SBENTITY||']['||ISBATTRIBUTE||']['||ISBENTITYKEY||']', 10);

        
        IF  (IRCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUINSERT) THEN

            IF  (CC_BOCCCCR_INSTANCE.FBLHASCHANGES(IRCENTITY.NUENTITY)) THEN

                GE_BOINSTANCECONTROL.SETATTRIBUTENEWVALUE(IRCENTITY.SBINSTANCE,IRCENTITY.SBGROUP,IRCENTITY.SBENTITY,ISBATTRIBUTE,ISBENTITYKEY);

                GE_BOINSTANCECONTROL.INSERTENTITY(IRCENTITY.SBINSTANCE,IRCENTITY.SBGROUP,IRCENTITY.SBENTITY);

            END IF;

        ELSIF IRCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUUPDATE THEN

            IF  (CC_BOCCCCR_INSTANCE.FBLHASCHANGES(IRCENTITY.NUENTITY)) THEN

                GE_BOINSTANCECONTROL.UPDATEENTITY(IRCENTITY.SBINSTANCE,IRCENTITY.SBGROUP,IRCENTITY.SBENTITY);

            END IF;

        ELSIF IRCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUDELETE THEN

            GE_BOINSTANCECONTROL.DELETEENTITY(IRCENTITY.SBINSTANCE,IRCENTITY.SBGROUP,IRCENTITY.SBENTITY, FALSE, FALSE);

        END IF;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SaveEntityData', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SAVEENTITYDATA;
    
    










    PROCEDURE SAVEENTITYDATA
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITYKEY        GE_BOINSTANCECONTROL.STYSBVALUE
    )
    IS
        NUINSTANCE          GE_BOINSTANCECONTROL.STYNUINDEX;
        NUENTITYINDEX       GE_BOINSTANCECONTROL.STYNUINDEX;

        RCENTITY            GE_BOINSTANCECONTROL.TYRCENTITYSTACK;
        TBENTITY            GE_BOINSTANCECONTROL.TYTBENTITYSTACK;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SaveEntityData['||ISBINSTANCE||']['||ISBENTITY||']['||ISBATTRIBUTE||']['||ISBENTITYKEY||']', 10);

        GE_BOINSTANCECONTROL.ACCKEYINSTANCESTACK(ISBINSTANCE, NUINSTANCE);

        GE_BOINSTANCECONTROL.GETENTITYSTACKBYENTITY(NUINSTANCE, ISBENTITY, TBENTITY);

        NUENTITYINDEX := TBENTITY.FIRST;

        WHILE NUENTITYINDEX IS NOT NULL LOOP

            RCENTITY := TBENTITY(NUENTITYINDEX);

            EXIT WHEN (RCENTITY.BLPERSISTENT = GE_BOINSTANCECONSTANTS.CNUNOT_PERSISTENT);
            
            CC_BOCCCCR_INSTANCE.SAVEENTITYDATA(RCENTITY, ISBATTRIBUTE, ISBENTITYKEY);

            NUENTITYINDEX := TBENTITY.NEXT(NUENTITYINDEX);

        END LOOP;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SaveEntityData', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SAVEENTITYDATA;

    PROCEDURE SAVEDATA
    (
        ISBINSTANCE         IN  GE_BOINSTANCECONTROL.STYSBNAME,
        IRCCONFIG           IN  DAGI_CONFIG.STYGI_CONFIG,
        OSBMAINENTITYDATA   OUT VARCHAR2
    )
    IS
        NUATTRIBUTE             GE_BOINSTANCECONTROL.STYNUINDEX;
        
        RCLDM                   DACC_LDM.STYCC_LDM;
        TBLDMENTITY             DACC_LDM_ENTITY.TYTBCC_LDM_ENTITY;
        
        PROCEDURE SAVEENTITYDATA
        (
            IRCLDMENTITY        IN  DACC_LDM_ENTITY.STYCC_LDM_ENTITY
        )
        IS
        BEGIN
            UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SaveData.SaveEntityData['||IRCLDMENTITY.LDM_ENTITY_ID||']['||IRCLDMENTITY.ENTITY_ID||']', 10);

            GRCCURRENT.SBENTITY    := CC_BOCCCCR_INSTANCE.FSBGETENTITYNAME(IRCLDMENTITY.ENTITY_ID);

            
            IF  (IRCLDMENTITY.ENTITY_ID = RCLDM.MAIN_ENTITY_ID) THEN

                GRCCURRENT.SBATTRIBUTE      := CC_BOCCCCR_INSTANCE.FSBGETATTRIBUTENAME(IRCLDMENTITY.ENTITY_PK_ID);
                GRCCURRENT.SBVALUE          := NULL;
                
                IF  (GE_BOINSTANCECONTROL.FBLACCKEYATTRIBUTESTACK(GRCCURRENT.SBINSTANCE,NULL,GRCCURRENT.SBENTITY,GRCCURRENT.SBATTRIBUTE,NUATTRIBUTE)) THEN

                    GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
                    (
                        GRCCURRENT.SBINSTANCE,
                        NULL,
                        GRCCURRENT.SBENTITY,
                        GRCCURRENT.SBATTRIBUTE,
                        GRCCURRENT.SBVALUE
                    );

                    CC_BOCCCCR_INSTANCE.SETMAINENTITYVALUE(GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);
                END IF;
                
                GRCCONFIG.SBMAINATTRIBUTE   := GRCCURRENT.SBATTRIBUTE;

            ELSIF  (IRCLDMENTITY.FOREIGN_ENTITY_ID = RCLDM.MAIN_ENTITY_ID) THEN
            
                GRCCURRENT.SBATTRIBUTE      := CC_BOCCCCR_INSTANCE.FSBGETATTRIBUTENAME(IRCLDMENTITY.ENTITY_FK_ID);
                GRCCURRENT.SBVALUE          := CC_BOCCCCR_INSTANCE.FSBGETMAINENTITYVALUE(GRCCONFIG.SBMAINATTRIBUTE);
                
            ELSE
            
                GRCCURRENT.SBATTRIBUTE      := NULL;
                GRCCURRENT.SBVALUE          := NULL;
                
            END IF;

            
            IF  (IRCLDMENTITY.PERSISTENCE_SERVICE IS NOT NULL) THEN
                GE_BOOBJECT.EXECOBJECTBYNAME_IMMEDIATE(IRCLDMENTITY.PERSISTENCE_SERVICE);
            ELSE
                CC_BOCCCCR_INSTANCE.SAVEENTITYDATA(GRCCURRENT.SBINSTANCE,GRCCURRENT.SBENTITY,GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);
            END IF;

            UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SaveData.SaveEntityData', 10);
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
        END SAVEENTITYDATA;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SaveData['||IRCCONFIG.CONFIG_ID||']['||IRCCONFIG.CONFIG_TYPE_ID||']['||IRCCONFIG.ENTITY_ROOT_ID||']', 10);

        GE_BOINSTANCECONTROL.SETSAVEPOINT;
        SAVEPOINT REGISTER_BY_CCCCR;

        
        CC_BOCCCCR_INSTANCE.CLEARINSTANCEDATA;

        IF  (IRCCONFIG.CONFIG_ID IS NULL) THEN
            UT_TRACE.TRACE('WARNING: NO DATA FOUND GI_CONFIG', 10);
            RETURN;
        END IF;

        RCLDM := CC_BCLDMMGR.FRCGETLDMBYEXTTYPANDENT(IRCCONFIG.CONFIG_TYPE_ID, IRCCONFIG.ENTITY_ROOT_ID);

        IF  (RCLDM.LDM_ID IS NULL) THEN
            UT_TRACE.TRACE('WARNING: NO DATA FOUND CC_LDM', 10);
            RETURN;
        END IF;

        
        TBLDMENTITY                         := CC_BCLDMMGR.FTBGETENTITYBYLDM(RCLDM.LDM_ID, FALSE, TRUE);

        IF  (TBLDMENTITY.COUNT = 0) THEN
            UT_TRACE.TRACE('WARNING: NO DATA FOUND CC_LDM_ENTITY', 10);
            RETURN;
        END IF;

        GRCCURRENT.SBINSTANCE       := ISBINSTANCE;
        GRCCONFIG.SBMAINENTITY      := CC_BOCCCCR_INSTANCE.FSBGETENTITYNAME(RCLDM.MAIN_ENTITY_ID);
        GRCCONFIG.SBEXTERNALENTITY  := CC_BOCCCCR_INSTANCE.FSBGETENTITYNAME(RCLDM.EXTERNAL_ENTITY_ID);

        
        GE_BOINSTANCECONTROL.EXECUTEEXPRESSION(IRCCONFIG.ACCEPT_RULE_ID);
        
        
        
        FOR I IN TBLDMENTITY.FIRST .. TBLDMENTITY.LAST LOOP
            SAVEENTITYDATA(TBLDMENTITY(I));
        END LOOP;
        
        
        CC_BOCCCCR_INSTANCE.GETMAINENTITYVALUES(GRCCONFIG.TBMAINENTITYDATA,OSBMAINENTITYDATA);

        
        CC_BOCCCCR_INSTANCE.CLEARINSTANCEDATA;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SaveData['||OSBMAINENTITYDATA||']', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            GE_BOINSTANCECONTROL.ROLLBACKSAVEPOINT;
            ROLLBACK TO REGISTER_BY_CCCCR;
            
            
            CC_BOCCCCR_INSTANCE.CLEARINSTANCEDATA;
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            GE_BOINSTANCECONTROL.ROLLBACKSAVEPOINT;
            ROLLBACK TO REGISTER_BY_CCCCR;
            
            
            CC_BOCCCCR_INSTANCE.CLEARINSTANCEDATA;
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SAVEDATA;


    FUNCTION GETCURRENTGROUP
    RETURN VARCHAR2
    IS
    BEGIN

        UT_TRACE.TRACE('Inicia GetCurrentGroup gsbCurrentGroup[null]', 2);
        RETURN NULL;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;

        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETCURRENTGROUP;
    
    









    PROCEDURE SAVESUSCRIPC
    IS
        RCOLDSUSCRIPC       SUSCRIPC%ROWTYPE;

        PROCEDURE REGISTERNOVELTY
        IS
            SBAUTOMADEBIT   SUSCRIPC.SUSCTDCO%TYPE;
            RCSUSCRIPC      SUSCRIPC%ROWTYPE;
            NUNOVELTYTYPE   NUMBER := NULL;
        BEGIN
            UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SaveSUSCRIPC.RegisterNovelty', 1);
            UT_TRACE.TRACE('rcOldSuscripc.susccodi {' || RCOLDSUSCRIPC.SUSCCODI || '}', 2);

            
            SBAUTOMADEBIT := PKGENERALPARAMETERSMGR.FSBGETSTRINGVALUE('BIL_DEBITO_AUTOMATICO');
            UT_TRACE.TRACE('Tipo de cobro Debito Autom�tico ['||SBAUTOMADEBIT||']', 2);

            RCSUSCRIPC := PKTBLSUSCRIPC.FRCGETRECORD(RCOLDSUSCRIPC.SUSCCODI, GE_BOCONSTANTS.CNUNULLNUM);
            UT_TRACE.TRACE('Tipo de cobro [anterior] del contrato   [' || RCOLDSUSCRIPC.SUSCTDCO || ']', 2);
            UT_TRACE.TRACE('Tipo de cobro [nuevo] del contrato      [' || RCSUSCRIPC.SUSCTDCO || ']', 2);

            
            IF (RCOLDSUSCRIPC.SUSCTDCO = SBAUTOMADEBIT) THEN
                
                IF (RCSUSCRIPC.SUSCTDCO = SBAUTOMADEBIT) THEN
                    
                    NUNOVELTYTYPE := PKGENERALPARAMETERSMGR.FNUGETNUMBERVALUE('TIPO_NOVE_MODIFICACION');
                ELSE
                    
                    
                    NUNOVELTYTYPE := PKGENERALPARAMETERSMGR.FNUGETNUMBERVALUE('TIPO_NOVE_RETIRO');
                END IF;
            ELSE
                
                IF (RCSUSCRIPC.SUSCTDCO = SBAUTOMADEBIT) THEN
                    
                    NUNOVELTYTYPE := PKGENERALPARAMETERSMGR.FNUGETNUMBERVALUE('TIPO_NOVE_INCLUSION');
                END IF;
            END IF;

            IF (NUNOVELTYTYPE IS NOT NULL) THEN
                UT_TRACE.TRACE('=> pkBOAutomaticDebitNovelty.RegisterNovelty', 2);
                UT_TRACE.TRACE('    rcSuscripc.susccodi [' || RCSUSCRIPC.SUSCCODI || ']', 2);
                UT_TRACE.TRACE('    trunc(sysdate)      [' || TRUNC(SYSDATE)      || ']', 2);
                UT_TRACE.TRACE('    rcSuscripc.susctdco [' || RCSUSCRIPC.SUSCTDCO || ']', 2);
                UT_TRACE.TRACE('    rcSuscripc.suscbanc [' || RCSUSCRIPC.SUSCBANC || ']', 2);
                UT_TRACE.TRACE('    rcSuscripc.suscsuba [' || RCSUSCRIPC.SUSCSUBA || ']', 2);
                UT_TRACE.TRACE('    rcSuscripc.susccuco [' || RCSUSCRIPC.SUSCCUCO || ']', 2);
                UT_TRACE.TRACE('    rcSuscripc.susctcba [' || RCSUSCRIPC.SUSCTCBA || ']', 2);
                UT_TRACE.TRACE('    nuNoveltyType       [' || NUNOVELTYTYPE       || ']', 2);

                PKBOAUTOMATICDEBITNOVELTY.REGISTERNOVELTY
                (
                    RCSUSCRIPC.SUSCCODI,
                    TRUNC(SYSDATE),
                    RCSUSCRIPC.SUSCTDCO,
                    RCSUSCRIPC.SUSCBANC,
                    RCSUSCRIPC.SUSCSUBA,
                    RCSUSCRIPC.SUSCCUCO,
                    RCSUSCRIPC.SUSCTCBA,
                    NUNOVELTYTYPE
                );

                UT_TRACE.TRACE('<= pkBOAutomaticDebitNovelty.RegisterNovelty', 2);
            END IF;

            UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SaveSUSCRIPC.RegisterNovelty', 1);
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
        END REGISTERNOVELTY;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SaveSUSCRIPC['||GRCCURRENT.SBINSTANCE||']['||GRCCURRENT.SBENTITY||']', 10);

        IF  (PKTBLSUSCRIPC.FBLEXIST(GRCCURRENT.SBVALUE, GE_BOCONSTANTS.CNUNULLNUM)) THEN
            RCOLDSUSCRIPC := PKTBLSUSCRIPC.FRCGETRECORD(GRCCURRENT.SBVALUE, GE_BOCONSTANTS.CNUNULLNUM);
        END IF;

        
        CC_BOCCCCR_INSTANCE.SAVEENTITYDATA(GRCCURRENT.SBINSTANCE,GRCCURRENT.SBENTITY,GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);

        IF  (RCOLDSUSCRIPC.SUSCCODI IS NULL) THEN
            RCOLDSUSCRIPC := PKTBLSUSCRIPC.FRCGETRECORD(GRCCURRENT.SBVALUE, GE_BOCONSTANTS.CNUNULLNUM);
        END IF;

        
        
        
        REGISTERNOVELTY; 

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SaveSUSCRIPC', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SAVESUSCRIPC;
    
    












    PROCEDURE SAVEPR_SUBS_TYPE_PROD
    IS
        SBSYSDATE           GE_BOINSTANCECONTROL.STYSBVALUE := UT_DATE.FSBSTR_SYSDATE;
        NUINSTANCE          GE_BOINSTANCECONTROL.STYNUINDEX;
        NUENTITYINDEX       GE_BOINSTANCECONTROL.STYNUINDEX;

        RCENTITY            GE_BOINSTANCECONTROL.TYRCENTITYSTACK;
        TBENTITY            GE_BOINSTANCECONTROL.TYTBENTITYSTACK;
        SBVALUE             GE_BOINSTANCECONTROL.STYSBVALUE;

        SBNEWSERVICEUSERID  GE_BOINSTANCECONTROL.STYSBVALUE;
        SBOLDSERVICEUSERID  GE_BOINSTANCECONTROL.STYSBVALUE;
        SBNEWSERVICEOWNERID GE_BOINSTANCECONTROL.STYSBVALUE;
        SBOLDSERVICEOWNERID GE_BOINSTANCECONTROL.STYSBVALUE;
        
        BLSAVECHANGES       BOOLEAN;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.SavePR_SUBS_TYPE_PROD['||GRCCURRENT.SBINSTANCE||']['||GRCCURRENT.SBENTITY||']', 10);

        
        GE_BOINSTANCECONTROL.ACCKEYINSTANCESTACK(GRCCURRENT.SBINSTANCE, NUINSTANCE);

        GE_BOINSTANCECONTROL.GETENTITYSTACKBYENTITY(NUINSTANCE, GRCCURRENT.SBENTITY, TBENTITY);

        NUENTITYINDEX       := TBENTITY.FIRST;

        WHILE NUENTITYINDEX IS NOT NULL LOOP
        
            RCENTITY        := TBENTITY(NUENTITYINDEX);
            
            BLSAVECHANGES   := FALSE;

            GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
            (
                RCENTITY.SBINSTANCE,
                RCENTITY.SBGROUP,
                RCENTITY.SBENTITY,
                'ROLE_ID',
                SBVALUE
            );

            UT_TRACE.TRACE('['||RCENTITY.NUEVENT||']=>['||RCENTITY.SBINSTANCE||']['||RCENTITY.SBGROUP||']['||RCENTITY.SBENTITY||']', 10);

            
            IF  (RCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUINSERT)
            THEN
                
                IF  (SBVALUE = CC_BOCONSTANTS.CNUUSER_CLIENT_ROLE) THEN
                
                    GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'SUBSCRIBER_ID',
                        SBNEWSERVICEUSERID
                    );
                    
                ELSIF  (SBVALUE = CC_BOCONSTANTS.CNUOWNER_CLIENT_ROLE) THEN
                
                    GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'SUBSCRIBER_ID',
                        SBNEWSERVICEOWNERID
                    );
                    
                ELSE

                    
                    GE_BOINSTANCECONTROL.SETATTRIBUTENEWVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'LAST_UPDATE',
                        SBSYSDATE
                    );

                    BLSAVECHANGES := TRUE;
                    
                END IF;

            ELSIF (RCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUUPDATE) THEN

                IF  (SBVALUE = CC_BOCONSTANTS.CNUUSER_CLIENT_ROLE) THEN

                    GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'SUBSCRIBER_ID',
                        SBNEWSERVICEUSERID
                    );

                    GE_BOINSTANCECONTROL.GETATTRIBUTEOLDVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'SUBSCRIBER_ID',
                        SBOLDSERVICEUSERID
                    );

                ELSIF  (SBVALUE = CC_BOCONSTANTS.CNUOWNER_CLIENT_ROLE) THEN

                    GE_BOINSTANCECONTROL.GETATTRIBUTENEWVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'SUBSCRIBER_ID',
                        SBNEWSERVICEOWNERID
                    );

                    GE_BOINSTANCECONTROL.GETATTRIBUTEOLDVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'SUBSCRIBER_ID',
                        SBOLDSERVICEOWNERID
                    );
                    
                ELSE
                
                    IF  (CC_BOCCCCR_INSTANCE.FBLHASCHANGES(RCENTITY.NUENTITY)) THEN

                        
                        GE_BOINSTANCECONTROL.SETATTRIBUTENEWVALUE
                        (
                            RCENTITY.SBINSTANCE,
                            RCENTITY.SBGROUP,
                            RCENTITY.SBENTITY,
                            'LAST_UPDATE',
                            SBSYSDATE
                        );

                        BLSAVECHANGES := TRUE;
                        
                    END IF;

                END IF;

            ELSIF (RCENTITY.NUEVENT = GE_BOINSTANCECONSTANTS.CNUDELETE) THEN
            
                IF  (SBVALUE = CC_BOCONSTANTS.CNUUSER_CLIENT_ROLE) THEN

                    GE_BOINSTANCECONTROL.GETATTRIBUTEOLDVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'SUBSCRIBER_ID',
                        SBOLDSERVICEUSERID
                    );

                ELSIF  (SBVALUE = CC_BOCONSTANTS.CNUOWNER_CLIENT_ROLE) THEN

                    GE_BOINSTANCECONTROL.GETATTRIBUTEOLDVALUE
                    (
                        RCENTITY.SBINSTANCE,
                        RCENTITY.SBGROUP,
                        RCENTITY.SBENTITY,
                        'SUBSCRIBER_ID',
                        SBOLDSERVICEOWNERID
                    );

                ELSE

                    BLSAVECHANGES := TRUE;

                END IF;

            END IF;


            IF  (BLSAVECHANGES) THEN

                
                CC_BOCCCCR_INSTANCE.SAVEENTITYDATA(RCENTITY,GRCCURRENT.SBATTRIBUTE,GRCCURRENT.SBVALUE);

            END IF;

            NUENTITYINDEX := TBENTITY.NEXT(NUENTITYINDEX);

        END LOOP;
        
        
        IF  (NOT CC_BOCCCCR_INSTANCE.FBLEQUALS(SBOLDSERVICEUSERID, SBNEWSERVICEUSERID)) OR
            (NOT CC_BOCCCCR_INSTANCE.FBLEQUALS(SBOLDSERVICEOWNERID, SBNEWSERVICEOWNERID))
        THEN
        
            PR_BOSUBSBYPRODUCT.UPDATEPRODUCTOWNERAUSER(GRCCURRENT.SBVALUE, SBNEWSERVICEOWNERID, SBNEWSERVICEUSERID);
        
        END IF;
        
        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.SavePR_SUBS_TYPE_PROD', 10);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END SAVEPR_SUBS_TYPE_PROD;
    
    










    FUNCTION FNUCOUNTINSTANCES
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME
    )
    RETURN NUMBER
    IS
        NUCOUNTER           NUMBER := 0;
        NUINSTANCE          GE_BOINSTANCECONTROL.STYNUINDEX;
        NUENTITYINDEX       GE_BOINSTANCECONTROL.STYNUINDEX;

        RCENTITY            GE_BOINSTANCECONTROL.TYRCENTITYSTACK;
        TBENTITY            GE_BOINSTANCECONTROL.TYTBENTITYSTACK;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.fnuCountInstances['||ISBINSTANCE||']['||ISBENTITY||']', 10);

        GE_BOINSTANCECONTROL.ACCKEYINSTANCESTACK(ISBINSTANCE, NUINSTANCE);

        GE_BOINSTANCECONTROL.GETENTITYSTACKBYENTITY(NUINSTANCE, ISBENTITY, TBENTITY);

        NUENTITYINDEX       := TBENTITY.FIRST;

        WHILE NUENTITYINDEX IS NOT NULL LOOP

            RCENTITY        := TBENTITY(NUENTITYINDEX);

            IF  (RCENTITY.NUEVENT IN (GE_BOINSTANCECONSTANTS.CNUINSERT, GE_BOINSTANCECONSTANTS.CNUUPDATE))
            THEN
                NUCOUNTER := NUCOUNTER + 1;
            END IF;

            NUENTITYINDEX := TBENTITY.NEXT(NUENTITYINDEX);

        END LOOP;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.fnuCountInstances['||NUCOUNTER||']', 10);

        RETURN NUCOUNTER;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUCOUNTINSTANCES;

    










    FUNCTION FNUCOUNTBYATTRVALUES
    (
        INUINSTANCE         GE_BOINSTANCECONTROL.STYNUINDEX,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE            GE_BOINSTANCECONTROL.STYSBVALUE,
        IBOINCLUDENULL      BOOLEAN DEFAULT TRUE
    )
    RETURN NUMBER
    IS
        NUCOUNTER           NUMBER := 0;
        NUENTITYINDEX       GE_BOINSTANCECONTROL.STYNUINDEX;
        NUATTRIBINDEX       GE_BOINSTANCECONTROL.STYNUINDEX;

        RCENTITY            GE_BOINSTANCECONTROL.TYRCENTITYSTACK;
        TBENTITY            GE_BOINSTANCECONTROL.TYTBENTITYSTACK;

        RCATTRIBUTE         GE_BOINSTANCECONTROL.TYRCATTRIBUTESTACK;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.fnuCountByAttrValues['||INUINSTANCE||']['||ISBENTITY||']['||ISBATTRIBUTE||']['||ISBVALUE||']', 10);

        GE_BOINSTANCECONTROL.GETENTITYSTACKBYENTITY(INUINSTANCE, ISBENTITY, TBENTITY);

        NUENTITYINDEX       := TBENTITY.FIRST;

        WHILE NUENTITYINDEX IS NOT NULL LOOP

            RCENTITY        := TBENTITY(NUENTITYINDEX);

            IF  (RCENTITY.NUEVENT IN (GE_BOINSTANCECONSTANTS.CNUINSERT, GE_BOINSTANCECONSTANTS.CNUUPDATE))
            THEN
                
                GE_BOINSTANCECONTROL.GETFIRSTENTITYATTRIBUTE(RCENTITY.NUENTITY, NUATTRIBINDEX);

                WHILE NUATTRIBINDEX IS NOT NULL LOOP

                    GE_BOINSTANCECONTROL.GETATTRIBUTE(NUATTRIBINDEX, RCATTRIBUTE);

                    IF  (RCATTRIBUTE.SBATTRIBUTE = ISBATTRIBUTE) THEN

                        IF  (RCATTRIBUTE.SBNEWVALUE = ISBVALUE) OR (IBOINCLUDENULL AND RCATTRIBUTE.SBNEWVALUE IS NULL AND ISBVALUE IS NULL) THEN
                            NUCOUNTER := NUCOUNTER + 1;
                        END IF;
                        
                        EXIT;

                    END IF;

                    GE_BOINSTANCECONTROL.GETNEXTENTITYATTRIBUTE(NUATTRIBINDEX);

                END LOOP;

            END IF;

            NUENTITYINDEX := TBENTITY.NEXT(NUENTITYINDEX);

        END LOOP;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.fnuCountByAttrValues['||NUCOUNTER||']', 10);

        RETURN NUCOUNTER;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUCOUNTBYATTRVALUES;

    











    FUNCTION FNUCOUNTBYATTRVALUES
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE            GE_BOINSTANCECONTROL.STYSBVALUE,
        IBOINCLUDENULL      BOOLEAN DEFAULT TRUE
    )
    RETURN NUMBER
    IS
        NUCOUNTER           NUMBER := 0;
        NUINSTANCE          GE_BOINSTANCECONTROL.STYNUINDEX;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.fnuCountByAttrValues['||ISBINSTANCE||']['||ISBENTITY||']['||ISBATTRIBUTE||']['||ISBVALUE||']', 10);

        GE_BOINSTANCECONTROL.ACCKEYINSTANCESTACK(ISBINSTANCE, NUINSTANCE);
        
        NUCOUNTER   := CC_BOCCCCR_INSTANCE.FNUCOUNTBYATTRVALUES
        (
            INUINSTANCE=>NUINSTANCE,
            ISBENTITY=>ISBENTITY,
            ISBATTRIBUTE=>ISBATTRIBUTE,
            ISBVALUE=>ISBVALUE,
            IBOINCLUDENULL=>IBOINCLUDENULL
        );

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.fnuCountByAttrValues['||NUCOUNTER||']', 10);

        RETURN NUCOUNTER;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUCOUNTBYATTRVALUES;
    
    









    FUNCTION FNUCOUNTSTACKBYATTRVALUES
    (
        ISBINSTANCE         GE_BOINSTANCECONTROL.STYSBNAME,
        ISBENTITY           GE_BOINSTANCECONTROL.STYSBNAME,
        ISBATTRIBUTE        GE_BOINSTANCECONTROL.STYSBNAME,
        ISBVALUE            GE_BOINSTANCECONTROL.STYSBVALUE
    )
    RETURN NUMBER
    IS
        NUCOUNTER           NUMBER := 0;
        NUINSTANCEINDEX     GE_BOINSTANCECONTROL.STYNUINDEX;

        TBINSTANCE          GE_BOINSTANCECONTROL.TYTBINSTANCESTACK;
    BEGIN
        UT_TRACE.TRACE('Begin CC_BOCCCCR_Instance.fnuCountStackByAttrValues['||ISBINSTANCE||']['||ISBENTITY||']['||ISBATTRIBUTE||']['||ISBVALUE||']', 10);

        GE_BOINSTANCECONTROL.GETINSTANCESTACKBYINSTANCE(ISBINSTANCE, TBINSTANCE);

        NUINSTANCEINDEX       := TBINSTANCE.FIRST;

        WHILE NUINSTANCEINDEX IS NOT NULL LOOP

            NUCOUNTER := NUCOUNTER + CC_BOCCCCR_INSTANCE.FNUCOUNTBYATTRVALUES
            (
                INUINSTANCE=>TBINSTANCE(NUINSTANCEINDEX).NUINSTANCE,
                ISBENTITY=>ISBENTITY,
                ISBATTRIBUTE=>ISBATTRIBUTE,
                ISBVALUE=>ISBVALUE,
                IBOINCLUDENULL=>FALSE
            );

            NUINSTANCEINDEX := TBINSTANCE.NEXT(NUINSTANCEINDEX);

        END LOOP;

        UT_TRACE.TRACE('End CC_BOCCCCR_Instance.fnuCountStackByAttrValues['||NUCOUNTER||']', 10);

        RETURN NUCOUNTER;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FNUCOUNTSTACKBYATTRVALUES;
END CC_BOCCCCR_INSTANCE;