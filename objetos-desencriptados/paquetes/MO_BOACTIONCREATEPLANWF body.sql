CREATE OR REPLACE PACKAGE BODY MO_BOACTIONCREATEPLANWF IS
   CSBVERSION CONSTANT VARCHAR2( 250 ) := 'SAO183623';
   CNUEQUPACTYPINTERFAC CONSTANT NUMBER( 4 ) := 531;
   CNUENTITY_PACKAGE CONSTANT NUMBER := 17;
   CNUENTITY_MOTIVE CONSTANT NUMBER := 8;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE PROCESSPLANMOTIVEDATES( IORCMOTIVE IN OUT DAMO_MOTIVE.STYMO_MOTIVE, INUEXECMAXTIME IN NUMBER, INUSTDTIME IN NUMBER )
    IS
    BEGIN
      IORCMOTIVE.STANDARD_TIME := ( INUSTDTIME / UT_DATE.CNUSECONDSBYDAY );
      IF ( IORCMOTIVE.PROV_INITIAL_DATE IS NOT NULL ) THEN
         IORCMOTIVE.INITIAL_PROCESS_DATE := IORCMOTIVE.PROV_INITIAL_DATE - IORCMOTIVE.STANDARD_TIME;
      END IF;
      IF ( IORCMOTIVE.EXECUTION_MAX_DATE IS NULL ) THEN
         IF ( NVL( IORCMOTIVE.INITIAL_PROCESS_DATE, IORCMOTIVE.MOTIV_RECORDING_DATE ) > IORCMOTIVE.MOTIV_RECORDING_DATE ) THEN
            IORCMOTIVE.EXECUTION_MAX_DATE := IORCMOTIVE.INITIAL_PROCESS_DATE + ( INUEXECMAXTIME / UT_DATE.CNUSECONDSBYDAY );
          ELSE
            IORCMOTIVE.EXECUTION_MAX_DATE := IORCMOTIVE.MOTIV_RECORDING_DATE + ( INUEXECMAXTIME / UT_DATE.CNUSECONDSBYDAY );
         END IF;
      END IF;
      UT_TRACE.TRACE( 'Inicio Procesos:[' || IORCMOTIVE.INITIAL_PROCESS_DATE || ']Maxima de Ejecucion:[' || IORCMOTIVE.EXECUTION_MAX_DATE || ']', 7 );
      DAMO_MOTIVE.UPDRECORD( IORCMOTIVE );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE PROCESSPLANPACKAGEDATES( IRCPACKAGES IN DAMO_PACKAGES.STYMO_PACKAGES, INUEXECMAXTIME IN NUMBER, INUSTDTIME IN NUMBER )
    IS
      CURFMOTIVE CONSTANTS.TYREFCURSOR;
      RCMOTIVE DAMO_MOTIVE.STYMO_MOTIVE;
    BEGIN
      UT_TRACE.TRACE( 'Inicio Metodo MO_BOActionCreatePlanWF.ProcessPlanPackageDates', 5 );
      CURFMOTIVE := MO_BCMOTIVE.FRFMOTIVESBYCUSTCAREREQNUM( IRCPACKAGES.CUST_CARE_REQUES_NUM );
      FETCH CURFMOTIVE
         INTO RCMOTIVE;
      WHILE CURFMOTIVE%FOUND
       LOOP
         UT_TRACE.TRACE( 'Motivo:[' || RCMOTIVE.MOTIVE_ID || ']', 6 );
         PROCESSPLANMOTIVEDATES( RCMOTIVE, INUEXECMAXTIME, INUSTDTIME );
         FETCH CURFMOTIVE
            INTO RCMOTIVE;
      END LOOP;
      CLOSE CURFMOTIVE;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         GE_BOGENERALUTIL.CLOSE_REFCURSOR( CURFMOTIVE );
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         GE_BOGENERALUTIL.CLOSE_REFCURSOR( CURFMOTIVE );
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE GETINTERFACECODEBYMOT( INUMOTIVEID IN MO_MOTIVE.MOTIVE_ID%TYPE, OSBINTERFACECODE OUT VARCHAR2, ORCMOTIVE OUT DAMO_MOTIVE.STYMO_MOTIVE )
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicia Metodo MO_BOActionCreatePlanWF.GetInterfaceCodeByMot', 7 );
      ORCMOTIVE := DAMO_MOTIVE.FRCGETRECORD( INUMOTIVEID );
      OSBINTERFACECODE := PS_BOPRODMOTIPARAM.FSBGETPRODMOTIPARAM( ORCMOTIVE.PRODUCT_MOTIVE_ID, MO_BOCONSTANTS.CSBATTRIBCODEINTERFACE );
      UT_TRACE.TRACE( 'Valor Parametro:[' || OSBINTERFACECODE || ']', 8 );
      IF OSBINTERFACECODE IS NULL THEN
         OSBINTERFACECODE := PS_BOPACKTY_UNITTY.FNUINTERFBYMOTIVE( INUMOTIVEID );
         IF OSBINTERFACECODE IS NULL THEN
            OSBINTERFACECODE := TO_CHAR( MO_BOPARAMETER.FNUGETINTERFACE_ID );
         END IF;
      END IF;
      UT_TRACE.TRACE( 'Finaliza Metodo MO_BOActionCreatePlanWF.GetInterfaceCodeByMot', 7 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE GETINTERFACECODEBYPACK( INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE, OSBINTERFACECODE OUT VARCHAR2, ORCPACKAGES OUT DAMO_PACKAGES.STYMO_PACKAGES )
    IS
    BEGIN
      UT_TRACE.TRACE( 'Inicia MO_BOActionCreatePlanWF.GetInterfaceCodeByPack. Paquete:[' || INUPACKAGEID || ']', 7 );
      ORCPACKAGES := DAMO_PACKAGES.FRCGETRECORD( INUPACKAGEID );
      OSBINTERFACECODE := PS_BOPACKTYPEPARAM.FSBGETPACKTYPEPARAM( ORCPACKAGES.PACKAGE_TYPE_ID, MO_BOCONSTANTS.CSBATTRIBCODEINTERFACE );
      UT_TRACE.TRACE( 'Valor Parametro:[' || OSBINTERFACECODE || ']', 8 );
      IF OSBINTERFACECODE IS NULL THEN
         OSBINTERFACECODE := PS_BOPACKTY_UNITTY.FNUINTERFBYPACKPROD( INUPACKAGEID );
         IF OSBINTERFACECODE IS NULL THEN
            OSBINTERFACECODE := PS_BOPACKTY_UNITTY.FNUINTERFBYPACKAGE( INUPACKAGEID );
            IF OSBINTERFACECODE IS NULL THEN
               OSBINTERFACECODE := TO_CHAR( MO_BOPARAMETER.FNUGETINTERFACE_ID_PACK );
            END IF;
         END IF;
      END IF;
      UT_TRACE.TRACE( 'Finaliza MO_BOActionCreatePlanWF.GetInterfaceCodeByPack. Codigo Interfaz:[' || OSBINTERFACECODE || ']', 7 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE PROCESSACTION
    IS
      NUMOTIVEID NUMBER( 15 );
      NUPACKAGEID NUMBER( 15 );
      NUEXECMAXTIME NUMBER;
      NUSTDTIME NUMBER;
      SBINTERFACECODE VARCHAR2( 10 );
      NUEXTERNALID NUMBER;
      NUENTITYID NUMBER;
      NUPLANID NUMBER;
      NUEXTERNALPACKAGEID NUMBER;
      NUUNITTYPEID NUMBER;
      RCMOTIVE DAMO_MOTIVE.STYMO_MOTIVE;
      RCPACKAGES DAMO_PACKAGES.STYMO_PACKAGES;
      RCPS_PACKAGE_TYPE DAPS_PACKAGE_TYPE.STYPS_PACKAGE_TYPE;
      NUERRORCODE GE_MESSAGE.MESSAGE_ID%TYPE;
      SBERRORMESSAGE VARCHAR2( 2000 );
      SBPACKTYPETAG MO_PACKAGES.TAG_NAME%TYPE;
      RCWFDATAEXTERNAL DAWF_DATA_EXTERNAL.STYWF_DATA_EXTERNAL;
      EXBUILDEREXECUTOR EXCEPTION;
    BEGIN
      UT_TRACE.TRACE( 'Inicia la Creacion de Plan en WF', 3 );
      GE_BOINSTANCE.GETVALUE( MO_BOCONSTANTS.CSBMO_MOTIVE, MO_BOCONSTANTS.CSBMOTIVE_ID, NUMOTIVEID );
      GE_BOINSTANCE.GETVALUE( MO_BOCONSTANTS.CSBMO_PACKAGES, MO_BOCONSTANTS.CSBPACKAGE_ID, NUPACKAGEID );
      UT_TRACE.TRACE( 'Motivo:[' || NUMOTIVEID || ']Paquete:[' || NUPACKAGEID || ']', 4 );
      SBPACKTYPETAG := NULL;
      NUEXTERNALPACKAGEID := NULL;
      IF NUMOTIVEID IS NOT NULL THEN
         GETINTERFACECODEBYMOT( NUMOTIVEID, SBINTERFACECODE, RCMOTIVE );
         NUEXTERNALID := NUMOTIVEID;
         NUENTITYID := MO_BOPARAMETER.FNUGETENTITY_MOTIVE;
         IF ( RCMOTIVE.PACKAGE_ID IS NOT NULL AND DAMO_PACKAGES.FBLEXIST( RCMOTIVE.PACKAGE_ID ) ) THEN
            RCPACKAGES := DAMO_PACKAGES.FRCGETRECORD( RCMOTIVE.PACKAGE_ID );
            IF ( DAPS_PACKAGE_TYPE.FBLEXIST( RCPACKAGES.PACKAGE_TYPE_ID ) ) THEN
               RCPS_PACKAGE_TYPE := DAPS_PACKAGE_TYPE.FRCGETRECORD( RCPACKAGES.PACKAGE_TYPE_ID );
               SBPACKTYPETAG := RCPS_PACKAGE_TYPE.TAG_NAME;
            END IF;
            NUEXTERNALPACKAGEID := RCMOTIVE.PACKAGE_ID;
         END IF;
       ELSE
         GETINTERFACECODEBYPACK( NUPACKAGEID, SBINTERFACECODE, RCPACKAGES );
         NUEXTERNALID := NUPACKAGEID;
         NUENTITYID := MO_BOPARAMETER.FNUGETENTITY_PACKAGES;
         IF ( DAPS_PACKAGE_TYPE.FBLEXIST( RCPACKAGES.PACKAGE_TYPE_ID ) ) THEN
            RCPS_PACKAGE_TYPE := DAPS_PACKAGE_TYPE.FRCGETRECORD( RCPACKAGES.PACKAGE_TYPE_ID );
            SBPACKTYPETAG := RCPS_PACKAGE_TYPE.TAG_NAME;
            NUEXTERNALPACKAGEID := NUPACKAGEID;
         END IF;
      END IF;
      UT_TRACE.TRACE( 'Id Externo:[' || NUEXTERNALID || ']Entidad:[' || NUENTITYID || ']Codigo Interfaz:[' || SBINTERFACECODE || ']', 4 );
      MO_BOUTILITIES.INITIALIZEOUTPUT( NUERRORCODE, SBERRORMESSAGE );
      WF_BOCREATIONPLANCONTROL.BUILDEREXECUTOR( NUEXTERNALID, NUENTITYID, TO_NUMBER( SBINTERFACECODE ), NUEXECMAXTIME, NUSTDTIME, NUPLANID, NUUNITTYPEID, NUERRORCODE, SBERRORMESSAGE );
      IF NVL( NUERRORCODE, MO_BOCONSTANTS.CNUOK ) != MO_BOCONSTANTS.CNUOK THEN
         RAISE EXBUILDEREXECUTOR;
      END IF;
      RCWFDATAEXTERNAL.PLAN_ID := NUPLANID;
      RCWFDATAEXTERNAL.PACK_TYPE_TAG := SBPACKTYPETAG;
      RCWFDATAEXTERNAL.PACKAGE_ID := NUEXTERNALPACKAGEID;
      RCWFDATAEXTERNAL.UNIT_TYPE_ID := NUUNITTYPEID;
      DAWF_DATA_EXTERNAL.INSRECORD( RCWFDATAEXTERNAL );
      UT_TRACE.TRACE( 'Tiempo Max. Ejecucion:[' || NUEXECMAXTIME || '] Tiempo Estandar:[' || NUSTDTIME || '] Id Plan:[' || NUPLANID || ']', 4 );
      IF NUMOTIVEID IS NOT NULL THEN
         PROCESSPLANMOTIVEDATES( RCMOTIVE, NUEXECMAXTIME, NUSTDTIME );
       ELSE
         PROCESSPLANPACKAGEDATES( RCPACKAGES, NUEXECMAXTIME, NUSTDTIME );
      END IF;
      UT_TRACE.TRACE( 'Finaliza la Creacion de Plan en WF', 3 );
    EXCEPTION
      WHEN EXBUILDEREXECUTOR THEN
         ERRORS.SETERROR( MO_BOCONSTERROR.CNUERRCALLSERVICE, 'WF_BOCreationPlanControl.BuilderExecutor' || '|' || TO_CHAR( NUERRORCODE ) || ' - ' || SBERRORMESSAGE );
         RAISE EX.CONTROLLED_ERROR;
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE PROCESSACTIONBYPACK( INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE )
    IS
      NUEXECMAXTIME NUMBER;
      NUSTDTIME NUMBER;
      SBINTERFACECODE VARCHAR2( 10 );
      NUEXTERNALID NUMBER;
      NUENTITYID NUMBER;
      RCPACKAGES DAMO_PACKAGES.STYMO_PACKAGES;
      NUERRORCODE GE_MESSAGE.MESSAGE_ID%TYPE;
      SBERRORMESSAGE VARCHAR2( 2000 );
      EXBUILDEREXECUTOR EXCEPTION;
    BEGIN
      UT_TRACE.TRACE( 'Inicia MO_BOActionCreatePlanWF.ProcessActionByPack - Inicia la Creacion de Plan en WF para el paquete [' || INUPACKAGEID || ']', 5 );
      GETINTERFACECODEBYPACK( INUPACKAGEID, SBINTERFACECODE, RCPACKAGES );
      NUEXTERNALID := INUPACKAGEID;
      NUENTITYID := MO_BOPARAMETER.FNUGETENTITY_PACKAGES;
      UT_TRACE.TRACE( 'Id Externo:[' || NUEXTERNALID || ']Entidad:[' || NUENTITYID || ']Codigo Interfaz:[' || SBINTERFACECODE || ']', 6 );
      MO_BOUTILITIES.INITIALIZEOUTPUT( NUERRORCODE, SBERRORMESSAGE );
      WF_BOCREATIONPLANCONTROL.BUILDEREXECUTOR( NUEXTERNALID, NUENTITYID, TO_NUMBER( SBINTERFACECODE ), NUEXECMAXTIME, NUSTDTIME, NUERRORCODE, SBERRORMESSAGE );
      IF NVL( NUERRORCODE, MO_BOCONSTANTS.CNUOK ) != MO_BOCONSTANTS.CNUOK THEN
         RAISE EXBUILDEREXECUTOR;
      END IF;
      UT_TRACE.TRACE( 'Tiempo Max. Ejecucion:[' || NUEXECMAXTIME || ']Tiempo Estandar:[' || NUSTDTIME || ']', 6 );
      PROCESSPLANPACKAGEDATES( RCPACKAGES, NUEXECMAXTIME, NUSTDTIME );
      UT_TRACE.TRACE( 'Finaliza MO_BOActionCreatePlanWF.ProcessActionByPack', 5 );
    EXCEPTION
      WHEN EXBUILDEREXECUTOR THEN
         ERRORS.SETERROR( MO_BOCONSTERROR.CNUERRCALLSERVICE, 'WF_BOCreationPlanControl.BuilderExecutor' || '|' || TO_CHAR( NUERRORCODE ) || ' - ' || SBERRORMESSAGE );
         RAISE EX.CONTROLLED_ERROR;
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END PROCESSACTIONBYPACK;
END MO_BOACTIONCREATEPLANWF;
/


