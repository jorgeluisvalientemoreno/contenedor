PACKAGE BODY DAGE_contrato
IS

    
    CNURECORD_NOT_EXIST CONSTANT NUMBER(1) := 1;
    CNURECORD_ALREADY_EXIST CONSTANT NUMBER(1) := 2;
    CNUAPPTABLEBUSSY CONSTANT NUMBER(4) := 6951;
    CNUINS_PK_NULL CONSTANT NUMBER(4):= 1682;
    CNURECORD_HAVE_CHILDREN CONSTANT NUMBER(4):= -2292;
    CSBVERSION   CONSTANT VARCHAR2(20) := 'SAO388048';
    CSBTABLEPARAMETER   CONSTANT VARCHAR2(30) := 'GE_CONTRATO';
	 CNUGEENTITYID CONSTANT VARCHAR2(30) := 6184; 

	
	CURSOR CULOCKRCBYPK 
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE
	)
	IS
		SELECT GE_CONTRATO.*,GE_CONTRATO.ROWID 
		FROM GE_CONTRATO
		WHERE  ID_CONTRATO = INUID_CONTRATO
		FOR UPDATE NOWAIT;

	
	CURSOR CULOCKRCBYROWID 
	(
		IRIROWID IN VARCHAR2
	)
	IS
		SELECT GE_CONTRATO.*,GE_CONTRATO.ROWID 
		FROM GE_CONTRATO
		WHERE 
			ROWID = IRIROWID
		FOR UPDATE NOWAIT;


	
	TYPE TYRFGE_CONTRATO IS REF CURSOR;

	
	RCRECOFTAB TYRCGE_CONTRATO;

	RCDATA CURECORD%ROWTYPE;

    BLDAO_USE_CACHE    BOOLEAN := NULL;


	
	FUNCTION FSBGETMESSAGEDESCRIPTION
	RETURN VARCHAR2
	IS 
	      SBTABLEDESCRIPTION VARCHAR2(32000);
	BEGIN
	    IF (CNUGEENTITYID > 0 AND DAGE_ENTITY.FBLEXIST (CNUGEENTITYID))  THEN
	          SBTABLEDESCRIPTION:= DAGE_ENTITY.FSBGETDISPLAY_NAME(CNUGEENTITYID);
	    ELSE
	          SBTABLEDESCRIPTION:= CSBTABLEPARAMETER;
	    END IF;

		RETURN SBTABLEDESCRIPTION ;
	END;
	PROCEDURE GETDAO_USE_CACHE
	IS
	BEGIN
	    IF ( BLDAO_USE_CACHE IS NULL ) THEN
	        BLDAO_USE_CACHE :=  GE_BOPARAMETER.FSBGET('DAO_USE_CACHE') = 'Y';
	    END IF;
	END;
	FUNCTION FSBPRIMARYKEY( RCI IN STYGE_CONTRATO DEFAULT RCDATA )
	RETURN VARCHAR2
	IS
		SBPK VARCHAR2(500);
	BEGIN
		SBPK:='[';
		SBPK:=SBPK||UT_CONVERT.FSBTOCHAR(RCI.ID_CONTRATO);
		SBPK:=SBPK||']';
		RETURN SBPK;
	END;
	PROCEDURE LOCKBYPK
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		ORCGE_CONTRATO  OUT STYGE_CONTRATO
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO:=INUID_CONTRATO;

		OPEN CULOCKRCBYPK(INUID_CONTRATO);

		FETCH CULOCKRCBYPK INTO ORCGE_CONTRATO;
		IF CULOCKRCBYPK%NOTFOUND  THEN
			CLOSE CULOCKRCBYPK;
			RAISE NO_DATA_FOUND;
		END IF;
		CLOSE CULOCKRCBYPK ;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF CULOCKRCBYPK%ISOPEN THEN
				CLOSE CULOCKRCBYPK;
			END IF;
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '|| FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
		WHEN EX.RESOURCE_BUSY THEN
			IF CULOCKRCBYPK%ISOPEN THEN
				CLOSE CULOCKRCBYPK;
			END IF;
			ERRORS.SETERROR(CNUAPPTABLEBUSSY,FSBPRIMARYKEY(RCERROR)||'|'|| FSBGETMESSAGEDESCRIPTION );
			RAISE EX.CONTROLLED_ERROR;
		WHEN OTHERS THEN
			IF CULOCKRCBYPK%ISOPEN THEN
				CLOSE CULOCKRCBYPK;
			END IF;
			RAISE;
	END;
	PROCEDURE LOCKBYROWID
	(
		IRIROWID    IN  VARCHAR2,
		ORCGE_CONTRATO  OUT STYGE_CONTRATO
	)
	IS
	BEGIN
		OPEN CULOCKRCBYROWID
		(
			IRIROWID
		);

		FETCH CULOCKRCBYROWID INTO ORCGE_CONTRATO;
		IF CULOCKRCBYROWID%NOTFOUND  THEN
			CLOSE CULOCKRCBYROWID;
			RAISE NO_DATA_FOUND;
		END IF;
		CLOSE CULOCKRCBYROWID;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF CULOCKRCBYROWID%ISOPEN THEN
				CLOSE CULOCKRCBYROWID;
			END IF;
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' rowid=['||IRIROWID||']');
			RAISE EX.CONTROLLED_ERROR;
		WHEN EX.RESOURCE_BUSY THEN
			IF CULOCKRCBYROWID%ISOPEN THEN
				CLOSE CULOCKRCBYROWID;
			END IF;
			ERRORS.SETERROR(CNUAPPTABLEBUSSY,'rowid=['||IRIROWID||']|'||FSBGETMESSAGEDESCRIPTION );
			RAISE EX.CONTROLLED_ERROR;
		WHEN OTHERS THEN
			IF CULOCKRCBYROWID%ISOPEN THEN
				CLOSE CULOCKRCBYROWID;
			END IF;
			RAISE;
	END;
	PROCEDURE DELRECORDOFTABLES
	(
		ITBGE_CONTRATO  IN OUT NOCOPY TYTBGE_CONTRATO
	)
	IS
	BEGIN
			RCRECOFTAB.ID_CONTRATO.DELETE;
			RCRECOFTAB.DESCRIPCION.DELETE;
			RCRECOFTAB.FECHA_INICIAL.DELETE;
			RCRECOFTAB.FECHA_FINAL.DELETE;
			RCRECOFTAB.VALOR_AUI_ADMIN.DELETE;
			RCRECOFTAB.VALOR_AUI_UTIL.DELETE;
			RCRECOFTAB.VALOR_AUI_IMPREV.DELETE;
			RCRECOFTAB.TIPO_MONEDA_LIQUIDAR.DELETE;
			RCRECOFTAB.VALOR_TOTAL_CONTRATO.DELETE;
			RCRECOFTAB.VALOR_TOTAL_PAGADO.DELETE;
			RCRECOFTAB.ID_TIPO_CONTRATO.DELETE;
			RCRECOFTAB.ID_CONTRATISTA.DELETE;
			RCRECOFTAB.DIAS_FACTURAR.DELETE;
			RCRECOFTAB.ALERTA_PORCEN_VALOR.DELETE;
			RCRECOFTAB.VALOR_ANTICIPO.DELETE;
			RCRECOFTAB.ANTICIPO_AMORTIZADO.DELETE;
			RCRECOFTAB.PORCEN_FONDO_GARANT.DELETE;
			RCRECOFTAB.ACUMUL_FONDO_GARANT.DELETE;
			RCRECOFTAB.FECHA_CIERRE.DELETE;
			RCRECOFTAB.STATUS.DELETE;
			RCRECOFTAB.PERCENT_NATION_STAMP.DELETE;
			RCRECOFTAB.ACCOUNT_CLASSIF_ID.DELETE;
			RCRECOFTAB.VALOR_LIQUIDADO.DELETE;
			RCRECOFTAB.VALOR_ASIGNADO.DELETE;
			RCRECOFTAB.VALOR_NO_LIQUIDADO.DELETE;
			RCRECOFTAB.ROW_ID.DELETE;
	END;
	PROCEDURE FILLRECORDOFTABLES
	(
		ITBGE_CONTRATO  IN OUT NOCOPY TYTBGE_CONTRATO,
		OBLUSEROWID OUT BOOLEAN
	)
	IS
	BEGIN
		DELRECORDOFTABLES(ITBGE_CONTRATO);

		FOR N IN ITBGE_CONTRATO.FIRST .. ITBGE_CONTRATO.LAST LOOP
			RCRECOFTAB.ID_CONTRATO(N) := ITBGE_CONTRATO(N).ID_CONTRATO;
			RCRECOFTAB.DESCRIPCION(N) := ITBGE_CONTRATO(N).DESCRIPCION;
			RCRECOFTAB.FECHA_INICIAL(N) := ITBGE_CONTRATO(N).FECHA_INICIAL;
			RCRECOFTAB.FECHA_FINAL(N) := ITBGE_CONTRATO(N).FECHA_FINAL;
			RCRECOFTAB.VALOR_AUI_ADMIN(N) := ITBGE_CONTRATO(N).VALOR_AUI_ADMIN;
			RCRECOFTAB.VALOR_AUI_UTIL(N) := ITBGE_CONTRATO(N).VALOR_AUI_UTIL;
			RCRECOFTAB.VALOR_AUI_IMPREV(N) := ITBGE_CONTRATO(N).VALOR_AUI_IMPREV;
			RCRECOFTAB.TIPO_MONEDA_LIQUIDAR(N) := ITBGE_CONTRATO(N).TIPO_MONEDA_LIQUIDAR;
			RCRECOFTAB.VALOR_TOTAL_CONTRATO(N) := ITBGE_CONTRATO(N).VALOR_TOTAL_CONTRATO;
			RCRECOFTAB.VALOR_TOTAL_PAGADO(N) := ITBGE_CONTRATO(N).VALOR_TOTAL_PAGADO;
			RCRECOFTAB.ID_TIPO_CONTRATO(N) := ITBGE_CONTRATO(N).ID_TIPO_CONTRATO;
			RCRECOFTAB.ID_CONTRATISTA(N) := ITBGE_CONTRATO(N).ID_CONTRATISTA;
			RCRECOFTAB.DIAS_FACTURAR(N) := ITBGE_CONTRATO(N).DIAS_FACTURAR;
			RCRECOFTAB.ALERTA_PORCEN_VALOR(N) := ITBGE_CONTRATO(N).ALERTA_PORCEN_VALOR;
			RCRECOFTAB.VALOR_ANTICIPO(N) := ITBGE_CONTRATO(N).VALOR_ANTICIPO;
			RCRECOFTAB.ANTICIPO_AMORTIZADO(N) := ITBGE_CONTRATO(N).ANTICIPO_AMORTIZADO;
			RCRECOFTAB.PORCEN_FONDO_GARANT(N) := ITBGE_CONTRATO(N).PORCEN_FONDO_GARANT;
			RCRECOFTAB.ACUMUL_FONDO_GARANT(N) := ITBGE_CONTRATO(N).ACUMUL_FONDO_GARANT;
			RCRECOFTAB.FECHA_CIERRE(N) := ITBGE_CONTRATO(N).FECHA_CIERRE;
			RCRECOFTAB.STATUS(N) := ITBGE_CONTRATO(N).STATUS;
			RCRECOFTAB.PERCENT_NATION_STAMP(N) := ITBGE_CONTRATO(N).PERCENT_NATION_STAMP;
			RCRECOFTAB.ACCOUNT_CLASSIF_ID(N) := ITBGE_CONTRATO(N).ACCOUNT_CLASSIF_ID;
			RCRECOFTAB.VALOR_LIQUIDADO(N) := ITBGE_CONTRATO(N).VALOR_LIQUIDADO;
			RCRECOFTAB.VALOR_ASIGNADO(N) := ITBGE_CONTRATO(N).VALOR_ASIGNADO;
			RCRECOFTAB.VALOR_NO_LIQUIDADO(N) := ITBGE_CONTRATO(N).VALOR_NO_LIQUIDADO;
			RCRECOFTAB.ROW_ID(N) := ITBGE_CONTRATO(N).ROWID;

			
			OBLUSEROWID:=RCRECOFTAB.ROW_ID(N) IS NOT NULL;
		END LOOP;
	END;

	PROCEDURE LOAD
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE
	)
	IS
		RCRECORDNULL CURECORD%ROWTYPE;
	BEGIN
		IF CURECORD%ISOPEN THEN
			CLOSE CURECORD;
		END IF;
		OPEN CURECORD(INUID_CONTRATO);

		FETCH CURECORD INTO RCDATA;
		IF CURECORD%NOTFOUND  THEN
			CLOSE CURECORD;
			RCDATA := RCRECORDNULL;
			RAISE NO_DATA_FOUND;
		END IF;
		CLOSE CURECORD;
	END;
	PROCEDURE LOADBYROWID
	(
		IRIROWID IN VARCHAR2
	)
	IS
		RCRECORDNULL CURECORDBYROWID%ROWTYPE;
	BEGIN
		IF CURECORDBYROWID%ISOPEN THEN
			CLOSE CURECORDBYROWID;
		END IF;
		OPEN CURECORDBYROWID(IRIROWID);

		FETCH CURECORDBYROWID INTO RCDATA;
		IF CURECORDBYROWID%NOTFOUND  THEN
			CLOSE CURECORDBYROWID;
			RCDATA := RCRECORDNULL;
			RAISE NO_DATA_FOUND;
		END IF;
		CLOSE CURECORDBYROWID;
	END;
	FUNCTION FBLALREADYLOADED
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE
	)
	RETURN BOOLEAN
	IS
	BEGIN
		IF (
			INUID_CONTRATO = RCDATA.ID_CONTRATO
		   ) THEN
			RETURN ( TRUE );
		END IF;
		RETURN (FALSE);
	END;

	

	
    FUNCTION FSBVERSION
    RETURN VARCHAR2
	IS
	BEGIN
		RETURN CSBVERSION;
	END;

	PROCEDURE CLEARMEMORY
	IS
		RCRECORDNULL CURECORD%ROWTYPE;
	BEGIN
		RCDATA := RCRECORDNULL;
	END;
	FUNCTION FBLEXIST
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE
	)
	RETURN BOOLEAN
	IS
	BEGIN
		LOAD(INUID_CONTRATO);
		RETURN(TRUE);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN(FALSE);
	END;
	PROCEDURE ACCKEY
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO:=INUID_CONTRATO;

		LOAD(INUID_CONTRATO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE ACCKEYBYROWID
	(
		IRIROWID    IN ROWID
	)
	IS
	BEGIN
		LOADBYROWID(IRIROWID);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
            ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' rowid=['||IRIROWID||']');
            RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE VALDUPLICATE
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE
	)
	IS
	BEGIN
		LOAD(INUID_CONTRATO);
		ERRORS.SETERROR(CNURECORD_ALREADY_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY);
		RAISE EX.CONTROLLED_ERROR;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			NULL;
	END;
	PROCEDURE GETRECORD
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		ORCRECORD OUT NOCOPY STYGE_CONTRATO
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO:=INUID_CONTRATO;

		LOAD(INUID_CONTRATO);
		ORCRECORD := RCDATA;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '|| FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	FUNCTION FRCGETRECORD
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE
	)
	RETURN STYGE_CONTRATO
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO:=INUID_CONTRATO;

		LOAD(INUID_CONTRATO);
		RETURN(RCDATA);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '|| FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	FUNCTION FRCGETRCDATA
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE
	)
	RETURN STYGE_CONTRATO
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO:=INUID_CONTRATO;
        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '|| FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	FUNCTION FRCGETRCDATA
	RETURN STYGE_CONTRATO
	IS
	BEGIN
		RETURN(RCDATA);
	END;
	PROCEDURE GETRECORDS
	(
		ISBQUERY IN VARCHAR2,
		OTBRESULT OUT NOCOPY TYTBGE_CONTRATO
	)
	IS
		RFGE_CONTRATO TYRFGE_CONTRATO;
		N NUMBER(4) := 1;
		SBFULLQUERY VARCHAR2 (32000) := 'SELECT GE_contrato.*, GE_contrato.rowid FROM GE_contrato';
		NUMAXTBRECORDS NUMBER(5):=GE_BOPARAMETER.FNUGET('MAXREGSQUERY');
	BEGIN
		OTBRESULT.DELETE;
		IF ISBQUERY IS NOT NULL AND LENGTH(ISBQUERY) > 0 THEN
			SBFULLQUERY := SBFULLQUERY||' WHERE '||ISBQUERY;
		END IF;

		OPEN RFGE_CONTRATO FOR SBFULLQUERY;

		FETCH RFGE_CONTRATO BULK COLLECT INTO OTBRESULT;

		CLOSE RFGE_CONTRATO;
		IF OTBRESULT.COUNT = 0  THEN
			RAISE NO_DATA_FOUND;
		END IF;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION);
			RAISE EX.CONTROLLED_ERROR;
	END;
	FUNCTION FRFGETRECORDS
	(
		ISBCRITERIA IN VARCHAR2 DEFAULT NULL,
		IBLLOCK IN BOOLEAN DEFAULT FALSE
	)
	RETURN TYREFCURSOR
	IS
		RFQUERY TYREFCURSOR;
		SBSQL VARCHAR2 (32000) := 'select GE_contrato.*, GE_contrato.rowid FROM GE_contrato';
	BEGIN
		IF ISBCRITERIA IS NOT NULL THEN
			SBSQL := SBSQL||' where '||ISBCRITERIA;
		END IF;
		IF IBLLOCK THEN
			SBSQL := SBSQL||' for update nowait';
		END IF;
		OPEN RFQUERY FOR SBSQL;
		RETURN(RFQUERY);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION);
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE INSRECORD
	(
		IRCGE_CONTRATO IN STYGE_CONTRATO
	)
	IS
		RIROWID VARCHAR2(200);
	BEGIN
		INSRECORD(IRCGE_CONTRATO,RIROWID);
	END;
	PROCEDURE INSRECORD
	(
		IRCGE_CONTRATO IN STYGE_CONTRATO,
        ORIROWID   OUT VARCHAR2
	)
	IS
	BEGIN
		IF IRCGE_CONTRATO.ID_CONTRATO IS NULL THEN
			ERRORS.SETERROR(CNUINS_PK_NULL,
			                FSBGETMESSAGEDESCRIPTION||'|Id_Contrato');
			RAISE EX.CONTROLLED_ERROR;
		END IF;

		INSERT INTO GE_CONTRATO
		(
			ID_CONTRATO,
			DESCRIPCION,
			FECHA_INICIAL,
			FECHA_FINAL,
			VALOR_AUI_ADMIN,
			VALOR_AUI_UTIL,
			VALOR_AUI_IMPREV,
			TIPO_MONEDA_LIQUIDAR,
			VALOR_TOTAL_CONTRATO,
			VALOR_TOTAL_PAGADO,
			ID_TIPO_CONTRATO,
			ID_CONTRATISTA,
			DIAS_FACTURAR,
			ALERTA_PORCEN_VALOR,
			VALOR_ANTICIPO,
			ANTICIPO_AMORTIZADO,
			PORCEN_FONDO_GARANT,
			ACUMUL_FONDO_GARANT,
			FECHA_CIERRE,
			STATUS,
			PERCENT_NATION_STAMP,
			ACCOUNT_CLASSIF_ID,
			VALOR_LIQUIDADO,
			VALOR_ASIGNADO,
			VALOR_NO_LIQUIDADO
		)
		VALUES
		(
			IRCGE_CONTRATO.ID_CONTRATO,
			IRCGE_CONTRATO.DESCRIPCION,
			IRCGE_CONTRATO.FECHA_INICIAL,
			IRCGE_CONTRATO.FECHA_FINAL,
			IRCGE_CONTRATO.VALOR_AUI_ADMIN,
			IRCGE_CONTRATO.VALOR_AUI_UTIL,
			IRCGE_CONTRATO.VALOR_AUI_IMPREV,
			IRCGE_CONTRATO.TIPO_MONEDA_LIQUIDAR,
			IRCGE_CONTRATO.VALOR_TOTAL_CONTRATO,
			IRCGE_CONTRATO.VALOR_TOTAL_PAGADO,
			IRCGE_CONTRATO.ID_TIPO_CONTRATO,
			IRCGE_CONTRATO.ID_CONTRATISTA,
			IRCGE_CONTRATO.DIAS_FACTURAR,
			IRCGE_CONTRATO.ALERTA_PORCEN_VALOR,
			IRCGE_CONTRATO.VALOR_ANTICIPO,
			IRCGE_CONTRATO.ANTICIPO_AMORTIZADO,
			IRCGE_CONTRATO.PORCEN_FONDO_GARANT,
			IRCGE_CONTRATO.ACUMUL_FONDO_GARANT,
			IRCGE_CONTRATO.FECHA_CIERRE,
			IRCGE_CONTRATO.STATUS,
			IRCGE_CONTRATO.PERCENT_NATION_STAMP,
			IRCGE_CONTRATO.ACCOUNT_CLASSIF_ID,
			IRCGE_CONTRATO.VALOR_LIQUIDADO,
			IRCGE_CONTRATO.VALOR_ASIGNADO,
			IRCGE_CONTRATO.VALOR_NO_LIQUIDADO
		)
            RETURNING
			ROWID
		INTO
			ORIROWID;
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			ERRORS.SETERROR(CNURECORD_ALREADY_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(IRCGE_CONTRATO));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE INSRECORDS
	(
		IOTBGE_CONTRATO IN OUT NOCOPY TYTBGE_CONTRATO
	)
	IS
		BLUSEROWID BOOLEAN;
	BEGIN
		FILLRECORDOFTABLES(IOTBGE_CONTRATO,BLUSEROWID);
		FORALL N IN IOTBGE_CONTRATO.FIRST..IOTBGE_CONTRATO.LAST
			INSERT INTO GE_CONTRATO
			(
				ID_CONTRATO,
				DESCRIPCION,
				FECHA_INICIAL,
				FECHA_FINAL,
				VALOR_AUI_ADMIN,
				VALOR_AUI_UTIL,
				VALOR_AUI_IMPREV,
				TIPO_MONEDA_LIQUIDAR,
				VALOR_TOTAL_CONTRATO,
				VALOR_TOTAL_PAGADO,
				ID_TIPO_CONTRATO,
				ID_CONTRATISTA,
				DIAS_FACTURAR,
				ALERTA_PORCEN_VALOR,
				VALOR_ANTICIPO,
				ANTICIPO_AMORTIZADO,
				PORCEN_FONDO_GARANT,
				ACUMUL_FONDO_GARANT,
				FECHA_CIERRE,
				STATUS,
				PERCENT_NATION_STAMP,
				ACCOUNT_CLASSIF_ID,
				VALOR_LIQUIDADO,
				VALOR_ASIGNADO,
				VALOR_NO_LIQUIDADO
			)
			VALUES
			(
				RCRECOFTAB.ID_CONTRATO(N),
				RCRECOFTAB.DESCRIPCION(N),
				RCRECOFTAB.FECHA_INICIAL(N),
				RCRECOFTAB.FECHA_FINAL(N),
				RCRECOFTAB.VALOR_AUI_ADMIN(N),
				RCRECOFTAB.VALOR_AUI_UTIL(N),
				RCRECOFTAB.VALOR_AUI_IMPREV(N),
				RCRECOFTAB.TIPO_MONEDA_LIQUIDAR(N),
				RCRECOFTAB.VALOR_TOTAL_CONTRATO(N),
				RCRECOFTAB.VALOR_TOTAL_PAGADO(N),
				RCRECOFTAB.ID_TIPO_CONTRATO(N),
				RCRECOFTAB.ID_CONTRATISTA(N),
				RCRECOFTAB.DIAS_FACTURAR(N),
				RCRECOFTAB.ALERTA_PORCEN_VALOR(N),
				RCRECOFTAB.VALOR_ANTICIPO(N),
				RCRECOFTAB.ANTICIPO_AMORTIZADO(N),
				RCRECOFTAB.PORCEN_FONDO_GARANT(N),
				RCRECOFTAB.ACUMUL_FONDO_GARANT(N),
				RCRECOFTAB.FECHA_CIERRE(N),
				RCRECOFTAB.STATUS(N),
				RCRECOFTAB.PERCENT_NATION_STAMP(N),
				RCRECOFTAB.ACCOUNT_CLASSIF_ID(N),
				RCRECOFTAB.VALOR_LIQUIDADO(N),
				RCRECOFTAB.VALOR_ASIGNADO(N),
				RCRECOFTAB.VALOR_NO_LIQUIDADO(N)
			);
	EXCEPTION
		WHEN DUP_VAL_ON_INDEX THEN
			ERRORS.SETERROR(CNURECORD_ALREADY_EXIST,FSBGETMESSAGEDESCRIPTION);
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE DELRECORD
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INULOCK IN NUMBER DEFAULT 1
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;

		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;


		DELETE
		FROM GE_CONTRATO
		WHERE
       		ID_CONTRATO=INUID_CONTRATO;
            IF SQL%NOTFOUND THEN
                RAISE NO_DATA_FOUND;
            END IF;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
         RAISE EX.CONTROLLED_ERROR;
		WHEN EX.RECORD_HAVE_CHILDREN THEN
			ERRORS.SETERROR(CNURECORD_HAVE_CHILDREN,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE DELBYROWID
	(
		IRIROWID    IN ROWID,
		INULOCK IN NUMBER DEFAULT 1
	)
	IS
		RCRECORDNULL CURECORD%ROWTYPE;
		RCERROR  STYGE_CONTRATO;
	BEGIN
		IF INULOCK=1 THEN
			LOCKBYROWID(IRIROWID,RCDATA);
		END IF;


		DELETE
		FROM GE_CONTRATO
		WHERE
			ROWID = IRIROWID
		RETURNING
			ID_CONTRATO
		INTO
			RCERROR.ID_CONTRATO;
            IF SQL%NOTFOUND THEN
			 RAISE NO_DATA_FOUND;
		    END IF;
            IF RCDATA.ROWID=IRIROWID THEN
			 RCDATA := RCRECORDNULL;
		    END IF;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
            ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' rowid=['||IRIROWID||']');
            RAISE EX.CONTROLLED_ERROR;
		WHEN EX.RECORD_HAVE_CHILDREN THEN
            ERRORS.SETERROR(CNURECORD_HAVE_CHILDREN,FSBGETMESSAGEDESCRIPTION||' '||' rowid=['||IRIROWID||']');
            RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE DELRECORDS
	(
		IOTBGE_CONTRATO IN OUT NOCOPY TYTBGE_CONTRATO,
		INULOCK IN NUMBER DEFAULT 1
	)
	IS
		BLUSEROWID BOOLEAN;
		RCAUX STYGE_CONTRATO;
	BEGIN
		FILLRECORDOFTABLES(IOTBGE_CONTRATO, BLUSEROWID);
        IF ( BLUSEROWID ) THEN
			IF INULOCK = 1 THEN
				FOR N IN IOTBGE_CONTRATO.FIRST .. IOTBGE_CONTRATO.LAST LOOP
					LOCKBYROWID
					(
						RCRECOFTAB.ROW_ID(N),
						RCAUX
					);
				END LOOP;
			END IF;

			FORALL N IN IOTBGE_CONTRATO.FIRST .. IOTBGE_CONTRATO.LAST
				DELETE
				FROM GE_CONTRATO
				WHERE
					ROWID = RCRECOFTAB.ROW_ID(N);
		ELSE
			IF INULOCK = 1 THEN
				FOR N IN IOTBGE_CONTRATO.FIRST .. IOTBGE_CONTRATO.LAST LOOP
					LOCKBYPK
					(
						RCRECOFTAB.ID_CONTRATO(N),
						RCAUX
					);
				END LOOP;
			END IF;

			FORALL N IN IOTBGE_CONTRATO.FIRST .. IOTBGE_CONTRATO.LAST
				DELETE
				FROM GE_CONTRATO
				WHERE
		         	ID_CONTRATO = RCRECOFTAB.ID_CONTRATO(N);
		END IF;
	EXCEPTION
            WHEN EX.RECORD_HAVE_CHILDREN THEN
                  ERRORS.SETERROR(CNURECORD_HAVE_CHILDREN,FSBGETMESSAGEDESCRIPTION);
                  RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDRECORD
	(
		IRCGE_CONTRATO IN STYGE_CONTRATO,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		NUID_CONTRATO	GE_CONTRATO.ID_CONTRATO%TYPE;
	BEGIN
		IF IRCGE_CONTRATO.ROWID IS NOT NULL THEN
			IF INULOCK=1 THEN
				LOCKBYROWID(IRCGE_CONTRATO.ROWID,RCDATA);
			END IF;
			UPDATE GE_CONTRATO
			SET
				DESCRIPCION = IRCGE_CONTRATO.DESCRIPCION,
				FECHA_INICIAL = IRCGE_CONTRATO.FECHA_INICIAL,
				FECHA_FINAL = IRCGE_CONTRATO.FECHA_FINAL,
				VALOR_AUI_ADMIN = IRCGE_CONTRATO.VALOR_AUI_ADMIN,
				VALOR_AUI_UTIL = IRCGE_CONTRATO.VALOR_AUI_UTIL,
				VALOR_AUI_IMPREV = IRCGE_CONTRATO.VALOR_AUI_IMPREV,
				TIPO_MONEDA_LIQUIDAR = IRCGE_CONTRATO.TIPO_MONEDA_LIQUIDAR,
				VALOR_TOTAL_CONTRATO = IRCGE_CONTRATO.VALOR_TOTAL_CONTRATO,
				VALOR_TOTAL_PAGADO = IRCGE_CONTRATO.VALOR_TOTAL_PAGADO,
				ID_TIPO_CONTRATO = IRCGE_CONTRATO.ID_TIPO_CONTRATO,
				ID_CONTRATISTA = IRCGE_CONTRATO.ID_CONTRATISTA,
				DIAS_FACTURAR = IRCGE_CONTRATO.DIAS_FACTURAR,
				ALERTA_PORCEN_VALOR = IRCGE_CONTRATO.ALERTA_PORCEN_VALOR,
				VALOR_ANTICIPO = IRCGE_CONTRATO.VALOR_ANTICIPO,
				ANTICIPO_AMORTIZADO = IRCGE_CONTRATO.ANTICIPO_AMORTIZADO,
				PORCEN_FONDO_GARANT = IRCGE_CONTRATO.PORCEN_FONDO_GARANT,
				ACUMUL_FONDO_GARANT = IRCGE_CONTRATO.ACUMUL_FONDO_GARANT,
				FECHA_CIERRE = IRCGE_CONTRATO.FECHA_CIERRE,
				STATUS = IRCGE_CONTRATO.STATUS,
				PERCENT_NATION_STAMP = IRCGE_CONTRATO.PERCENT_NATION_STAMP,
				ACCOUNT_CLASSIF_ID = IRCGE_CONTRATO.ACCOUNT_CLASSIF_ID,
				VALOR_LIQUIDADO = IRCGE_CONTRATO.VALOR_LIQUIDADO,
				VALOR_ASIGNADO = IRCGE_CONTRATO.VALOR_ASIGNADO,
				VALOR_NO_LIQUIDADO = IRCGE_CONTRATO.VALOR_NO_LIQUIDADO
			WHERE
				ROWID = IRCGE_CONTRATO.ROWID
			RETURNING
				ID_CONTRATO
			INTO
				NUID_CONTRATO;
		ELSE
			IF INULOCK=1 THEN
				LOCKBYPK
				(
					IRCGE_CONTRATO.ID_CONTRATO,
					RCDATA
				);
			END IF;

			UPDATE GE_CONTRATO
			SET
				DESCRIPCION = IRCGE_CONTRATO.DESCRIPCION,
				FECHA_INICIAL = IRCGE_CONTRATO.FECHA_INICIAL,
				FECHA_FINAL = IRCGE_CONTRATO.FECHA_FINAL,
				VALOR_AUI_ADMIN = IRCGE_CONTRATO.VALOR_AUI_ADMIN,
				VALOR_AUI_UTIL = IRCGE_CONTRATO.VALOR_AUI_UTIL,
				VALOR_AUI_IMPREV = IRCGE_CONTRATO.VALOR_AUI_IMPREV,
				TIPO_MONEDA_LIQUIDAR = IRCGE_CONTRATO.TIPO_MONEDA_LIQUIDAR,
				VALOR_TOTAL_CONTRATO = IRCGE_CONTRATO.VALOR_TOTAL_CONTRATO,
				VALOR_TOTAL_PAGADO = IRCGE_CONTRATO.VALOR_TOTAL_PAGADO,
				ID_TIPO_CONTRATO = IRCGE_CONTRATO.ID_TIPO_CONTRATO,
				ID_CONTRATISTA = IRCGE_CONTRATO.ID_CONTRATISTA,
				DIAS_FACTURAR = IRCGE_CONTRATO.DIAS_FACTURAR,
				ALERTA_PORCEN_VALOR = IRCGE_CONTRATO.ALERTA_PORCEN_VALOR,
				VALOR_ANTICIPO = IRCGE_CONTRATO.VALOR_ANTICIPO,
				ANTICIPO_AMORTIZADO = IRCGE_CONTRATO.ANTICIPO_AMORTIZADO,
				PORCEN_FONDO_GARANT = IRCGE_CONTRATO.PORCEN_FONDO_GARANT,
				ACUMUL_FONDO_GARANT = IRCGE_CONTRATO.ACUMUL_FONDO_GARANT,
				FECHA_CIERRE = IRCGE_CONTRATO.FECHA_CIERRE,
				STATUS = IRCGE_CONTRATO.STATUS,
				PERCENT_NATION_STAMP = IRCGE_CONTRATO.PERCENT_NATION_STAMP,
				ACCOUNT_CLASSIF_ID = IRCGE_CONTRATO.ACCOUNT_CLASSIF_ID,
				VALOR_LIQUIDADO = IRCGE_CONTRATO.VALOR_LIQUIDADO,
				VALOR_ASIGNADO = IRCGE_CONTRATO.VALOR_ASIGNADO,
				VALOR_NO_LIQUIDADO = IRCGE_CONTRATO.VALOR_NO_LIQUIDADO
			WHERE
				ID_CONTRATO = IRCGE_CONTRATO.ID_CONTRATO
			RETURNING
				ID_CONTRATO
			INTO
				NUID_CONTRATO;
		END IF;
		IF
			NUID_CONTRATO IS NULL
		THEN
			RAISE NO_DATA_FOUND;
		END IF;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||FSBPRIMARYKEY(IRCGE_CONTRATO));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDRECORDS
	(
		IOTBGE_CONTRATO IN OUT NOCOPY TYTBGE_CONTRATO,
		INULOCK IN NUMBER DEFAULT 1
	)
	IS
		BLUSEROWID BOOLEAN;    
		RCAUX STYGE_CONTRATO;
	BEGIN
		FILLRECORDOFTABLES(IOTBGE_CONTRATO,BLUSEROWID);
		IF BLUSEROWID THEN
			IF INULOCK = 1 THEN
				FOR N IN IOTBGE_CONTRATO.FIRST .. IOTBGE_CONTRATO.LAST LOOP
					LOCKBYROWID
					(
						RCRECOFTAB.ROW_ID(N),
						RCAUX
					);
				END LOOP;
			END IF;

			FORALL N IN IOTBGE_CONTRATO.FIRST .. IOTBGE_CONTRATO.LAST
				UPDATE GE_CONTRATO
				SET
					DESCRIPCION = RCRECOFTAB.DESCRIPCION(N),
					FECHA_INICIAL = RCRECOFTAB.FECHA_INICIAL(N),
					FECHA_FINAL = RCRECOFTAB.FECHA_FINAL(N),
					VALOR_AUI_ADMIN = RCRECOFTAB.VALOR_AUI_ADMIN(N),
					VALOR_AUI_UTIL = RCRECOFTAB.VALOR_AUI_UTIL(N),
					VALOR_AUI_IMPREV = RCRECOFTAB.VALOR_AUI_IMPREV(N),
					TIPO_MONEDA_LIQUIDAR = RCRECOFTAB.TIPO_MONEDA_LIQUIDAR(N),
					VALOR_TOTAL_CONTRATO = RCRECOFTAB.VALOR_TOTAL_CONTRATO(N),
					VALOR_TOTAL_PAGADO = RCRECOFTAB.VALOR_TOTAL_PAGADO(N),
					ID_TIPO_CONTRATO = RCRECOFTAB.ID_TIPO_CONTRATO(N),
					ID_CONTRATISTA = RCRECOFTAB.ID_CONTRATISTA(N),
					DIAS_FACTURAR = RCRECOFTAB.DIAS_FACTURAR(N),
					ALERTA_PORCEN_VALOR = RCRECOFTAB.ALERTA_PORCEN_VALOR(N),
					VALOR_ANTICIPO = RCRECOFTAB.VALOR_ANTICIPO(N),
					ANTICIPO_AMORTIZADO = RCRECOFTAB.ANTICIPO_AMORTIZADO(N),
					PORCEN_FONDO_GARANT = RCRECOFTAB.PORCEN_FONDO_GARANT(N),
					ACUMUL_FONDO_GARANT = RCRECOFTAB.ACUMUL_FONDO_GARANT(N),
					FECHA_CIERRE = RCRECOFTAB.FECHA_CIERRE(N),
					STATUS = RCRECOFTAB.STATUS(N),
					PERCENT_NATION_STAMP = RCRECOFTAB.PERCENT_NATION_STAMP(N),
					ACCOUNT_CLASSIF_ID = RCRECOFTAB.ACCOUNT_CLASSIF_ID(N),
					VALOR_LIQUIDADO = RCRECOFTAB.VALOR_LIQUIDADO(N),
					VALOR_ASIGNADO = RCRECOFTAB.VALOR_ASIGNADO(N),
					VALOR_NO_LIQUIDADO = RCRECOFTAB.VALOR_NO_LIQUIDADO(N)
				WHERE
					ROWID =  RCRECOFTAB.ROW_ID(N);
		ELSE
			IF INULOCK = 1 THEN
				FOR N IN IOTBGE_CONTRATO.FIRST .. IOTBGE_CONTRATO.LAST LOOP
					LOCKBYPK
					(
						RCRECOFTAB.ID_CONTRATO(N),
						RCAUX
					);
				END LOOP;
			END IF;

			FORALL N IN IOTBGE_CONTRATO.FIRST .. IOTBGE_CONTRATO.LAST
				UPDATE GE_CONTRATO
				SET
					DESCRIPCION = RCRECOFTAB.DESCRIPCION(N),
					FECHA_INICIAL = RCRECOFTAB.FECHA_INICIAL(N),
					FECHA_FINAL = RCRECOFTAB.FECHA_FINAL(N),
					VALOR_AUI_ADMIN = RCRECOFTAB.VALOR_AUI_ADMIN(N),
					VALOR_AUI_UTIL = RCRECOFTAB.VALOR_AUI_UTIL(N),
					VALOR_AUI_IMPREV = RCRECOFTAB.VALOR_AUI_IMPREV(N),
					TIPO_MONEDA_LIQUIDAR = RCRECOFTAB.TIPO_MONEDA_LIQUIDAR(N),
					VALOR_TOTAL_CONTRATO = RCRECOFTAB.VALOR_TOTAL_CONTRATO(N),
					VALOR_TOTAL_PAGADO = RCRECOFTAB.VALOR_TOTAL_PAGADO(N),
					ID_TIPO_CONTRATO = RCRECOFTAB.ID_TIPO_CONTRATO(N),
					ID_CONTRATISTA = RCRECOFTAB.ID_CONTRATISTA(N),
					DIAS_FACTURAR = RCRECOFTAB.DIAS_FACTURAR(N),
					ALERTA_PORCEN_VALOR = RCRECOFTAB.ALERTA_PORCEN_VALOR(N),
					VALOR_ANTICIPO = RCRECOFTAB.VALOR_ANTICIPO(N),
					ANTICIPO_AMORTIZADO = RCRECOFTAB.ANTICIPO_AMORTIZADO(N),
					PORCEN_FONDO_GARANT = RCRECOFTAB.PORCEN_FONDO_GARANT(N),
					ACUMUL_FONDO_GARANT = RCRECOFTAB.ACUMUL_FONDO_GARANT(N),
					FECHA_CIERRE = RCRECOFTAB.FECHA_CIERRE(N),
					STATUS = RCRECOFTAB.STATUS(N),
					PERCENT_NATION_STAMP = RCRECOFTAB.PERCENT_NATION_STAMP(N),
					ACCOUNT_CLASSIF_ID = RCRECOFTAB.ACCOUNT_CLASSIF_ID(N),
					VALOR_LIQUIDADO = RCRECOFTAB.VALOR_LIQUIDADO(N),
					VALOR_ASIGNADO = RCRECOFTAB.VALOR_ASIGNADO(N),
					VALOR_NO_LIQUIDADO = RCRECOFTAB.VALOR_NO_LIQUIDADO(N)
				WHERE
					ID_CONTRATO = RCRECOFTAB.ID_CONTRATO(N)
;
		END IF;
	END;
	PROCEDURE UPDDESCRIPCION
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		ISBDESCRIPCION$ IN GE_CONTRATO.DESCRIPCION%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			DESCRIPCION = ISBDESCRIPCION$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.DESCRIPCION:= ISBDESCRIPCION$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDFECHA_INICIAL
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		IDTFECHA_INICIAL$ IN GE_CONTRATO.FECHA_INICIAL%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			FECHA_INICIAL = IDTFECHA_INICIAL$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.FECHA_INICIAL:= IDTFECHA_INICIAL$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDFECHA_FINAL
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		IDTFECHA_FINAL$ IN GE_CONTRATO.FECHA_FINAL%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			FECHA_FINAL = IDTFECHA_FINAL$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.FECHA_FINAL:= IDTFECHA_FINAL$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_AUI_ADMIN
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_AUI_ADMIN$ IN GE_CONTRATO.VALOR_AUI_ADMIN%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_AUI_ADMIN = INUVALOR_AUI_ADMIN$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_AUI_ADMIN:= INUVALOR_AUI_ADMIN$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_AUI_UTIL
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_AUI_UTIL$ IN GE_CONTRATO.VALOR_AUI_UTIL%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_AUI_UTIL = INUVALOR_AUI_UTIL$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_AUI_UTIL:= INUVALOR_AUI_UTIL$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_AUI_IMPREV
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_AUI_IMPREV$ IN GE_CONTRATO.VALOR_AUI_IMPREV%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_AUI_IMPREV = INUVALOR_AUI_IMPREV$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_AUI_IMPREV:= INUVALOR_AUI_IMPREV$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDTIPO_MONEDA_LIQUIDAR
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		ISBTIPO_MONEDA_LIQUIDAR$ IN GE_CONTRATO.TIPO_MONEDA_LIQUIDAR%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			TIPO_MONEDA_LIQUIDAR = ISBTIPO_MONEDA_LIQUIDAR$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.TIPO_MONEDA_LIQUIDAR:= ISBTIPO_MONEDA_LIQUIDAR$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_TOTAL_CONTRATO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_TOTAL_CONTRATO$ IN GE_CONTRATO.VALOR_TOTAL_CONTRATO%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_TOTAL_CONTRATO = INUVALOR_TOTAL_CONTRATO$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_TOTAL_CONTRATO:= INUVALOR_TOTAL_CONTRATO$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_TOTAL_PAGADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_TOTAL_PAGADO$ IN GE_CONTRATO.VALOR_TOTAL_PAGADO%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_TOTAL_PAGADO = INUVALOR_TOTAL_PAGADO$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_TOTAL_PAGADO:= INUVALOR_TOTAL_PAGADO$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDID_TIPO_CONTRATO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUID_TIPO_CONTRATO$ IN GE_CONTRATO.ID_TIPO_CONTRATO%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			ID_TIPO_CONTRATO = INUID_TIPO_CONTRATO$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.ID_TIPO_CONTRATO:= INUID_TIPO_CONTRATO$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDID_CONTRATISTA
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUID_CONTRATISTA$ IN GE_CONTRATO.ID_CONTRATISTA%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			ID_CONTRATISTA = INUID_CONTRATISTA$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.ID_CONTRATISTA:= INUID_CONTRATISTA$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDDIAS_FACTURAR
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUDIAS_FACTURAR$ IN GE_CONTRATO.DIAS_FACTURAR%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			DIAS_FACTURAR = INUDIAS_FACTURAR$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.DIAS_FACTURAR:= INUDIAS_FACTURAR$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDALERTA_PORCEN_VALOR
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUALERTA_PORCEN_VALOR$ IN GE_CONTRATO.ALERTA_PORCEN_VALOR%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			ALERTA_PORCEN_VALOR = INUALERTA_PORCEN_VALOR$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.ALERTA_PORCEN_VALOR:= INUALERTA_PORCEN_VALOR$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_ANTICIPO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_ANTICIPO$ IN GE_CONTRATO.VALOR_ANTICIPO%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_ANTICIPO = INUVALOR_ANTICIPO$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_ANTICIPO:= INUVALOR_ANTICIPO$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDANTICIPO_AMORTIZADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUANTICIPO_AMORTIZADO$ IN GE_CONTRATO.ANTICIPO_AMORTIZADO%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			ANTICIPO_AMORTIZADO = INUANTICIPO_AMORTIZADO$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.ANTICIPO_AMORTIZADO:= INUANTICIPO_AMORTIZADO$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDPORCEN_FONDO_GARANT
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUPORCEN_FONDO_GARANT$ IN GE_CONTRATO.PORCEN_FONDO_GARANT%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			PORCEN_FONDO_GARANT = INUPORCEN_FONDO_GARANT$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.PORCEN_FONDO_GARANT:= INUPORCEN_FONDO_GARANT$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDACUMUL_FONDO_GARANT
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUACUMUL_FONDO_GARANT$ IN GE_CONTRATO.ACUMUL_FONDO_GARANT%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			ACUMUL_FONDO_GARANT = INUACUMUL_FONDO_GARANT$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.ACUMUL_FONDO_GARANT:= INUACUMUL_FONDO_GARANT$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDFECHA_CIERRE
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		IDTFECHA_CIERRE$ IN GE_CONTRATO.FECHA_CIERRE%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			FECHA_CIERRE = IDTFECHA_CIERRE$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.FECHA_CIERRE:= IDTFECHA_CIERRE$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDSTATUS
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		ISBSTATUS$ IN GE_CONTRATO.STATUS%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			STATUS = ISBSTATUS$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.STATUS:= ISBSTATUS$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDPERCENT_NATION_STAMP
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUPERCENT_NATION_STAMP$ IN GE_CONTRATO.PERCENT_NATION_STAMP%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			PERCENT_NATION_STAMP = INUPERCENT_NATION_STAMP$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.PERCENT_NATION_STAMP:= INUPERCENT_NATION_STAMP$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDACCOUNT_CLASSIF_ID
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUACCOUNT_CLASSIF_ID$ IN GE_CONTRATO.ACCOUNT_CLASSIF_ID%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			ACCOUNT_CLASSIF_ID = INUACCOUNT_CLASSIF_ID$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.ACCOUNT_CLASSIF_ID:= INUACCOUNT_CLASSIF_ID$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_LIQUIDADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_LIQUIDADO$ IN GE_CONTRATO.VALOR_LIQUIDADO%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_LIQUIDADO = INUVALOR_LIQUIDADO$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_LIQUIDADO:= INUVALOR_LIQUIDADO$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_ASIGNADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_ASIGNADO$ IN GE_CONTRATO.VALOR_ASIGNADO%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_ASIGNADO = INUVALOR_ASIGNADO$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_ASIGNADO:= INUVALOR_ASIGNADO$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	PROCEDURE UPDVALOR_NO_LIQUIDADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INUVALOR_NO_LIQUIDADO$ IN GE_CONTRATO.VALOR_NO_LIQUIDADO%TYPE,
		INULOCK IN NUMBER DEFAULT 0
	)
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN
		RCERROR.ID_CONTRATO := INUID_CONTRATO;
		IF INULOCK=1 THEN
			LOCKBYPK
			(
				INUID_CONTRATO,
				RCDATA
			);
		END IF;

		UPDATE GE_CONTRATO
		SET
			VALOR_NO_LIQUIDADO = INUVALOR_NO_LIQUIDADO$
		WHERE
			ID_CONTRATO = INUID_CONTRATO;

		IF SQL%NOTFOUND THEN
			RAISE NO_DATA_FOUND;
		END IF;

		RCDATA.VALOR_NO_LIQUIDADO:= INUVALOR_NO_LIQUIDADO$;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
			RAISE EX.CONTROLLED_ERROR;
	END;
	FUNCTION FNUGETID_CONTRATO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.ID_CONTRATO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.ID_CONTRATO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.ID_CONTRATO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FSBGETDESCRIPCION
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.DESCRIPCION%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.DESCRIPCION);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.DESCRIPCION);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FDTGETFECHA_INICIAL
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.FECHA_INICIAL%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.FECHA_INICIAL);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.FECHA_INICIAL);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FDTGETFECHA_FINAL
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.FECHA_FINAL%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.FECHA_FINAL);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.FECHA_FINAL);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_AUI_ADMIN
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_AUI_ADMIN%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_AUI_ADMIN);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_AUI_ADMIN);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_AUI_UTIL
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_AUI_UTIL%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_AUI_UTIL);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_AUI_UTIL);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_AUI_IMPREV
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_AUI_IMPREV%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_AUI_IMPREV);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_AUI_IMPREV);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FSBGETTIPO_MONEDA_LIQUIDAR
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.TIPO_MONEDA_LIQUIDAR%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.TIPO_MONEDA_LIQUIDAR);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.TIPO_MONEDA_LIQUIDAR);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_TOTAL_CONTRATO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_TOTAL_CONTRATO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_TOTAL_CONTRATO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_TOTAL_CONTRATO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_TOTAL_PAGADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_TOTAL_PAGADO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_TOTAL_PAGADO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_TOTAL_PAGADO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETID_TIPO_CONTRATO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.ID_TIPO_CONTRATO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.ID_TIPO_CONTRATO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.ID_TIPO_CONTRATO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETID_CONTRATISTA
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.ID_CONTRATISTA%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.ID_CONTRATISTA);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.ID_CONTRATISTA);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETDIAS_FACTURAR
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.DIAS_FACTURAR%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.DIAS_FACTURAR);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.DIAS_FACTURAR);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETALERTA_PORCEN_VALOR
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.ALERTA_PORCEN_VALOR%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.ALERTA_PORCEN_VALOR);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.ALERTA_PORCEN_VALOR);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_ANTICIPO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_ANTICIPO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_ANTICIPO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_ANTICIPO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETANTICIPO_AMORTIZADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.ANTICIPO_AMORTIZADO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.ANTICIPO_AMORTIZADO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.ANTICIPO_AMORTIZADO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETPORCEN_FONDO_GARANT
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.PORCEN_FONDO_GARANT%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.PORCEN_FONDO_GARANT);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.PORCEN_FONDO_GARANT);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETACUMUL_FONDO_GARANT
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.ACUMUL_FONDO_GARANT%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.ACUMUL_FONDO_GARANT);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.ACUMUL_FONDO_GARANT);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FDTGETFECHA_CIERRE
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.FECHA_CIERRE%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.FECHA_CIERRE);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.FECHA_CIERRE);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FSBGETSTATUS
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.STATUS%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.STATUS);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.STATUS);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETPERCENT_NATION_STAMP
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.PERCENT_NATION_STAMP%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.PERCENT_NATION_STAMP);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.PERCENT_NATION_STAMP);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETACCOUNT_CLASSIF_ID
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.ACCOUNT_CLASSIF_ID%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.ACCOUNT_CLASSIF_ID);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.ACCOUNT_CLASSIF_ID);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_LIQUIDADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_LIQUIDADO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_LIQUIDADO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_LIQUIDADO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_ASIGNADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_ASIGNADO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_ASIGNADO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_ASIGNADO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	FUNCTION FNUGETVALOR_NO_LIQUIDADO
	(
		INUID_CONTRATO IN GE_CONTRATO.ID_CONTRATO%TYPE,
		INURAISEERROR IN NUMBER DEFAULT 1
	)
	RETURN GE_CONTRATO.VALOR_NO_LIQUIDADO%TYPE
	IS
		RCERROR STYGE_CONTRATO;
	BEGIN

		RCERROR.ID_CONTRATO := INUID_CONTRATO;

        
		IF  BLDAO_USE_CACHE AND FBLALREADYLOADED(INUID_CONTRATO) THEN
			 RETURN(RCDATA.VALOR_NO_LIQUIDADO);
		END IF;
		LOAD(INUID_CONTRATO);
		RETURN(RCDATA.VALOR_NO_LIQUIDADO);
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			IF INURAISEERROR = 1 THEN
				ERRORS.SETERROR(CNURECORD_NOT_EXIST,FSBGETMESSAGEDESCRIPTION||' '||FSBPRIMARYKEY(RCERROR));
				RAISE EX.CONTROLLED_ERROR;
			ELSE
				RETURN NULL;
			END IF;
	END;
	PROCEDURE SETUSECACHE
	(
		IBLUSECACHE    IN  BOOLEAN
	) IS
	BEGIN
	    BLDAO_USE_CACHE := IBLUSECACHE;
	END;

BEGIN
    GETDAO_USE_CACHE;
END DAGE_CONTRATO;