PACKAGE BODY GI_BSFrameWorkMasterDetail
IS
    
    CSBVERSION   CONSTANT VARCHAR2(20) := 'SAO197298';

    

	
    
    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;
	
	PROCEDURE GETAPPLICATIONPROPERTIES
    (
        INUEXECUTABLEID     IN NUMBER,
        OSBEXECMNENONIC     OUT VARCHAR2,
        OSBEXECDESCRIPTION  OUT VARCHAR2,
        ONUMODULEID         OUT NUMBER,
        OSBMODULEDESC       OUT VARCHAR2,
        ONUCONFIGTYPEID     OUT NUMBER,
        OSBPATHFILEHELP     OUT VARCHAR2,
        OSBDIRECTEXECUTION  OUT VARCHAR2,
        ONUERRORCODE        OUT NUMBER,
        OSBERRORMESSAGE     OUT VARCHAR2
    )
    IS
		
	BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

		
        GI_BOFRAMEWORKMASTERDETAIL.GETAPPLICATIONPROPERTIES
        (
            INUEXECUTABLEID,
            OSBEXECMNENONIC,
            OSBEXECDESCRIPTION,
            ONUMODULEID,
            OSBMODULEDESC,
            ONUCONFIGTYPEID,
            OSBPATHFILEHELP,
            OSBDIRECTEXECUTION
        );

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

	PROCEDURE UPDAPPLICATIONPROPERTIES
    (
        IONUEXECUTABLEID    IN OUT NUMBER,
        ISBEXECMNENONIC     IN VARCHAR2,
        ISBEXECDESCRIPTION  IN VARCHAR2,
        ISBMODULEID         IN VARCHAR2,
        INUCONFIGTYPEID     IN NUMBER,
        ONUERRORCODE        OUT NUMBER,
        OSBERRORMESSAGE     OUT VARCHAR2
    )
	IS
		
	BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;
        
		
        GI_BOFRAMEWORKMASTERDETAIL.UPDAPPLICATIONPROPERTIES
        (
            IONUEXECUTABLEID,
            ISBEXECMNENONIC,
            ISBEXECDESCRIPTION,
            ISBMODULEID,
            INUCONFIGTYPEID
        );

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE CHECKAPPLICATIONMNEMONIC
    (
        ISBEXECMNEMONIC IN  VARCHAR2,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.CHECKAPPLICATIONMNEMONIC(ISBEXECMNEMONIC);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    PROCEDURE DELAPPLICATION
    (
        INUEXECUTABLEID IN NUMBER,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.DELAPPLICATION(INUEXECUTABLEID);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

	PROCEDURE INSENTITYPROPERTIES
    (
        INUEXECUTABLEID     IN NUMBER,
        INUENTITYID         IN NUMBER,
        INUPARENTENTITYID   IN NUMBER,
        ISBDISPLAYTYPE      IN VARCHAR2,
        INULEVEL            IN NUMBER,
        INUPOSITIONINLEVEL  IN NUMBER,
        IOBJICON_           IN BLOB,
        ISBDEFAULT_WHERE	IN VARCHAR2,
        ISBJOIN_CONDITION	IN VARCHAR2,
        ISBREAD_ONLY        IN VARCHAR2,
        ISBALLOW_INSERT	    IN VARCHAR2,
        ISBALLOW_DELETE	    IN VARCHAR2,
        INUFUNCTIONALSET    IN NUMBER,
        ONUERRORCODE        OUT NUMBER,
        OSBERRORMESSAGE     OUT VARCHAR2
    )
	IS
		
	BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;
        
        GI_BOFRAMEWORKMASTERDETAIL.INSENTITYPROPERTIES
        (
            INUEXECUTABLEID,
            INUENTITYID,
            INUPARENTENTITYID,
            ISBDISPLAYTYPE,
            INULEVEL,
            INUPOSITIONINLEVEL,
            IOBJICON_,
            ISBDEFAULT_WHERE,
            ISBJOIN_CONDITION,
            ISBREAD_ONLY,
            ISBALLOW_INSERT,
            ISBALLOW_DELETE,
            INUFUNCTIONALSET
        );
        
    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE DELENTITIES
    (
        INUEXECUTABLEID IN NUMBER,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.DELENTITIES(INUEXECUTABLEID);
        
    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    PROCEDURE GETENTITIES
    (
        INUEXECUTABLEID IN NUMBER,
        ORFENTITIES     OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;
        
        GI_BOFRAMEWORKMASTERDETAIL.GETENTITIES(INUEXECUTABLEID,ORFENTITIES);
        
    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE GETENTITIESTOSHOW
    (
        INUEXECUTABLEID IN NUMBER,
        ORFENTITIES     OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.GETENTITIESTOSHOW(INUEXECUTABLEID,ORFENTITIES);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE GETATTRIBUTESTOSHOW
    (
        INUEXECUTABLEID IN NUMBER,
        INUENTITYID     IN NUMBER,
        ORFATTRIBUTES   OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.GETATTRIBUTESTOSHOW(INUEXECUTABLEID,INUENTITYID,ORFATTRIBUTES);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    
    PROCEDURE GETENTITY
    (
        INUENTITYID     IN NUMBER,
        ORFENTITIES     OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.GETENTITY(INUENTITYID,ORFENTITIES);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE CHECKDEFAULTWHERE
    (
        INUENTITYID      IN NUMBER,
        ISBDEFAULTWHERE  IN VARCHAR2,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;
        
        GI_BOFRAMEWORKMASTERDETAIL.CHECKDEFAULTWHERE(INUENTITYID,ISBDEFAULTWHERE);
        
    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    PROCEDURE CHECKJOINCONDITION
    (
        INUENTITYID       IN NUMBER,
        INUPARENTENTITYID IN NUMBER,
        ISBJOINCONDITION  IN VARCHAR2,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.CHECKJOINCONDITION(INUENTITYID,INUPARENTENTITYID,ISBJOINCONDITION);
        
    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE CHECKLISTOFVALUES
    (
        ISBLISTOFVALUES  IN VARCHAR2,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.CHECKLISTOFVALUES(ISBLISTOFVALUES);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE CHECKENTITYEXIST
    (
        ISBENTITYNAME        IN VARCHAR2,
        ISBENTITYDISPLAYNAME IN VARCHAR2,
        ONUERRORCODE         OUT NUMBER,
        OSBERRORMESSAGE      OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.CHECKENTITYEXIST(ISBENTITYNAME,ISBENTITYDISPLAYNAME);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;


    PROCEDURE GETATTRIBUTE
    (
        INUEXECUTABLEID IN NUMBER,
        INUENTITYID     IN NUMBER,
        INUATTRIBUTEID  IN NUMBER,
        ORFATTRIBUTES   OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.GETATTRIBUTE(INUEXECUTABLEID,INUENTITYID,INUATTRIBUTEID,ORFATTRIBUTES);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE GETENTITYATTRIBUTES
    (
        INUENTITYID     IN NUMBER,
        ORFATTRIBUTES   OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.GETENTITYATTRIBUTES(INUENTITYID,ORFATTRIBUTES);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    
    PROCEDURE DELATTRIBUTES
    (
        INUEXECUTABLEID IN NUMBER,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.DELATTRIBUTES(INUEXECUTABLEID);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

	PROCEDURE INSATTRIBUTEPROPERTIES
    (
        INUEXECUTABLEID         IN NUMBER,
        INUENTITYID             IN NUMBER,
        INUENTITYATTRIBUTEID    IN NUMBER,
        ISBLOV                  IN VARCHAR2,
        ISBLOVTYPE              IN VARCHAR2,
        ISBLOVCODE              IN VARCHAR2,
        ISBLOVDESC              IN VARCHAR2,
        ISBLOVATTRS             IN VARCHAR2,
        ISBLOVFROM              IN VARCHAR2,
        ISBLOVWHERE             IN VARCHAR2,
        ISBLOVORDER             IN VARCHAR2,
        ISBLOVPARENTATTR        IN VARCHAR2,
        ISBALLOWUPDATE          IN VARCHAR2,
        ISBUSERULEEDITOR        IN VARCHAR2,
        INUPOSITION             IN NUMBER,
        ISBVISIBLE	            IN VARCHAR2,
        INUENTITYCONFIGTYPE     IN NUMBER,
        INUATTRIBCONFIGTYPE     IN NUMBER,
        ISBSTYLECASE            IN VARCHAR2,
        ISBSELECTIONORDER       IN VARCHAR2,
        INUSELORDERSEQUENCE     IN NUMBER,
        ONUERRORCODE            OUT NUMBER,
        OSBERRORMESSAGE         OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.INSATTRIBUTEPROPERTIES
        (
            INUEXECUTABLEID,
            INUENTITYID,
            INUENTITYATTRIBUTEID,
            ISBLOV,
            ISBLOVTYPE,
            ISBLOVCODE,
            ISBLOVDESC,
            ISBLOVATTRS,
            ISBLOVFROM,
            ISBLOVWHERE,
            ISBLOVORDER,
            ISBLOVPARENTATTR,
            ISBALLOWUPDATE,
            ISBUSERULEEDITOR,
            INUPOSITION,
            ISBVISIBLE,
            INUENTITYCONFIGTYPE,
            INUATTRIBCONFIGTYPE,
            ISBSTYLECASE,
            ISBSELECTIONORDER,
            INUSELORDERSEQUENCE
        );

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE GETATTRIBALLOWEDVALUES
    (
        INUATTRIBUTEID  IN NUMBER,
        ORFATTRIBUTES   OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
    IS
    BEGIN

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

        GI_BOFRAMEWORKMASTERDETAIL.GETATTRIBALLOWEDVALUES(INUATTRIBUTEID,ORFATTRIBUTES);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;



    PROCEDURE SETCONFIGEXPRESSION
    (
        INUEXECUTABLEID IN GI_ENTITY_DISP_DATA.EXECUTABLE_ID%TYPE,
        ORFDATA          OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
    IS

    BEGIN

		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;
		
		GI_BOFRAMEWORKMASTERDETAIL.SETCONFIGEXPRESSION(INUEXECUTABLEID,ORFDATA);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            DBMS_OUTPUT.PUT_LINE('Error 1');
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
            DBMS_OUTPUT.PUT_LINE(ONUERRORCODE || ' - ' || OSBERRORMESSAGE);
    END;

    PROCEDURE GETCONFIGEXPRESSION
    (
        INUENTITYATTRIB   IN GE_ENTITY_ATTRIBUTES.ENTITY_ATTRIBUTE_ID%TYPE,
        OSBSTATEMENT     OUT VARCHAR2,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
	IS

	BEGIN

		
		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;

		GI_BOFRAMEWORKMASTERDETAIL.GETCONFIGEXPRESSION(INUENTITYATTRIB,OSBSTATEMENT);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    PROCEDURE GETHEAVYLIST
    (
        INUENTITYATTRIB   IN GE_ENTITY_ATTRIBUTES.ENTITY_ATTRIBUTE_ID%TYPE,
        ISBLOVSTATEMENT   IN GI_ATTRIB_DISP_DATA.LIST_OF_VALUES%TYPE,
        ORFDATA          OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
	IS

	BEGIN

		
		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;

		GI_BOFRAMEWORKMASTERDETAIL.GETHEAVYLIST(INUENTITYATTRIB,ISBLOVSTATEMENT,ORFDATA);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    PROCEDURE GETCOMPOSELOV
    (
        INUENTITYATTRIB   IN GE_ENTITY_ATTRIBUTES.ENTITY_ATTRIBUTE_ID%TYPE,
        ISBLOVSTATEMENT   IN GI_ATTRIB_DISP_DATA.LIST_OF_VALUES%TYPE,
        ORFDATA          OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
	IS

	BEGIN

		
		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;
		
		GI_BOFRAMEWORKMASTERDETAIL.GETCOMPOSELOV(INUENTITYATTRIB,ISBLOVSTATEMENT,ORFDATA);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    PROCEDURE GETORDERBYCOLUMNS
    (
        INUEXECUTABLEID  IN NUMBER,
        INUENTITYID      IN NUMBER,
        ORFDATA          OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
	IS
	BEGIN

		
		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;

		GI_BOFRAMEWORKMASTERDETAIL.GETORDERBYCOLUMNS(INUEXECUTABLEID,INUENTITYID,ORFDATA);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE GETORDERBY
    (
        INUEXECUTABLEID  IN NUMBER,
        INUENTITYID      IN NUMBER,
        OSBORDERBY       OUT VARCHAR2,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
	IS
	BEGIN

		
		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;

		GI_BOFRAMEWORKMASTERDETAIL.GETORDERBY(INUEXECUTABLEID,INUENTITYID,OSBORDERBY);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    PROCEDURE GETMODULES
    (
        ORFDATA OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
	IS
	BEGIN

		
		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;

		GI_BOFRAMEWORKMASTERDETAIL.GETMODULES(ORFDATA);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    PROCEDURE GETCONFIGTYPES
    (
        INUMODULEID IN  NUMBER,
        ORFDATA     OUT CONSTANTS.TYREFCURSOR,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
	IS
	BEGIN

		
		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;

		GI_BOFRAMEWORKMASTERDETAIL.GETCONFIGTYPES(INUMODULEID,ORFDATA);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;

    PROCEDURE GETEXECUTABLEBYNAME
    (
        ISBEXECUTABLENAME   IN VARCHAR2,
        ONUEXECUTABLEID     OUT NUMBER,
        ONUERRORCODE     OUT NUMBER,
        OSBERRORMESSAGE  OUT VARCHAR2
    )
	IS
	BEGIN

		
		ONUERRORCODE := 0;
		OSBERRORMESSAGE := NULL;

		GI_BOFRAMEWORKMASTERDETAIL.GETEXECUTABLEBYNAME(ISBEXECUTABLENAME,ONUEXECUTABLEID);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
    
    



















    PROCEDURE GETRESULTFROMQUERY
    (
        ISBSTATEMENT        IN      GI_ATTRIB_DISP_DATA.LIST_OF_VALUES%TYPE,
        ORFDATA             OUT     CONSTANTS.TYREFCURSOR,
        ONUERRORCODE        OUT     NUMBER,
        OSBERRORMESSAGE     OUT     VARCHAR2
    )
	IS
	BEGIN
        UT_TRACE.TRACE('BEGIN GI_BSFrameWorkMasterDetail.GetResultFromQuery', 1);
        UT_TRACE.TRACE('PARAM isbStatement: ' || ISBSTATEMENT, 2);

        GI_BOFRAMEWORKMASTERDETAIL.GETRESULTFROMQUERY
        (
            ISBSTATEMENT    => ISBSTATEMENT,
            ORFDATA         => ORFDATA
        );

        UT_TRACE.TRACE('END GI_BSFrameWorkMasterDetail.GetResultFromQuery', 1);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;


END GI_BSFRAMEWORKMASTERDETAIL;