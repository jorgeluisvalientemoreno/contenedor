
CREATE OR REPLACE PACKAGE OR_BOEXTERNALSERVICESACTIVITY IS
   FUNCTION FSBVERSION
    RETURN VARCHAR2;
   PROCEDURE CREATEACTIVITYOFELEMENT( INUACTIVITYID IN GE_ITEMS.ITEMS_ID%TYPE, INUOPERASECTOFACTI IN OR_OPERATING_SECTOR.OPERATING_SECTOR_ID%TYPE, INUPARSERADRESSID IN AB_ADDRESS.ADDRESS_ID%TYPE, IDTEXECDATE IN OR_ORDER.EXEC_ESTIMATE_DATE%TYPE, ISBCOMMENT IN OR_ORDER_ACTIVITY.COMMENT_%TYPE, IONUORDERID IN OUT OR_ORDER.ORDER_ID%TYPE, ONUORDERACTIVITYID OUT OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE );
   PROCEDURE VALIDATEINSERTDATAELEMENT( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUOPERATINGSECTORID IN OR_OPERATING_SECTOR.OPERATING_SECTOR_ID%TYPE );
   PROCEDURE VALIDATEDATAACTIVIPOWERLAMP( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUORDERACTIVITY IN OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE, INUIDELEMENT IN OR_ORDER_ITEMS.ELEMENT_ID%TYPE );
   PROCEDURE ADDELEMENTPOWERLAMPTOACTIVITY( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUORDERACTIVITY IN OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE, INUELEMENTID IN OR_ORDER_ITEMS.ELEMENT_ID%TYPE, ISBUSE IN GE_ITEMS.USE_%TYPE );
   PROCEDURE ADDITEMSTOORDER( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUITEMID IN GE_ITEMS.ITEMS_ID%TYPE, INULEGALITEMAMOUNT IN OR_ORDER_ITEMS.LEGAL_ITEM_AMOUNT%TYPE );
   PROCEDURE VALINPUTDATAITEM( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUITEMID IN GE_ITEMS.ITEMS_ID%TYPE, INULEGALITEMAMOUNT IN OR_ORDER_ITEMS.LEGAL_ITEM_AMOUNT%TYPE );
   PROCEDURE DELELEMENTPOWERLAMPTOACTIVITY( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUORDERACTIVITY IN OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE, INUELEMENTID IN OR_ORDER_ITEMS.ELEMENT_ID%TYPE, ISBUSE IN GE_ITEMS.USE_%TYPE );
   PROCEDURE CREATEACTIVIT( INUACTIVITY IN GE_ITEMS.ITEMS_ID%TYPE, INUADDRESSID IN AB_ADDRESS.ADDRESS_ID%TYPE, IDTEXECDATE IN OR_ORDER.EXEC_ESTIMATE_DATE%TYPE, ISBCOMMENT IN OR_ORDER_ACTIVITY.COMMENT_%TYPE, INUREFVALUE IN OR_ORDER_ACTIVITY.VALUE_REFERENCE%TYPE, IONUORDERID IN OUT OR_ORDER.ORDER_ID%TYPE );
END OR_BOEXTERNALSERVICESACTIVITY;
/


CREATE OR REPLACE PACKAGE BODY OR_BOEXTERNALSERVICESACTIVITY IS
   CSBVERSION CONSTANT VARCHAR2( 20 ) := 'SAO187085';
   CNUERR_2742 CONSTANT NUMBER( 4 ) := 2742;
   CNUERR_2743 CONSTANT NUMBER( 4 ) := 2743;
   CNUERR_111121 CONSTANT NUMBER( 6 ) := 111121;
   CNUERR249 CONSTANT NUMBER( 3 ) := 249;
   CNUERR251 CONSTANT NUMBER( 3 ) := 251;
   CNUPOWER_LAMP CONSTANT NUMBER( 10 ) := 687;
   CNUOPERCLASSIFTECHAREA CONSTANT NUMBER( 10 ) := 2;
   CNUERRTECHAREA CONSTANT NUMBER( 10 ) := 3925;
   CNUPROCESS_EXTERNAL GE_PROCESS.PROCESS_ID%TYPE := 10;
   CNUERR_114715 CONSTANT NUMBER( 6 ) := 114715;
   CNUERR_114717 CONSTANT NUMBER( 6 ) := 114717;
   CNUERR_114719 CONSTANT NUMBER( 6 ) := 114719;
   CNUERR_114720 CONSTANT NUMBER( 6 ) := 114720;
   CNUERR_119343 CONSTANT NUMBER( 6 ) := 119343;
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE ACTIVITIESEXECUTE( INUORDERID IN OR_ORDER.ORDER_ID%TYPE )
    IS
      NUIDX NUMBER;
      TBORDERACTIVITIES OR_BCORDERACTIVITIES.TYTBORDERACTIVITIES;
      CURFGETDATA CONSTANTS.TYREFCURSOR;
    BEGIN
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.ActivitiesExecute] FIN', 2 );
      OR_BCORDERACTIVITIES.GETACTIVITIESBYORDER( INUORDERID, TBORDERACTIVITIES );
      NUIDX := TBORDERACTIVITIES.FIRST;
      WHILE NUIDX IS NOT NULL
       LOOP
         UT_TRACE.TRACE( 'OrderItemId:[' || TBORDERACTIVITIES( NUIDX ).NUORDERITEMID || ']', 2 );
         OR_BOLEGALIZEACTIVITIES.SETATTRIBSACTIVITY( TBORDERACTIVITIES( NUIDX ).NUORDERITEMID, TBORDERACTIVITIES( NUIDX ).NUACTIVITYID, TBORDERACTIVITIES( NUIDX ).NUORDERACTIVITY, CURFGETDATA );
         DAOR_ORDER_ITEMS.UPDLEGAL_ITEM_AMOUNT( TBORDERACTIVITIES( NUIDX ).NUORDERITEMID, GE_BOCONSTANTS.CNUTRUE );
         NUIDX := TBORDERACTIVITIES.NEXT( NUIDX );
      END LOOP;
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.ActivitiesExecute] FIN', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END ACTIVITIESEXECUTE;
   PROCEDURE VALIDATEINSERTDATAELEMENT( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUOPERATINGSECTORID IN OR_OPERATING_SECTOR.OPERATING_SECTOR_ID%TYPE )
    IS
      NUOPERA_SEC_CLASSIF_ID OR_OPERATING_SECTOR.OPERA_SEC_CLASSIF_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.ValidateInsertDataElement] INICIO', 3 );
      IF INUORDERID IS NOT NULL THEN
         DAOR_ORDER.ACCKEY( INUORDERID );
      END IF;
      IF INUOPERATINGSECTORID IS NOT NULL THEN
         DAOR_OPERATING_SECTOR.ACCKEY( INUOPERATINGSECTORID );
         NUOPERA_SEC_CLASSIF_ID := DAOR_OPERATING_SECTOR.FNUGETOPERA_SEC_CLASSIF_ID( INUOPERATINGSECTORID );
         IF NUOPERA_SEC_CLASSIF_ID != CNUOPERCLASSIFTECHAREA THEN
            ERRORS.SETERROR( CNUERRTECHAREA, INUOPERATINGSECTORID );
            RAISE EX.CONTROLLED_ERROR;
         END IF;
      END IF;
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.ValidateInsertDataElement] FIN', 3 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE CREATEACTIVITYOFELEMENT( INUACTIVITYID IN GE_ITEMS.ITEMS_ID%TYPE, INUOPERASECTOFACTI IN OR_OPERATING_SECTOR.OPERATING_SECTOR_ID%TYPE, INUPARSERADRESSID IN AB_ADDRESS.ADDRESS_ID%TYPE, IDTEXECDATE IN OR_ORDER.EXEC_ESTIMATE_DATE%TYPE, ISBCOMMENT IN OR_ORDER_ACTIVITY.COMMENT_%TYPE, IONUORDERID IN OUT OR_ORDER.ORDER_ID%TYPE, ONUORDERACTIVITYID OUT OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE )
    IS
      RCELEMENT DAIF_NODE.STYIF_NODE;
      RCORDER_ACTIVITY DAOR_ORDER_ACTIVITY.STYOR_ORDER_ACTIVITY;
    BEGIN
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.CreateActivityOfElement] INICIO', 3 );
      IF IONUORDERID IS NULL THEN
         OR_BOORDERACTIVITIES.CREATEACTIVITY( INUACTIVITYID, NULL, NULL, NULL, NULL, INUPARSERADRESSID, NULL, NULL, NULL, NULL, INUOPERASECTOFACTI, NULL, IDTEXECDATE, CNUPROCESS_EXTERNAL, ISBCOMMENT, TRUE, NULL, IONUORDERID, ONUORDERACTIVITYID );
       ELSE
         RCORDER_ACTIVITY.ACTIVITY_ID := INUACTIVITYID;
         RCORDER_ACTIVITY.TASK_TYPE_ID := DAOR_ORDER.FNUGETTASK_TYPE_ID( IONUORDERID );
         RCORDER_ACTIVITY.ADDRESS_ID := INUPARSERADRESSID;
         RCORDER_ACTIVITY.ELEMENT_ID := NULL;
         RCORDER_ACTIVITY.EXEC_ESTIMATE_DATE := IDTEXECDATE;
         RCORDER_ACTIVITY.OPERATING_SECTOR_ID := INUOPERASECTOFACTI;
         RCORDER_ACTIVITY.ORDER_ID := IONUORDERID;
         RCORDER_ACTIVITY.PROCESS_ID := CNUPROCESS_EXTERNAL;
         RCORDER_ACTIVITY.STATUS := OR_BOORDERACTIVITIES.CSBREGISTERSTATUS;
         RCORDER_ACTIVITY.COMMENT_ := ISBCOMMENT;
         OR_BOORDERACTIVITIES.ADDACTIVITYTOORDER( IONUORDERID, RCORDER_ACTIVITY, ONUORDERACTIVITYID );
      END IF;
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.CreateActivityOfElement] FIN', 3 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END CREATEACTIVITYOFELEMENT;
   PROCEDURE VALIDATEDATAACTIVIPOWERLAMP( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUORDERACTIVITY IN OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE, INUIDELEMENT IN OR_ORDER_ITEMS.ELEMENT_ID%TYPE )
    IS
      NUTASKTYPE OR_TASK_TYPE.TASK_TYPE_ID%TYPE;
      NUORDER_STATUS_ID OR_ORDER.ORDER_STATUS_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.ValidateDataActiviPowerLamp] INICIO', 3 );
      DAOR_ORDER.ACCKEY( INUORDERID );
      IF_BOELEMENT.ACCKEY( INUIDELEMENT, CNUPOWER_LAMP );
      IF DAOR_ORDER_ACTIVITY.FSBGETSTATUS( INUORDERACTIVITY ) != OR_BOCONSTANTS.CSBREGISTERSTATUS THEN
         ERRORS.SETERROR( CNUERR_114717, INUORDERACTIVITY );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.ValidateDataActiviPowerLamp] FIN', 3 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE ADDELEMENTPOWERLAMPTOACTIVITY( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUORDERACTIVITY IN OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE, INUELEMENTID IN OR_ORDER_ITEMS.ELEMENT_ID%TYPE, ISBUSE IN GE_ITEMS.USE_%TYPE )
    IS
      NULEGAACTIVITY NUMBER;
      NUELEMENTTYPEID IF_ELEMENT_CLASS.CLASS_ID%TYPE;
      NUELEMENTCLASSID IF_ELEMENT_CLASS.ELEMENT_TYPE_ID%TYPE;
      SBCODE IF_NODE.CODE%TYPE;
      NUITEMID GE_ITEMS.ITEMS_ID%TYPE;
      RCORORDERITEMS DAOR_ORDER_ITEMS.STYOR_ORDER_ITEMS;
    BEGIN
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.AddElementPowerLampToActivity] INICIO', 2 );
      IF DAOR_ORDER_ACTIVITY.FSBGETSTATUS( INUORDERACTIVITY ) != OR_BOCONSTANTS.CSBREGISTERSTATUS THEN
         ERRORS.SETERROR( CNUERR_114717, INUORDERACTIVITY );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF_BOELEMENT.GETELEMENTTYPECODECLASS( INUELEMENTID, NUELEMENTTYPEID, SBCODE, NUELEMENTCLASSID );
      NUITEMID := GE_BOITEMS.FNUGETITEMBYUSE( NUELEMENTTYPEID, NUELEMENTCLASSID, ISBUSE );
      IF OR_BCORDERITEMS.FBLEXISTORDERELEMENT( INUORDERID, INUELEMENTID, INUORDERACTIVITY, NUITEMID ) THEN
         ERRORS.SETERROR( CNUERR_114715, INUELEMENTID || '|' || INUORDERID || '|' || INUORDERACTIVITY );
         RAISE EX.CONTROLLED_ERROR;
       ELSE
         RCORORDERITEMS.ORDER_ITEMS_ID := OR_BOSEQUENCES.FNUNEXTOR_ORDER_ITEMS;
         RCORORDERITEMS.ORDER_ID := INUORDERID;
         RCORORDERITEMS.ITEMS_ID := NUITEMID;
         RCORORDERITEMS.ASSIGNED_ITEM_AMOUNT := 1;
         RCORORDERITEMS.LEGAL_ITEM_AMOUNT := 1;
         RCORORDERITEMS.TOTAL_PRICE := 0;
         RCORORDERITEMS.VALUE := 0;
         RCORORDERITEMS.ELEMENT_CODE := SBCODE;
         RCORORDERITEMS.ORDER_ACTIVITY_ID := INUORDERACTIVITY;
         RCORORDERITEMS.ELEMENT_ID := INUELEMENTID;
         DAOR_ORDER_ITEMS.INSRECORD( RCORORDERITEMS );
      END IF;
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.AddElementPowerLampToActivity] FIN', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END ADDELEMENTPOWERLAMPTOACTIVITY;
   PROCEDURE DELELEMENTPOWERLAMPTOACTIVITY( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUORDERACTIVITY IN OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE, INUELEMENTID IN OR_ORDER_ITEMS.ELEMENT_ID%TYPE, ISBUSE IN GE_ITEMS.USE_%TYPE )
    IS
      NULEGAACTIVITY NUMBER;
      NUELEMENTTYPEID IF_ELEMENT_CLASS.CLASS_ID%TYPE;
      NUELEMENTCLASSID IF_ELEMENT_CLASS.ELEMENT_TYPE_ID%TYPE;
      SBCODE IF_NODE.CODE%TYPE;
      NUITEMID GE_ITEMS.ITEMS_ID%TYPE;
      RCORORDERITEMS DAOR_ORDER_ITEMS.STYOR_ORDER_ITEMS;
      NUPROCESSID OR_ORDER_ACTIVITY.PROCESS_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.DelElementPowerLampToActivity] INICIO', 2 );
      NUPROCESSID := DAOR_ORDER_ACTIVITY.FNUGETPROCESS_ID( INUORDERACTIVITY );
      IF NUPROCESSID IS NULL OR CNUPROCESS_EXTERNAL != NUPROCESSID THEN
         ERRORS.SETERROR( CNUERR_114720, INUELEMENTID || '|' || INUORDERACTIVITY || '|' || INUORDERID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      IF_BOELEMENT.GETELEMENTTYPECODECLASS( INUELEMENTID, NUELEMENTTYPEID, SBCODE, NUELEMENTCLASSID );
      NUITEMID := GE_BOITEMS.FNUGETITEMBYUSE( NUELEMENTTYPEID, NUELEMENTCLASSID, ISBUSE );
      IF NOT OR_BCORDERITEMS.FBLEXISTORDERELEMENT( INUORDERID, INUELEMENTID, INUORDERACTIVITY, NUITEMID ) THEN
         ERRORS.SETERROR( CNUERR_114719, INUELEMENTID || '|' || INUORDERID || '|' || INUORDERACTIVITY );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      OR_BCORDERITEMS.DELORDERITEMBYELEMENT( INUORDERID, INUELEMENTID, INUORDERACTIVITY, NUITEMID );
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.DelElementPowerLampToActivity] FIN', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END DELELEMENTPOWERLAMPTOACTIVITY;
   PROCEDURE VALINPUTDATAITEM( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUITEMID IN GE_ITEMS.ITEMS_ID%TYPE, INULEGALITEMAMOUNT IN OR_ORDER_ITEMS.LEGAL_ITEM_AMOUNT%TYPE )
    IS
    BEGIN
      UT_TRACE.TRACE( 'OR_BOExternalServicesActivity.ValInputDataItem INCIO ', 2 );
      OR_BOVALIDATOR.VALIDATELEGALIZEBYSTATUS( INUORDERID );
      DAGE_ITEMS.ACCKEY( INUITEMID );
      IF INULEGALITEMAMOUNT IS NULL THEN
         ERRORS.SETERROR( CNUERR_111121, INUITEMID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      UT_TRACE.TRACE( 'OR_BOExternalServicesActivity.ValInputDataItem FIN ', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE ADDITEMSTOORDER( INUORDERID IN OR_ORDER.ORDER_ID%TYPE, INUITEMID IN GE_ITEMS.ITEMS_ID%TYPE, INULEGALITEMAMOUNT IN OR_ORDER_ITEMS.LEGAL_ITEM_AMOUNT%TYPE )
    IS
      NUOPERATINGUNITID OR_OPERATING_UNIT.OPERATING_UNIT_ID%TYPE;
      NUITEMCLASSIFID GE_ITEMS.ITEM_CLASSIF_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.AddItemsToOrder] INICIO', 2 );
      GE_BOITEMS.VALIDISNORMALITEM( INUITEMID );
      NUITEMCLASSIFID := DAGE_ITEMS.FNUGETITEM_CLASSIF_ID( INUITEMID );
      IF ( DAGE_ITEM_CLASSIF.FSBGETUSED_IN_LEGALIZE( NUITEMCLASSIFID ) != OR_BOCONSTANTS.CSBSI ) THEN
         ERRORS.SETERROR( CNUERR249, INUITEMID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      NUOPERATINGUNITID := DAOR_ORDER.FNUGETOPERATING_UNIT_ID( INUORDERID );
      IF NOT DAOR_OPE_UNI_ITEM_BALA.FBLEXIST( INUITEMID, NUOPERATINGUNITID ) THEN
         ERRORS.SETERROR( CNUERR251, INUITEMID || '|' || NUOPERATINGUNITID );
         RAISE EX.CONTROLLED_ERROR;
      END IF;
      OR_BOORDERITEMS.INSERTORUPDATEORDERITEMS( INUORDERID, INUITEMID, INULEGALITEMAMOUNT );
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.AddItemsToOrder] FIN', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END ADDITEMSTOORDER;
   PROCEDURE CREATEACTIVIT( INUACTIVITY IN GE_ITEMS.ITEMS_ID%TYPE, INUADDRESSID IN AB_ADDRESS.ADDRESS_ID%TYPE, IDTEXECDATE IN OR_ORDER.EXEC_ESTIMATE_DATE%TYPE, ISBCOMMENT IN OR_ORDER_ACTIVITY.COMMENT_%TYPE, INUREFVALUE IN OR_ORDER_ACTIVITY.VALUE_REFERENCE%TYPE, IONUORDERID IN OUT OR_ORDER.ORDER_ID%TYPE )
    IS
      NUORDERACTIVITYID OR_ORDER_ACTIVITY.ORDER_ACTIVITY_ID%TYPE;
    BEGIN
      UT_TRACE.TRACE( 'INICIO OR_BOExternalServicesActivity.CreateActivit', 2 );
      OR_BOORDERACTIVITIES.CREATEACTIVITY( INUACTIVITY, NULL, NULL, NULL, NULL, INUADDRESSID, NULL, NULL, NULL, NULL, NULL, NULL, IDTEXECDATE, NULL, ISBCOMMENT, TRUE, NULL, IONUORDERID, NUORDERACTIVITYID, NULL, GE_BOCONSTANTS.CSBYES, NULL, NULL, NULL, 0, NULL, TRUE, INUREFVALUE );
      UT_TRACE.TRACE( '[OR_BOExternalServicesActivity.CreateActivit] FIN', 2 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END CREATEACTIVIT;
END OR_BOEXTERNALSERVICESACTIVITY;
/


