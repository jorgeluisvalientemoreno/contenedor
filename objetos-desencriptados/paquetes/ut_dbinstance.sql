
CREATE OR REPLACE PACKAGE BODY UT_DBINSTANCE IS
   CSBPRODUCTIONINSTANCE CONSTANT VARCHAR2( 1 ) := 'P';
   CSBQUALITYINSTANCE CONSTANT VARCHAR2( 1 ) := 'Q';
   CSBDEVELOPMENTINSTANCE CONSTANT VARCHAR2( 1 ) := 'D';
   CSBCONFIGURATIONINSTANCE CONSTANT VARCHAR2( 1 ) := 'C';
   CSBMIGRATIONINSTANCE CONSTANT VARCHAR2( 1 ) := 'M';
   CSBTRAININGINSTANCE CONSTANT VARCHAR2( 1 ) := 'T';
   CSBACCEPTANCEINSTANCE CONSTANT VARCHAR2( 1 ) := 'A';
   CSBSUPPORTINSTANCE CONSTANT VARCHAR2( 1 ) := 'S';
   CSBTRANSFORMATIONINSTANCE CONSTANT VARCHAR2( 1 ) := 'X';
   CSBDEVANDCONFIGINSTANCE CONSTANT VARCHAR2( 1 ) := 'B';
   CSBAUXILIARYINSTANCE_1 CONSTANT VARCHAR2( 1 ) := 'Y';
   CSBAUXILIARYINSTANCE_2 CONSTANT VARCHAR2( 1 ) := 'Z';
   CSBVERSION CONSTANT VARCHAR2( 20 ) := 'SAO188950';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   FUNCTION FSBGETDBINSTANCE
    RETURN VARCHAR2
    IS
      RFDATOS CONSTANTS.TYREFCURSOR;
      SBINSTANCENAME VARCHAR2( 30 );
    BEGIN
      OPEN RFDATOS FOR SELECT instance_name from gv$instance
            where inst_id = sys_context('USERENV','INSTANCE');
      FETCH RFDATOS
         INTO SBINSTANCENAME;
      CLOSE RFDATOS;
      RETURN SBINSTANCENAME;
   END FSBGETDBINSTANCE;
   FUNCTION FSBGETCURRENTINSTANCETYPE
    RETURN VARCHAR2
    IS
      SBINSTANCENAME VARCHAR2( 30 );
      SBINSTANCETYPE VARCHAR2( 1 );
    BEGIN
      SBINSTANCENAME := FSBGETDBINSTANCE;
      IF NOT ( REGEXP_LIKE( SUBSTR( SBINSTANCENAME, 1, 4 ), '^-?[[:alpha:],.]*$' ) AND REGEXP_LIKE( SUBSTR( SBINSTANCENAME, 5, 4 ), '^-?[[:digit:],.]*$' ) ) OR SBINSTANCENAME IS NULL OR SBINSTANCENAME NOT LIKE 'SF%' THEN
         RETURN NULL;
      END IF;
      SBINSTANCETYPE := SUBSTR( SBINSTANCENAME, 3, 1 );
	  SBINSTANCETYPE :='D';
      IF SBINSTANCETYPE NOT IN ( CSBPRODUCTIONINSTANCE, CSBQUALITYINSTANCE, CSBDEVELOPMENTINSTANCE, CSBCONFIGURATIONINSTANCE, CSBMIGRATIONINSTANCE, CSBTRAININGINSTANCE, CSBACCEPTANCEINSTANCE, CSBSUPPORTINSTANCE, CSBTRANSFORMATIONINSTANCE, CSBDEVANDCONFIGINSTANCE, CSBAUXILIARYINSTANCE_1, CSBAUXILIARYINSTANCE_2 ) THEN
         RETURN NULL;
      END IF;
      RETURN SBINSTANCETYPE;
   END FSBGETCURRENTINSTANCETYPE;
   FUNCTION FSBGETPRODUCTIONINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBPRODUCTIONINSTANCE;
   END FSBGETPRODUCTIONINSTANCE;
   FUNCTION FSBGETQUALITYINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBQUALITYINSTANCE;
   END FSBGETQUALITYINSTANCE;
   FUNCTION FSBGETDEVELOPMENTINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBDEVELOPMENTINSTANCE;
   END FSBGETDEVELOPMENTINSTANCE;
   FUNCTION FSBGETCONFIGURATIONINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBCONFIGURATIONINSTANCE;
   END FSBGETCONFIGURATIONINSTANCE;
   FUNCTION FSBGETMIGRATIONINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBMIGRATIONINSTANCE;
   END FSBGETMIGRATIONINSTANCE;
   FUNCTION FSBGETTRAININGINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBTRAININGINSTANCE;
   END FSBGETTRAININGINSTANCE;
   FUNCTION FSBGETACCEPTANCEINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBACCEPTANCEINSTANCE;
   END FSBGETACCEPTANCEINSTANCE;
   FUNCTION FSBGETSUPPORTINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBSUPPORTINSTANCE;
   END FSBGETSUPPORTINSTANCE;
   FUNCTION FSBGETTRANSFORMATIONINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBTRANSFORMATIONINSTANCE;
   END FSBGETTRANSFORMATIONINSTANCE;
   FUNCTION FSBGETDEVANDCONFIGINSTANCE
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBDEVANDCONFIGINSTANCE;
   END FSBGETDEVANDCONFIGINSTANCE;
   FUNCTION FSBGETAUXILIARYINSTANCE1
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBAUXILIARYINSTANCE_1;
   END FSBGETAUXILIARYINSTANCE1;
   FUNCTION FSBGETAUXILIARYINSTANCE2
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBAUXILIARYINSTANCE_2;
   END FSBGETAUXILIARYINSTANCE2;
END UT_DBINSTANCE;
/


