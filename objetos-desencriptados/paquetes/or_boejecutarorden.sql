PACKAGE OR_BOEjecutarOrden
IS


























    

    

    

    FUNCTION FSBVERSION  RETURN VARCHAR2;


    PROCEDURE EJECUTARORDEN
    (
        INUORDERID          IN  OR_ORDER.ORDER_ID%TYPE,
        INUCOMMENTTYPEID    IN  OR_ORDER_COMMENT.COMMENT_TYPE_ID%TYPE DEFAULT NULL,
        ISBORDERCOMMENT     IN  OR_ORDER_COMMENT.ORDER_COMMENT%TYPE DEFAULT NULL,
        IBLWITHCAUSAL       IN  BOOLEAN DEFAULT FALSE,
        IDTCHANGEDATE       IN OR_ORDER_STAT_CHANGE.STAT_CHG_DATE%TYPE DEFAULT NULL
    );


    PROCEDURE EXECORDERWITHCAUSAL(
                                     INUORDERID         IN OR_ORDER.ORDER_ID%TYPE,
                                     INUCAUSALID        IN OR_ORDER.CAUSAL_ID%TYPE,
                                     INUCOMMENTTYPEID   IN OR_ORDER_COMMENT.COMMENT_TYPE_ID%TYPE DEFAULT NULL,
                                     ISBORDERCOMMENT    IN OR_ORDER_COMMENT.ORDER_COMMENT%TYPE DEFAULT NULL,
                                     IDTCHANGEDATE      IN OR_ORDER_STAT_CHANGE.STAT_CHG_DATE%TYPE DEFAULT NULL
                                 );

END OR_BOEJECUTARORDEN;

PACKAGE BODY OR_BOEjecutarOrden
IS

    
    CSBVERSION          CONSTANT    VARCHAR2(20) := 'SAO198736';

    
    CSBASSIGNTYPEHOUR   CONSTANT    VARCHAR2(1) := 'S';
    
    
    CNUNULL_ATTRIBUTE   CONSTANT    NUMBER := 2126;
    
    CNUERR_CITAHOY      CONSTANT    NUMBER := 9881;
    
    
    CNUERR_ORDENCAMBIO  CONSTANT    NUMBER := 9581;
    
    CNUERR_PROGCHANGED          CONSTANT    NUMBER := 3355;

    

    

    
    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;

    

    































    PROCEDURE EJECUTARORDEN
    (
        INUORDERID          IN  OR_ORDER.ORDER_ID%TYPE,
        INUCOMMENTTYPEID    IN  OR_ORDER_COMMENT.COMMENT_TYPE_ID%TYPE DEFAULT NULL,
        ISBORDERCOMMENT     IN  OR_ORDER_COMMENT.ORDER_COMMENT%TYPE DEFAULT NULL,
        IBLWITHCAUSAL       IN  BOOLEAN DEFAULT FALSE,
        IDTCHANGEDATE       IN OR_ORDER_STAT_CHANGE.STAT_CHG_DATE%TYPE DEFAULT NULL
    )
    IS
        
        NUINDEX                     GE_BOINSTANCECONTROL.STYNUINDEX;

        SBORDERCOMMENT              OR_ORDER_COMMENT.ORDER_COMMENT%TYPE;

        SBORDER_ID                  GE_BOINSTANCECONTROL.STYSBVALUE;
        RCORDER                     DAOR_ORDER.STYOR_ORDER;
        SBSTATUS                    GE_BOINSTANCECONTROL.STYSBVALUE;
        RCSCHEDPROGRAMING           DAOR_SCHED_PROGRAMING.STYOR_SCHED_PROGRAMING;
        RCSCHEDDISPATCH             DAOR_SCHED_DISPATCH.STYOR_SCHED_DISPATCH;
        RCSCHEDAVAILABLE            DAOR_SCHED_AVAILABLE.STYOR_SCHED_AVAILABLE;
        
        BLEXISTSPROG                BOOLEAN;
        BLEXISTSDISP                BOOLEAN;

    BEGIN
        
        UT_TRACE.TRACE('Orden: '||INUORDERID,7);

        
        
        DAOR_ORDER.GETRECORD(INUORDERID, RCORDER);
        
        BLEXISTSPROG := OR_BCPROGRAMING.FBLEXISTSPROGBYORDER(INUORDERID, RCSCHEDPROGRAMING);
        BLEXISTSDISP := OR_BCDISPATCH.FBLEXISTDISPBYORDER(INUORDERID, RCSCHEDDISPATCH);

        
        IF (BLEXISTSPROG) THEN
            OR_BCSCHED.GETAVAILABLEBYPKBLOQ(RCSCHEDPROGRAMING.SCHED_AVAILABLE_ID, RCSCHEDAVAILABLE);

            IF (RCSCHEDAVAILABLE.SCHED_AVAILABLE_ID IS NULL) THEN
                UT_TRACE.TRACE('No se encontr� la disponibilidad: ['||RCSCHEDPROGRAMING.SCHED_AVAILABLE_ID||']');
                GE_BOERRORS.SETERRORCODE(CNUERR_PROGCHANGED);
            END IF;
        ELSIF (BLEXISTSDISP) THEN
            
            OR_BCSCHED.GETAVAILABLEBYUDXBLOQ(
                    RCSCHEDDISPATCH.SCHEDULER_ID,
                    RCSCHEDDISPATCH.OPERATING_UNIT_ID,
                    RCSCHEDDISPATCH.OPERATING_ZONE_ID,
                    RCSCHEDDISPATCH.DATE_,
                    RCSCHEDAVAILABLE
                );
            IF (RCSCHEDAVAILABLE.SCHED_AVAILABLE_ID IS NULL) THEN
                UT_TRACE.TRACE('No se encontr� la disponibilidad: ['||RCSCHEDDISPATCH.SCHEDULER_ID
                    ||']['||RCSCHEDDISPATCH.OPERATING_UNIT_ID
                    ||']['||RCSCHEDDISPATCH.OPERATING_ZONE_ID
                    ||']['||RCSCHEDDISPATCH.DATE_
                    ||']');
                GE_BOERRORS.SETERRORCODE(CNUERR_PROGCHANGED);
            END IF;
        END IF;
        
        
        SBSTATUS := DAOR_ORDER_STATUS.FSBGETDESCRIPTION(RCORDER.ORDER_STATUS_ID) || ' - '
            || DAOR_ORDER_STATUS.FSBGETDESCRIPTION(OR_BOCONSTANTS.CNUORDER_STAT_EXECUTED);
            
        SBORDERCOMMENT := SUBSTR(SBSTATUS || ISBORDERCOMMENT, 1, 2000);

        
        OR_BCORDERPROCESS.LOCKORDER(INUORDERID);
        
        
        IF NOT (OR_BOPROCESSORDER.FBLISORDERALTERABLE(RCORDER) ) THEN
            ERRORS.SETERROR (CNUERR_ORDENCAMBIO);
            UT_TRACE.TRACE('[OR_BOFWEjecutarOrden.EjecutarOrden] - Orden en Estado no valido', 6);
            RAISE EX.CONTROLLED_ERROR;
        END IF;

        IF (IBLWITHCAUSAL) THEN
            OR_BOPROCESSORDER.ENDEXECWOVALID
            (
                RCORDER,
                INUCOMMENTTYPEID,
                SBORDERCOMMENT,
                IDTCHANGEDATE
            );
        
        ELSE
            
            OR_BOPROCESSORDER.ENDEXECUTION
            (
                RCORDER,
                INUCOMMENTTYPEID,
                SBORDERCOMMENT,
                IDTCHANGEDATE
            );
        END IF;

        
        IF (BLEXISTSPROG) THEN
            
            DAOR_SCHED_PROGRAMING.UPDPROGRAMING_STATUS(RCSCHEDPROGRAMING.SCHED_PROGRAMING_ID, OR_BOCONSTANTS.CSBPROGSTATUSCANCEL);
        END IF;

        
        IF (BLEXISTSDISP) THEN
            
            DAOR_SCHED_DISPATCH.UPDDISPATCH_STATUS(RCSCHEDDISPATCH.SCHED_DISPATCH_ID, OR_BOCONSTANTS.CSBDISPATCHSTATUSCLOSE);
        END IF;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
    


























    PROCEDURE EXECORDERWITHCAUSAL(
                                     INUORDERID         IN OR_ORDER.ORDER_ID%TYPE,
                                     INUCAUSALID        IN OR_ORDER.CAUSAL_ID%TYPE,
                                     INUCOMMENTTYPEID   IN OR_ORDER_COMMENT.COMMENT_TYPE_ID%TYPE DEFAULT NULL,
                                     ISBORDERCOMMENT    IN OR_ORDER_COMMENT.ORDER_COMMENT%TYPE DEFAULT NULL,
                                     IDTCHANGEDATE      IN OR_ORDER_STAT_CHANGE.STAT_CHG_DATE%TYPE DEFAULT NULL
                                 )
    IS
        RCORDER     DAOR_ORDER.STYOR_ORDER;
    BEGIN

        DAOR_ORDER.LOCKBYPK(INUORDERID, RCORDER);
        
        IF (NOT OR_BOORDERTRANSITION.FBLEXISTSORDERTRANSITION(OR_BOCONSTANTS.CNUORDER_ACTION_EXECUT, RCORDER.ORDER_STATUS_ID)) THEN
            
            GE_BOERRORS.SETERRORCODEARGUMENT(OR_BOCONSTANTS.CNUERR_121742,
                OR_BOCONSTANTS.CNUORDER_ACTION_EXECUT || OR_BOCONSTANTS.CSBERRPARASEPA ||
                RCORDER.ORDER_ID || OR_BOCONSTANTS.CSBERRPARASEPA ||
                RCORDER.ORDER_STATUS_ID);
        END IF;

        
        OR_BOEJECUTARORDEN.EJECUTARORDEN(INUORDERID,INUCOMMENTTYPEID,ISBORDERCOMMENT, TRUE,IDTCHANGEDATE);
        
        
        DAOR_ORDER.UPDCAUSAL_ID(INUORDERID, INUCAUSALID);
        
        DAOR_ORDER.GETRECORD(INUORDERID, RCORDER);
        
        
        OR_BOPROCESSORDER.GENADMINORDERBYORDER(RCORDER);
        
        
        OR_BOEXECUTEORDER.EXECUTE (INUORDERID);

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;
    
END OR_BOEJECUTARORDEN;