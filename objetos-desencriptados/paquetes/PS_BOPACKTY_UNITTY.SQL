
CREATE OR REPLACE PACKAGE BODY PS_BOPACKTY_UNITTY IS
   CSBVERSION CONSTANT VARCHAR2( 250 ) := 'SAO183622';
   CSBMOTIVE CONSTANT VARCHAR2( 1 ) := 'M';
   CSBPAKAGE CONSTANT VARCHAR2( 1 ) := 'P';
   FUNCTION FSBVERSION
    RETURN VARCHAR2
    IS
    BEGIN
      RETURN CSBVERSION;
   END;
   PROCEDURE SAVEUNITBYPACK( IONUPACKUNITTYPE IN OUT PS_PACKAGE_UNITTYPE.PACKAGE_UNITTYPE_ID%TYPE, INUPACKAGETYPEID IN PS_PACKAGE_UNITTYPE.PACKAGE_TYPE_ID%TYPE, INUUNITTYPEID IN PS_PACKAGE_UNITTYPE.UNIT_TYPE_ID%TYPE )
    IS
      RCPACKUNIT DAPS_PACKAGE_UNITTYPE.STYPS_PACKAGE_UNITTYPE;
    BEGIN
      UT_TRACE.TRACE( 'ps_bopackty_unitty.SaveUnitByPack [' || INUPACKAGETYPEID || '] [' || INUUNITTYPEID || ']', 11 );
      DAPS_PACKAGE_TYPE.ACCKEY( INUPACKAGETYPEID );
      DAWF_UNIT_TYPE.ACCKEY( INUUNITTYPEID );
      IF ( DAPS_PACKAGE_UNITTYPE.FBLEXIST( IONUPACKUNITTYPE ) ) THEN
         RCPACKUNIT := DAPS_PACKAGE_UNITTYPE.FRCGETRECORD( IONUPACKUNITTYPE );
         RCPACKUNIT.INTERFACE_CONFIG_ID := WF_BOATTRIBUTES_EQUIV.CNUPACKINTERFAC;
         RCPACKUNIT.PACKAGE_TYPE_ID := INUPACKAGETYPEID;
         RCPACKUNIT.UNIT_TYPE_ID := INUUNITTYPEID;
         DAPS_PACKAGE_UNITTYPE.UPDRECORD( RCPACKUNIT );
       ELSE
         IONUPACKUNITTYPE := PS_BOSEQUENCES.FNUGETPACKUNITTYPEID;
         RCPACKUNIT.PACKAGE_UNITTYPE_ID := IONUPACKUNITTYPE;
         RCPACKUNIT.INTERFACE_CONFIG_ID := WF_BOATTRIBUTES_EQUIV.CNUPACKINTERFAC;
         RCPACKUNIT.PACKAGE_TYPE_ID := INUPACKAGETYPEID;
         RCPACKUNIT.UNIT_TYPE_ID := INUUNITTYPEID;
         DAPS_PACKAGE_UNITTYPE.INSRECORD( RCPACKUNIT );
      END IF;
      WF_BOATTRIBUTES_EQUIV.SAVEUNITBYPACK( INUPACKAGETYPEID, INUUNITTYPEID );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE SAVEUNITBYPROD( IONUPACKUNITTYPE IN OUT PS_PACKAGE_UNITTYPE.PACKAGE_UNITTYPE_ID%TYPE, INUPACKAGETYPEID IN PS_PACKAGE_UNITTYPE.PACKAGE_TYPE_ID%TYPE, INUPRODUCTTYPEID IN PS_PACKAGE_UNITTYPE.PRODUCT_TYPE_ID%TYPE, INUUNITTYPEID IN PS_PACKAGE_UNITTYPE.UNIT_TYPE_ID%TYPE )
    IS
      RCPACKUNIT DAPS_PACKAGE_UNITTYPE.STYPS_PACKAGE_UNITTYPE;
    BEGIN
      UT_TRACE.TRACE( 'ps_bopackty_unitty.SaveUnitByProd [' || INUPACKAGETYPEID || '] [' || INUPRODUCTTYPEID || '] [' || INUUNITTYPEID || ']', 11 );
      PKTBLSERVICIO.ACCKEY( INUPRODUCTTYPEID );
      DAPS_PACKAGE_TYPE.ACCKEY( INUPACKAGETYPEID );
      DAWF_UNIT_TYPE.ACCKEY( INUUNITTYPEID );
      IF ( DAPS_PACKAGE_UNITTYPE.FBLEXIST( IONUPACKUNITTYPE ) ) THEN
         RCPACKUNIT := DAPS_PACKAGE_UNITTYPE.FRCGETRECORD( IONUPACKUNITTYPE );
         RCPACKUNIT.INTERFACE_CONFIG_ID := WF_BOATTRIBUTES_EQUIV.CNUPRODINTERFAC;
         RCPACKUNIT.PACKAGE_TYPE_ID := INUPACKAGETYPEID;
         RCPACKUNIT.PRODUCT_TYPE_ID := INUPRODUCTTYPEID;
         RCPACKUNIT.UNIT_TYPE_ID := INUUNITTYPEID;
         DAPS_PACKAGE_UNITTYPE.UPDRECORD( RCPACKUNIT );
       ELSE
         IONUPACKUNITTYPE := PS_BOSEQUENCES.FNUGETPACKUNITTYPEID;
         RCPACKUNIT.PACKAGE_UNITTYPE_ID := IONUPACKUNITTYPE;
         RCPACKUNIT.INTERFACE_CONFIG_ID := WF_BOATTRIBUTES_EQUIV.CNUPRODINTERFAC;
         RCPACKUNIT.PACKAGE_TYPE_ID := INUPACKAGETYPEID;
         RCPACKUNIT.PRODUCT_TYPE_ID := INUPRODUCTTYPEID;
         RCPACKUNIT.UNIT_TYPE_ID := INUUNITTYPEID;
         DAPS_PACKAGE_UNITTYPE.INSRECORD( RCPACKUNIT );
      END IF;
      WF_BOATTRIBUTES_EQUIV.SAVEUNITBYPROD( INUPACKAGETYPEID, INUPRODUCTTYPEID, INUUNITTYPEID );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   PROCEDURE SAVEUNITBYMOTI( IONUPACKUNITTYPE IN OUT PS_PACKAGE_UNITTYPE.PACKAGE_UNITTYPE_ID%TYPE, INUPACKAGETYPEID IN PS_PACKAGE_UNITTYPE.PACKAGE_TYPE_ID%TYPE, INUPRODUCTMOTIVE IN PS_PACKAGE_UNITTYPE.PRODUCT_MOTIVE_ID%TYPE, INUUNITTYPEID IN PS_PACKAGE_UNITTYPE.UNIT_TYPE_ID%TYPE )
    IS
      RCPACKUNIT DAPS_PACKAGE_UNITTYPE.STYPS_PACKAGE_UNITTYPE;
    BEGIN
      UT_TRACE.TRACE( 'ps_bopackty_unitty.SaveUnitByMoti [' || INUPACKAGETYPEID || '] [' || INUPRODUCTMOTIVE || '] [' || INUUNITTYPEID || ']', 11 );
      DAPS_PRODUCT_MOTIVE.ACCKEY( INUPRODUCTMOTIVE );
      DAPS_PACKAGE_TYPE.ACCKEY( INUPACKAGETYPEID );
      DAWF_UNIT_TYPE.ACCKEY( INUUNITTYPEID );
      DAPS_PACKAGE_TYPE.UPDINDICATOR_REGIS_EXEC( INUPACKAGETYPEID, CSBMOTIVE );
      IF ( DAPS_PACKAGE_UNITTYPE.FBLEXIST( IONUPACKUNITTYPE ) ) THEN
         RCPACKUNIT := DAPS_PACKAGE_UNITTYPE.FRCGETRECORD( IONUPACKUNITTYPE );
         RCPACKUNIT.INTERFACE_CONFIG_ID := WF_BOATTRIBUTES_EQUIV.CNUMOTIINTERFAC;
         RCPACKUNIT.PRODUCT_MOTIVE_ID := INUPRODUCTMOTIVE;
         RCPACKUNIT.PACKAGE_TYPE_ID := INUPACKAGETYPEID;
         RCPACKUNIT.UNIT_TYPE_ID := INUUNITTYPEID;
         DAPS_PACKAGE_UNITTYPE.UPDRECORD( RCPACKUNIT );
       ELSE
         IONUPACKUNITTYPE := PS_BOSEQUENCES.FNUGETPACKUNITTYPEID;
         RCPACKUNIT.PACKAGE_UNITTYPE_ID := IONUPACKUNITTYPE;
         RCPACKUNIT.INTERFACE_CONFIG_ID := WF_BOATTRIBUTES_EQUIV.CNUMOTIINTERFAC;
         RCPACKUNIT.PRODUCT_MOTIVE_ID := INUPRODUCTMOTIVE;
         RCPACKUNIT.PACKAGE_TYPE_ID := INUPACKAGETYPEID;
         RCPACKUNIT.UNIT_TYPE_ID := INUUNITTYPEID;
         DAPS_PACKAGE_UNITTYPE.INSRECORD( RCPACKUNIT );
      END IF;
      WF_BOATTRIBUTES_EQUIV.SAVEUNITBYMOTI( INUPACKAGETYPEID, INUPRODUCTMOTIVE, INUUNITTYPEID );
      UT_TRACE.TRACE( 'finaliza ps_bopackty_unitty.SaveUnitByMoti' );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END SAVEUNITBYMOTI;
   PROCEDURE DELETEPACKUNITTYPE( INUPACKUNITTYPEID IN PS_PACKAGE_UNITTYPE.PACKAGE_UNITTYPE_ID%TYPE )
    IS
      RCPACKUNIT DAPS_PACKAGE_UNITTYPE.STYPS_PACKAGE_UNITTYPE;
    BEGIN
      UT_TRACE.TRACE( 'inicia ps_bopackty_unitty.DeletePackUnitType [' || INUPACKUNITTYPEID || ']', 11 );
      IF ( NOT DAPS_PACKAGE_UNITTYPE.FBLEXIST( INUPACKUNITTYPEID ) ) THEN
         RETURN;
      END IF;
      DAPS_PACKAGE_UNITTYPE.GETRECORD( INUPACKUNITTYPEID, RCPACKUNIT );
      IF ( RCPACKUNIT.INTERFACE_CONFIG_ID = WF_BOATTRIBUTES_EQUIV.CNUPACKINTERFAC ) THEN
         WF_BOATTRIBUTES_EQUIV.DELETEUNITBYPACK( RCPACKUNIT.PACKAGE_TYPE_ID );
       ELSIF ( RCPACKUNIT.INTERFACE_CONFIG_ID = WF_BOATTRIBUTES_EQUIV.CNUPRODINTERFAC ) THEN
         WF_BOATTRIBUTES_EQUIV.DELETEUNITBYPROD( RCPACKUNIT.PACKAGE_TYPE_ID, RCPACKUNIT.PRODUCT_TYPE_ID );
       ELSIF ( RCPACKUNIT.INTERFACE_CONFIG_ID = WF_BOATTRIBUTES_EQUIV.CNUMOTIINTERFAC ) THEN
         WF_BOATTRIBUTES_EQUIV.DELETEUNITBYMOTI( RCPACKUNIT.PACKAGE_TYPE_ID, RCPACKUNIT.PRODUCT_MOTIVE_ID );
      END IF;
      DAPS_PACKAGE_UNITTYPE.DELRECORD( RCPACKUNIT.PACKAGE_UNITTYPE_ID );
      IF ( RCPACKUNIT.PRODUCT_MOTIVE_ID IS NOT NULL AND NOT PS_BCPACKTY_UNITTY.FBOEXISTUNITBYPACKMOT( RCPACKUNIT.PACKAGE_TYPE_ID ) ) THEN
         DAPS_PACKAGE_TYPE.UPDINDICATOR_REGIS_EXEC( RCPACKUNIT.PACKAGE_TYPE_ID, CSBPAKAGE );
      END IF;
      UT_TRACE.TRACE( 'finaliza ps_bopackty_unitty.DeletePackUnitType [' || INUPACKUNITTYPEID || ']', 11 );
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END DELETEPACKUNITTYPE;
   FUNCTION FNUINTERFBYPACKAGE( INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE )
    RETURN PS_PACKAGE_UNITTYPE.INTERFACE_CONFIG_ID%TYPE
    IS
      RCPACKAGES DAMO_PACKAGES.STYMO_PACKAGES;
      RCPACKUNIT DAPS_PACKAGE_UNITTYPE.STYPS_PACKAGE_UNITTYPE;
    BEGIN
      UT_TRACE.TRACE( 'ps_bopackty_unitty.fnuInterfByPackage [' || INUPACKAGEID || ']', 11 );
      RCPACKAGES := DAMO_PACKAGES.FRCGETRECORD( INUPACKAGEID );
      RCPACKUNIT := PS_BCPACKTY_UNITTY.FRCGETUNITBYPACKAGE( RCPACKAGES.PACKAGE_TYPE_ID );
      RETURN RCPACKUNIT.INTERFACE_CONFIG_ID;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   FUNCTION FNUINTERFBYPACKPROD( INUPACKAGEID IN MO_PACKAGES.PACKAGE_ID%TYPE )
    RETURN PS_PACKAGE_UNITTYPE.INTERFACE_CONFIG_ID%TYPE
    IS
      RCPACKAGES DAMO_PACKAGES.STYMO_PACKAGES;
      RCPACKUNIT DAPS_PACKAGE_UNITTYPE.STYPS_PACKAGE_UNITTYPE;
    BEGIN
      UT_TRACE.TRACE( 'ps_bopackty_unitty.fnuInterfByPackProd [' || INUPACKAGEID || ']', 11 );
      RCPACKAGES := DAMO_PACKAGES.FRCGETRECORD( INUPACKAGEID );
      RCPACKUNIT := PS_BCPACKTY_UNITTY.FRCGETUNITBYPACKPRD( RCPACKAGES.PACKAGE_TYPE_ID, MO_BOPACKAGES.FRCGETINITIALMOTIVE( RCPACKAGES.PACKAGE_ID, FALSE ).PRODUCT_TYPE_ID );
      RETURN RCPACKUNIT.INTERFACE_CONFIG_ID;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
   FUNCTION FNUINTERFBYMOTIVE( INUMOTIVEID IN MO_MOTIVE.MOTIVE_ID%TYPE )
    RETURN PS_PACKAGE_UNITTYPE.INTERFACE_CONFIG_ID%TYPE
    IS
      RCMOTIVE DAMO_MOTIVE.STYMO_MOTIVE;
      RCPACKAGES DAMO_PACKAGES.STYMO_PACKAGES;
      RCPACKUNIT DAPS_PACKAGE_UNITTYPE.STYPS_PACKAGE_UNITTYPE;
    BEGIN
      UT_TRACE.TRACE( 'ps_bopackty_unitty.fnuInterfByMotive [' || INUMOTIVEID || ']', 11 );
      RCMOTIVE := DAMO_MOTIVE.FRCGETRECORD( INUMOTIVEID );
      RCPACKAGES := DAMO_PACKAGES.FRCGETRECORD( RCMOTIVE.PACKAGE_ID );
      RCPACKUNIT := PS_BCPACKTY_UNITTY.FRCGETUNITBYPACKMOT( RCPACKAGES.PACKAGE_TYPE_ID, RCMOTIVE.PRODUCT_MOTIVE_ID );
      RETURN RCPACKUNIT.INTERFACE_CONFIG_ID;
    EXCEPTION
      WHEN EX.CONTROLLED_ERROR THEN
         RAISE EX.CONTROLLED_ERROR;
      WHEN OTHERS THEN
         ERRORS.SETERROR;
         RAISE EX.CONTROLLED_ERROR;
   END;
END PS_BOPACKTY_UNITTY;
/


