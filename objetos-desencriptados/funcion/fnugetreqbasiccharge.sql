
CREATE OR REPLACE FUNCTION FNUGETREQBASICCHARGE
 RETURN NUMBER
 IS
   SBERRORMESSAGE VARCHAR2( 2000 );
   RCSERVSUSC SERVSUSC%ROWTYPE;
   NUCONCEPT CONCEPTO.CONCCODI%TYPE;
   NUPACKAGEID MO_PACKAGES.PACKAGE_ID%TYPE;
   DTREQUESTDATE MO_PACKAGES.REQUEST_DATE%TYPE;
   NUVALORCARGO NUMBER;
   PROCEDURE GETINSTANCEDATA
    IS
    BEGIN
      PKERRORS.PUSH( 'fnuGetReqBasicCharge.GetInstanceData' );
      PKINSTANCEDATAMGR.GETCG_PRODUCTRECORD( RCSERVSUSC );
      PKINSTANCEDATAMGR.GETCG_CONCEPT( NUCONCEPT );
      PKINSTANCEDATAMGR.GETTG_PACKAGE( NUPACKAGEID );
      PKERRORS.POP;
    EXCEPTION
      WHEN LOGIN_DENIED OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         PKERRORS.POP;
         RAISE;
      WHEN OTHERS THEN
         PKERRORS.NOTIFYERROR( PKERRORS.FSBLASTOBJECT, SQLERRM, SBERRORMESSAGE );
         PKERRORS.POP;
         RAISE_APPLICATION_ERROR( PKCONSTANTE.NUERROR_LEVEL2, SBERRORMESSAGE );
   END GETINSTANCEDATA;
   PROCEDURE GENERATECHARGES
    IS
    BEGIN
      PKERRORS.PUSH( 'fnuGetReqBasicCharge.GenerateCharges' );
      NUVALORCARGO := CC_BOREQUESTCHARGES.GETREQUESTBASICCHARGE( RCSERVSUSC.SESUNUSE, RCSERVSUSC.SESUSERV, RCSERVSUSC.SESUDEPA, RCSERVSUSC.SESULOCA, RCSERVSUSC.SESUCATE, RCSERVSUSC.SESUSUCA, RCSERVSUSC.SESUPLFA, NUCONCEPT, DTREQUESTDATE );
      PKERRORS.POP;
    EXCEPTION
      WHEN LOGIN_DENIED OR PKCONSTANTE.EXERROR_LEVEL2 THEN
         PKERRORS.POP;
         RAISE;
      WHEN OTHERS THEN
         PKERRORS.NOTIFYERROR( PKERRORS.FSBLASTOBJECT, SQLERRM, SBERRORMESSAGE );
         PKERRORS.POP;
         RAISE_APPLICATION_ERROR( PKCONSTANTE.NUERROR_LEVEL2, SBERRORMESSAGE );
   END GENERATECHARGES;
 BEGIN
   PKERRORS.PUSH( 'fnuGetReqBasicCharge' );
   GETINSTANCEDATA;
   DTREQUESTDATE := DAMO_PACKAGES.FDTGETREQUEST_DATE( NUPACKAGEID );
   GENERATECHARGES;
   PKERRORS.POP;
   RETURN ( NUVALORCARGO );
 EXCEPTION
   WHEN LOGIN_DENIED OR PKCONSTANTE.EXERROR_LEVEL2 THEN
      PKERRORS.POP;
      RAISE;
   WHEN OTHERS THEN
      PKERRORS.NOTIFYERROR( PKERRORS.FSBLASTOBJECT, SQLERRM, SBERRORMESSAGE );
      PKERRORS.POP;
      RAISE_APPLICATION_ERROR( PKCONSTANTE.NUERROR_LEVEL2, SBERRORMESSAGE );
END FNUGETREQBASICCHARGE;
/


