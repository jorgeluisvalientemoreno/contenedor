BEGIN

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.CSBWRITE_OPEN_FILE' as SERVICIO_ORIGEN,
  'Constante para el modo Escritura' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.CSBMODO_ESCRITURA' as SERVICIO_DESTINO,
  'Constante para el modo Escritura' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.CSBREAD_OPEN_FILE' as SERVICIO_ORIGEN,
  'Constante para el modo lectura' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.CSBMODO_LECTURA' as SERVICIO_DESTINO,
  'Constante para el modo lectura' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.IS_OPEN' as SERVICIO_ORIGEN,
  'Valida si el archivo esta abierto' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FBLARCHIVOABIERTO_SMF' as SERVICIO_DESTINO,
  'Valida si el archivo esta abierto' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.ISFILEEXISTING' as SERVICIO_ORIGEN,
  'Retorna verdadero si el archivo existe' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FBLEXISTEARCHIVO_SMF' as SERVICIO_DESTINO,
  'Retorna verdadero si el archivo existe' as DESCRIPCION_DESTINO,
  'Se debe enviar separados el directorio y el nombre del archivo' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UT_FILE.ISFILEEXISTING' as SERVICIO_ORIGEN,
  'Retorna verdadero si el archivo existe' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FBLEXISTEARCHIVO_SMF' as SERVICIO_DESTINO,
  'Retorna verdadero si el archivo existe' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.FILEREAD' as SERVICIO_ORIGEN,
  'Lee un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FSBOBTENERLINEA_SMF' as SERVICIO_DESTINO,
  'Lee un archivo. Si retorna NULL se llegó al final del archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.GET_LINE' as SERVICIO_ORIGEN,
  'Obtiene una línea de texto de un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FSBOBTENERLINEA_SMF' as SERVICIO_DESTINO,
  'Obtiene una línea de texto de un archivo. Si retorna null llegó al final del archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'PKUTLFILEMGR.GET_LINE' as SERVICIO_ORIGEN,
  'Obtiene una línea de texto de un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FSBOBTENERLINEA_SMF' as SERVICIO_DESTINO,
  'Obtiene una línea de texto de un archivo. Si retorna null se llegó al final del archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.FILEOPEN' as SERVICIO_ORIGEN,
  'Abre un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FTABRIRARCHIVO_SMF' as SERVICIO_DESTINO,
  'Abre un archivo' as DESCRIPCION_DESTINO,
  'Se debe enviar separados el directorio y el nombre del archivo' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UT_FILE.FILEOPEN' as SERVICIO_ORIGEN,
  'Abre un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FTABRIRARCHIVO_SMF' as SERVICIO_DESTINO,
  'Abre un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FOPEN' as SERVICIO_ORIGEN,
  'Abre un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FTABRIRARCHIVO_SMF' as SERVICIO_DESTINO,
  'Abre un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'PKUTLFILEMGR.FOPEN' as SERVICIO_ORIGEN,
  'Abre un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.FTABRIRARCHIVO_SMF' as SERVICIO_DESTINO,
  'Abre un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FGETATTR' as SERVICIO_ORIGEN,
  'Obtiene atributos de un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCATRIBUTOSARCHIVO_SMF' as SERVICIO_DESTINO,
  'Obtiene atributos de un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.DELETEFILE' as SERVICIO_ORIGEN,
  'Borra un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCBORRARARCHIVO_SMF' as SERVICIO_DESTINO,
  'Borra un archivo' as DESCRIPCION_DESTINO,
  'Se debe enviar separados el directorio y el nombre del archivo' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FREMOVE' as SERVICIO_ORIGEN,
  'Borra un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCBORRARARCHIVO_SMF' as SERVICIO_DESTINO,
  'Borra un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'PKUTLFILEMGR.FREMOVE' as SERVICIO_ORIGEN,
  'Borra un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCBORRARARCHIVO_SMF' as SERVICIO_DESTINO,
  'Borra un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FCLOSE_ALL' as SERVICIO_ORIGEN,
  'Cierra todos los archivos abiertos' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCCERRARARCHIVOS_SMF' as SERVICIO_DESTINO,
  'Cierra todos los archivos abiertos' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.FILECLOSE' as SERVICIO_ORIGEN,
  'Cierra un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCCERRARARCHIVO_SMF' as SERVICIO_DESTINO,
  'Cierra un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FCLOSE' as SERVICIO_ORIGEN,
  'Cierra un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCCERRARARCHIVO_SMF' as SERVICIO_DESTINO,
  'Cierra un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'PKUTLFILEMGR.FCLOSE' as SERVICIO_ORIGEN,
  'Cierra un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCCERRARARCHIVO_SMF' as SERVICIO_DESTINO,
  'Cierra un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FCOPY' as SERVICIO_ORIGEN,
  'Copia un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCCOPIAARCHIVO_SMF' as SERVICIO_DESTINO,
  'Copia un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.PUT_RAW' as SERVICIO_ORIGEN,
  'Escribe en formato binario en un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCESCRIBESEGMENTOBINARIO_SMF' as SERVICIO_DESTINO,
  'Escribe en formato binario en un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.NEW_LINE' as SERVICIO_ORIGEN,
  'Escribe finales de línea en un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCESCRIBETERMLINEA_SMF' as SERVICIO_DESTINO,
  'Escribe finales de línea en un archivo. Si se ejecuta con inuLineas > 1 fsbObtenerLinea_SMF lo interpretará como el fin del archivo.' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.PUT' as SERVICIO_ORIGEN,
  'Se usa para concatenar texto en una misma línea. Para terminarla se ejecuta NEW_LINE' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCESCRIBIRLINEASINTERM_SMF' as SERVICIO_DESTINO,
  'Se usa para concatenar texto en una misma línea. Para terminarla se ejecuta PKG_GESTIONARCHIVOS.PRCESCRIBETERMLINEA_SMF' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.FILEWRITE' as SERVICIO_ORIGEN,
  'Escribe en un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCESCRIBIRLINEA_SMF' as SERVICIO_DESTINO,
  'Escribe en un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UT_FILE.FILEWRITE' as SERVICIO_ORIGEN,
  'Escribe en un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCESCRIBIRLINEA_SMF' as SERVICIO_DESTINO,
  'Escribe en un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.PUT_LINE' as SERVICIO_ORIGEN,
  'Escribe una linea en un archivo con final de línea' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCESCRIBIRLINEA_SMF' as SERVICIO_DESTINO,
  'Escribe una linea en un archivo con final de línea' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'PKUTLFILEMGR.PUT_LINE' as SERVICIO_ORIGEN,
  'Escribe en un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCESCRIBIRLINEA_SMF' as SERVICIO_DESTINO,
  'Escribe en un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.GET_RAW' as SERVICIO_ORIGEN,
  'Obtiene una sección binaria de un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCOBTIENESEGMENTOBINARIO_SMF' as SERVICIO_DESTINO,
  'Obtiene una sección binaria de un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FRENAME' as SERVICIO_ORIGEN,
  'Renombra un archivo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCRENOMBRAARCHIVO_SMF' as SERVICIO_DESTINO,
  'Renombre un archivo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'GE_BOFILEMANAGER.CHECKFILEISEXISTING' as SERVICIO_ORIGEN,
  'Si el archivo no existe eleva mensaje de error' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.PRCVALIDAEXISTEARCHIVO_SMF' as SERVICIO_DESTINO,
  'Si el archivo no existe eleva mensaje de error' as DESCRIPCION_DESTINO,
  'Se debe enviar separados el directorio y el nombre del archivo.Si el archivo no existe eleva mensaje de error' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FILE_TYPE' as SERVICIO_ORIGEN,
  'Tipo de dato para archivos' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_GESTIONARCHIVOS.STYARCHIVO' as SERVICIO_DESTINO,
  'Tipo de dato para archivos' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.FFLUSH' as SERVICIO_ORIGEN,
  'Escribe el buffer en el archivo' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'UTL_FILE.FFLUSH' as SERVICIO_DESTINO,
  'Escribe el buffer en el archivo' as DESCRIPCION_DESTINO,
  'Se quita FFLUSH y en los PUT_LINE el parámetro iblInmediato se envía TRUE' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;
  
MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.INTERNAL_ERROR' as SERVICIO_ORIGEN,
  'Excepción UTL_FILE' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'PKG_ERROR.CONTROLLED_ERROR' as SERVICIO_DESTINO,
  'Excepción controlada' as DESCRIPCION_DESTINO,
  'Capturar el mensaje de error con PKG_ERROR.GETERROR y usarlo si se necesita' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.INVALID_FILEHANDLE' as SERVICIO_ORIGEN,
  'Excepción UTL_FILE' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'PKG_ERROR.CONTROLLED_ERROR' as SERVICIO_DESTINO,
  'Excepción controlada' as DESCRIPCION_DESTINO,
  'Capturar el mensaje de error con PKG_ERROR.GETERROR y usarlo si se necesita' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.INVALID_FILENAME' as SERVICIO_ORIGEN,
  'Excepción UTL_FILE' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'PKG_ERROR.CONTROLLED_ERROR' as SERVICIO_DESTINO,
  'Excepción controlada' as DESCRIPCION_DESTINO,
  'Capturar el mensaje de error con PKG_ERROR.GETERROR y usarlo si se necesita' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.INVALID_MODE' as SERVICIO_ORIGEN,
  'Excepción UTL_FILE' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'PKG_ERROR.CONTROLLED_ERROR' as SERVICIO_DESTINO,
  'Excepción controlada' as DESCRIPCION_DESTINO,
  'Capturar el mensaje de error con PKG_ERROR.GETERROR y usarlo si se necesita' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.INVALID_OPERATION' as SERVICIO_ORIGEN,
  'Excepción UTL_FILE' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'PKG_ERROR.CONTROLLED_ERROR' as SERVICIO_DESTINO,
  'Excepción controlada' as DESCRIPCION_DESTINO,
  'Capturar el mensaje de error con PKG_ERROR.GETERROR y usarlo si se necesita' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.INVALID_PATH' as SERVICIO_ORIGEN,
  'Excepción UTL_FILE' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'PKG_ERROR.CONTROLLED_ERROR' as SERVICIO_DESTINO,
  'Excepción controlada' as DESCRIPCION_DESTINO,
  'Capturar el mensaje de error con PKG_ERROR.GETERROR y usarlo si se necesita' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.READ_ERROR' as SERVICIO_ORIGEN,
  'Excepción UTL_FILE' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'PKG_ERROR.CONTROLLED_ERROR' as SERVICIO_DESTINO,
  'Excepción controlada' as DESCRIPCION_DESTINO,
  'Capturar el mensaje de error con PKG_ERROR.GETERROR y usarlo si se necesita' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'UTL_FILE.WRITE_ERROR' as SERVICIO_ORIGEN,
  'Excepción UTL_FILE' as DESCRIPCION_ORIGEN,
  'OPEN' as ESQUEMA_DESTINO,
  'PKG_ERROR.CONTROLLED_ERROR' as SERVICIO_DESTINO,
  'Excepción controlada' as DESCRIPCION_DESTINO,
  'Capturar el mensaje de error con PKG_ERROR.GETERROR y usarlo si se necesita' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;  

COMMIT;

END;
/