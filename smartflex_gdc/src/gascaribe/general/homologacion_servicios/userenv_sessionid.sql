BEGIN
MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'USERENV(''SESSIONID'')' as SERVICIO_ORIGEN,
  'Consultar identificador de la sesion' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_SESSION.FNUGETSESION' as SERVICIO_DESTINO,
  'Consultar identificador de la sesion' as DESCRIPCION_DESTINO,
  'Se cambia select into variable por variable := PKG_SESSION.FNUGETSESION' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'USERENV(''TERMINAL'')' as SERVICIO_ORIGEN,
  'Obtiene el terminal' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_SESSION.FSBGETTERMINAL' as SERVICIO_DESTINO,
  'Obtiene el terminal' as DESCRIPCION_DESTINO,
  'Reemplazar select userenv into sbVariable po sbVariable := PKG_SESSION.FSBGETTERMINAL' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'SYS_CONTEXT(''USERENV'',''MODULE'')' as SERVICIO_ORIGEN,
  'Obtiene el módulo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_SESSION.FSBOBTENERMODULO' as SERVICIO_DESTINO,
  'Obtiene el módulo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'SYS_CONTEXT(''USERENV'',''IP_ADDRESS'')' as SERVICIO_ORIGEN,
  'Obtiene la dirección IP' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_SESSION.GETIP' as SERVICIO_DESTINO,
  'Obtiene la dirección IP' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'SYS_CONTEXT(''USERENV'', ''MODULE'')' as SERVICIO_ORIGEN,
  'Obtiene el módulo' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_SESSION.FSBOBTENERMODULO' as SERVICIO_DESTINO,
  'Obtiene el módulo' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'SYS_CONTEXT(''USERENV'',''TERMINAL'')' as SERVICIO_ORIGEN,
  'Obtiene el terminal' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_SESSION.FSBGETTERMINAL' as SERVICIO_DESTINO,
  'Obtiene el terminal' as DESCRIPCION_DESTINO,
  'Reemplazar select userenv into sbVariable po sbVariable := PKG_SESSION.FSBGETTERMINAL' as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

COMMIT;
END;
/