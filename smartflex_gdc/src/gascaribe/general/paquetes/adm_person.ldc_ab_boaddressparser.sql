CREATE OR REPLACE PACKAGE adm_person.LDC_AB_BOADDRESSPARSER
IS

    FUNCTION FSBVERSION  RETURN VARCHAR2;

    PROCEDURE CHECKSYNTAX
    (
        ADDRESS IN VARCHAR2,
        INGEOLOCATION IN NUMBER,
        ADDRESSPARSED OUT VARCHAR2,
        NUERRORCODE OUT NUMBER,
        SBERRORMESSAGE OUT VARCHAR2
    );

    PROCEDURE CHECKSYNTAX
    (
        ADDRESS           IN  VARCHAR2,
        INGEOLOCATION     IN  NUMBER,
        ADDRESSPARSED     OUT VARCHAR2
    );

    PROCEDURE INSERTADDRESS
    (
        ADDRESS IN VARCHAR2,
        INGEOLOCATION IN NUMBER,
        PARSERID IN NUMBER,
        INUNEIGHBORHOODID IN NUMBER,
        ADDRESSPARSED OUT VARCHAR2,
        NUERRORCODE OUT NUMBER,
        SBERRORMESSAGE OUT VARCHAR2,
        ISBISURBAN IN VARCHAR2
    );

    PROCEDURE SPLITADDRESS
    (
        ISBADDRESS IN VARCHAR2,
        INUGEOLOCATION IN NUMBER,
        OSBADDRESSPARSED OUT VARCHAR2,
        ONUWAYID OUT NUMBER,
        ONUWAYTYPE OUT NUMBER,
        ONUWAYNUMBER OUT NUMBER,
        OSBWAYLETTER OUT VARCHAR2,
        OSBWAYGEOSECTOR OUT VARCHAR2,
        ONUCROSSWAYID OUT NUMBER,
        ONUCROSSWAYTYPE OUT NUMBER,
        ONUCROSSWAYNUMBER OUT NUMBER,
        OSBCROSSWAYLETTER OUT VARCHAR2,
        OSBCROSSWAYGEOSECTOR OUT VARCHAR2,
        OSBISURBAN OUT VARCHAR2,
        ONUHOUSENUMBER OUT NUMBER,
        OSBHOUSELETTER OUT VARCHAR2,
        OSBADDRESSCOMPLEMENT OUT VARCHAR2,
        OSBSEGMENTDESC OUT VARCHAR2,
        ONUERRORCODE OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    );



    /***************/
    PROCEDURE CREAACTUALIZADIRECCION
    (
        INUGEOGRAPLOCATIONID    IN  AB_ADDRESS.GEOGRAP_LOCATION_ID%TYPE,
        ISBADDRESS              IN  AB_ADDRESS.ADDRESS%TYPE,
        INUNEIGHBORTHOODID      IN  AB_ADDRESS.NEIGHBORTHOOD_ID%TYPE,
        ISBISURBAN              IN  VARCHAR2 DEFAULT NULL,
        ONUADDRESSID            OUT AB_ADDRESS.ADDRESS_ID%TYPE,
        OSBADDRESSPARSED        OUT AB_ADDRESS.ADDRESS_PARSED%TYPE,
        ONUFATHERADDID          out ab_address.address_id%type,
        ISBVERIFIED             IN  AB_ADDRESS.VERIFIED%TYPE DEFAULT 'N'
    );



END LDC_AB_BOADDRESSPARSER;
/
CREATE OR REPLACE PACKAGE BODY adm_person.LDC_AB_BOAddressParser
IS

    CSBVERSION           CONSTANT VARCHAR2(20) := 'OSF-2884';
    CNUMAXLENGHT         CONSTANT NUMBER       := 7221;
    CNUISURBANVAL        CONSTANT NUMBER       := 4414;
    CNUNULL_VALUE        CONSTANT NUMBER       := 7352;
    CNUVALDATA           CONSTANT NUMBER       := 14982;
    CNUASSINGLEVEL       CONSTANT NUMBER       := 1316;
    CNUVALGELOLOCA       CONSTANT NUMBER       := 10281;
    CNUVALNEIGH          CONSTANT NUMBER       := 120091;
    CNUNEIBYGEOLOC       CONSTANT NUMBER       := 4101;
    CNUVALGELONEIGB      CONSTANT NUMBER       := 9882;
    CSBNEIGB             CONSTANT VARCHAR2(25) := 'Barrio';
    CSBISURBAN           CONSTANT VARCHAR2(25) := 'URBANO O RURAL ';
    CSBGEOLOCATION       CONSTANT VARCHAR2(25) := 'Ubicación Geográfica';
    CSBADDRESS           CONSTANT VARCHAR2(25) := 'Dirección';
    CSBASINGGEOLOC       CONSTANT VARCHAR2(50) := 'La Ubicación Geográfica ingresada';


    CNUERR10456          CONSTANT NUMBER       := 10456;
    CNUNOWAIT            CONSTANT NUMBER(1)    := 1;

    CNUMINUS_ONE_NOT_EXIST CONSTANT NUMBER := -1;

    FUNCTION FSBVERSION  RETURN VARCHAR2 IS
    BEGIN
        RETURN CSBVERSION;
    END;


    PROCEDURE CHECKSYNTAX
    (
        ADDRESS           IN  VARCHAR2,
        INGEOLOCATION     IN  NUMBER,
        ADDRESSPARSED     OUT VARCHAR2
    )
    IS

		RCDIRPARSEADA AB_BOPARSER.TYRCDIRPARSEADA;
    BEGIN

		AB_BOADDRESSPARSER.VALIDGEOGRALOCATION (INGEOLOCATION);

        IF GE_BOPARAMETER.FSBGET(AB_BOCONSTANTS.CSBPARSEABLE) = GE_BOCONSTANTS.GETYES THEN

            AB_BOPARSER.CHECKSYNTAX
            (
                ADDRESS,
                INGEOLOCATION,
                RCDIRPARSEADA
            );

            ADDRESSPARSED := RCDIRPARSEADA.SBDIRPARSEADA;

        ELSE
            ADDRESSPARSED := ADDRESS;
        END IF;


    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            RAISE;
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END;


    PROCEDURE CHECKSYNTAX
    (
        ADDRESS           IN  VARCHAR2,
        INGEOLOCATION     IN  NUMBER,
        ADDRESSPARSED     OUT VARCHAR2,
        NUERRORCODE       OUT NUMBER,
        SBERRORMESSAGE    OUT VARCHAR2
    )
	IS

		RCDIRPARSEADA AB_BOPARSER.TYRCDIRPARSEADA;
    BEGIN

        GE_BOUTILITIES.INITIALIZEOUTPUT(NUERRORCODE,SBERRORMESSAGE);

        CHECKSYNTAX
        (
            ADDRESS           ,
            INGEOLOCATION     ,
            ADDRESSPARSED
        );

        NUERRORCODE := 0;
        SBERRORMESSAGE := '';

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(NUERRORCODE, SBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(NUERRORCODE, SBERRORMESSAGE);
    END CHECKSYNTAX;



    PROCEDURE INSERTADDRESS
    (
        ADDRESS           IN  VARCHAR2,
        INGEOLOCATION     IN  NUMBER,
        PARSERID          IN  NUMBER,
        INUNEIGHBORHOODID IN  NUMBER,
        ADDRESSPARSED     OUT VARCHAR2,
        NUERRORCODE       OUT NUMBER,
        SBERRORMESSAGE    OUT VARCHAR2,
        ISBISURBAN        IN  VARCHAR2
    )
	IS

		NUADDRESSID       AB_ADDRESS.ADDRESS_ID%TYPE;
    BEGIN

        GE_BOUTILITIES.INITIALIZEOUTPUT(NUERRORCODE,SBERRORMESSAGE);
		AB_BOADDRESSPARSER.VALIDGEOGRALOCATION (INGEOLOCATION);


        IF GE_BOPARAMETER.FSBGET(AB_BOCONSTANTS.CSBPARSEABLE) = GE_BOCONSTANTS.GETYES THEN

            NUADDRESSID := PARSERID;

            AB_BOPARSER.INSERTADDRESS
            (
                INGEOLOCATION,
                ADDRESS,
                INUNEIGHBORHOODID,
                ISBISURBAN,
                NUADDRESSID,
                ADDRESSPARSED
            );

        ELSE
            AB_BOADDRESS.INSADDRESSWITHOUTPARSER (
                INGEOLOCATION,
                ADDRESS,
                INUNEIGHBORHOODID,
                PARSERID,
                ADDRESSPARSED,
                ISBISURBAN
            );

        END IF;
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(NUERRORCODE, SBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(NUERRORCODE, SBERRORMESSAGE);
    END INSERTADDRESS;


    PROCEDURE VALIDARDATOSCREAACT
    (
        INUGEOGRAPLOCATIONID    IN  AB_ADDRESS.GEOGRAP_LOCATION_ID%TYPE,
        ISBADDRESS              IN  AB_ADDRESS.ADDRESS%TYPE,
        INUNEIGHBORTHOODID      IN  AB_ADDRESS.NEIGHBORTHOOD_ID%TYPE,
        ISBISURBAN              IN  VARCHAR2
    )
    IS
        SBUBIHIJAS   VARCHAR2(32000);
        NUNEIGTYPE   GE_GEOGRA_LOCATION.GEOG_LOCA_AREA_TYPE%TYPE;
        NUGEOLOCTYPE GE_GEOGRA_LOCATION.GEOG_LOCA_AREA_TYPE%TYPE;
    BEGIN
        UT_TRACE.TRACE('Inicia AB_BOAddressParser.ValidarDatosCreaAct. Direcci?n:['||ISBADDRESS||']',2);
        UT_TRACE.TRACE('Ubicaci?n:['||INUGEOGRAPLOCATIONID||']Urbana:['||ISBISURBAN||']',3);


        IF  (ISBADDRESS IS NULL) THEN
            ERRORS.SETERROR(CNUERR10456);
            RAISE EX.CONTROLLED_ERROR;
        ELSE

            IF  (LENGTH(ISBADDRESS) > 200) THEN
                ERRORS.SETERROR(CNUMAXLENGHT,CSBADDRESS );
                RAISE EX.CONTROLLED_ERROR;
            END IF;
        END IF;

       IF (INUGEOGRAPLOCATIONID IS NULL) THEN
            ERRORS.SETERROR(CNUNULL_VALUE, CSBGEOLOCATION);
            RAISE EX.CONTROLLED_ERROR;
        ELSE
           IF (LENGTH(INUGEOGRAPLOCATIONID)>6) THEN
               ERRORS.SETERROR(CNUMAXLENGHT,CSBGEOLOCATION);
               RAISE EX.CONTROLLED_ERROR;
           END IF;
           IF (NOT DAGE_GEOGRA_LOCATION.FBLEXIST(INUGEOGRAPLOCATIONID)) THEN
               ERRORS.SETERROR(CNUVALDATA,CSBGEOLOCATION);
               RAISE EX.CONTROLLED_ERROR;
           END IF;
           IF DAGE_GEOGRA_LOCATION.FSBGETASSIGN_LEVEL(INUGEOGRAPLOCATIONID) != GE_BOCONSTANTS.GETYES THEN
               ERRORS.SETERROR(CNUASSINGLEVEL, CSBASINGGEOLOC);
               RAISE EX.CONTROLLED_ERROR;
           END IF;
           IF DAGE_GEOGRA_LOCATION.FNUGETGEOG_LOCA_AREA_TYPE(INUGEOGRAPLOCATIONID) <> AB_BOCONSTANTS.FNUOBTTIPOUBICACIONLOC THEN
               ERRORS.SETERROR(CNUVALGELOLOCA, INUGEOGRAPLOCATIONID);
               RAISE EX.CONTROLLED_ERROR;
           END IF;
        END IF;


        UT_TRACE.TRACE('valido el barrio: '|| INUNEIGHBORTHOODID, 5);
        IF INUNEIGHBORTHOODID IS NOT NULL THEN
            IF LENGTH(INUNEIGHBORTHOODID) > 6 THEN
                ERRORS.SETERROR(CNUMAXLENGHT, CSBNEIGB);
                RAISE EX.CONTROLLED_ERROR;
            END IF;
            NUNEIGTYPE   := DAGE_GEOGRA_LOCATION.FNUGETGEOG_LOCA_AREA_TYPE(INUNEIGHBORTHOODID);
            NUGEOLOCTYPE := AB_BOCONSTANTS.FNUOBTTIPOUBICACIONBARRIO;
            IF NUNEIGTYPE <> NUGEOLOCTYPE THEN
                ERRORS.SETERROR(CNUVALGELONEIGB);
                RAISE EX.CONTROLLED_ERROR;
            END IF;
            IF NOT DAGE_GEOGRA_LOCATION.FBLEXIST(INUNEIGHBORTHOODID) THEN
                ERRORS.SETERROR(CNUVALNEIGH, INUNEIGHBORTHOODID);
                RAISE EX.CONTROLLED_ERROR;
            END IF;


            IF (
                    NOT GE_BOGEOGRA_LOCATION.FBLISFATHERGEOLOCATION
                    (
                      INUNEIGHBORTHOODID,
                      INUGEOGRAPLOCATIONID,
                      AB_BOCONSTANTS.CSBTOKEN_LOCALIDAD
                    )
                )
            THEN
                ERRORS.SETERROR(CNUNEIBYGEOLOC, ' '||INUNEIGHBORTHOODID||'|'||INUGEOGRAPLOCATIONID );
                RAISE EX.CONTROLLED_ERROR;
            END IF;
        END IF;

        IF  ISBISURBAN IS NOT NULL THEN
            IF  (LENGTH(ISBISURBAN) > 1) THEN
                ERRORS.SETERROR(CNUMAXLENGHT,CSBISURBAN);
                RAISE EX.CONTROLLED_ERROR;
            END IF;
            IF ISBISURBAN NOT IN (GE_BOCONSTANTS.GETYES,GE_BOCONSTANTS.GETNO ) THEN
                ERRORS.SETERROR(CNUISURBANVAL, ' '||ISBISURBAN||'|'||CSBISURBAN  );
                RAISE EX.CONTROLLED_ERROR;
            END IF;
        ELSE
                ERRORS.SETERROR(CNUNULL_VALUE,CSBISURBAN);
                RAISE EX.CONTROLLED_ERROR;
        END IF;

        UT_TRACE.TRACE('Finaliza: AB_BOAddressParser.ValidarDatosCreaAct',2);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			RAISE EX.CONTROLLED_ERROR;
    END VALIDARDATOSCREAACT;



    PROCEDURE SPLITADDRESS
    (
        ISBADDRESS IN VARCHAR2,
        INUGEOLOCATION IN NUMBER,
        OSBADDRESSPARSED OUT VARCHAR2,
        ONUWAYID OUT NUMBER,
        ONUWAYTYPE OUT NUMBER,
        ONUWAYNUMBER OUT NUMBER,
        OSBWAYLETTER OUT VARCHAR2,
        OSBWAYGEOSECTOR OUT VARCHAR2,
        ONUCROSSWAYID OUT NUMBER,
        ONUCROSSWAYTYPE OUT NUMBER,
        ONUCROSSWAYNUMBER OUT NUMBER,
        OSBCROSSWAYLETTER OUT VARCHAR2,
        OSBCROSSWAYGEOSECTOR OUT VARCHAR2,
        OSBISURBAN OUT VARCHAR2,
        ONUHOUSENUMBER OUT NUMBER,
        OSBHOUSELETTER OUT VARCHAR2,
        OSBADDRESSCOMPLEMENT OUT VARCHAR2,
        OSBSEGMENTDESC OUT VARCHAR2,
        ONUERRORCODE OUT NUMBER,
        OSBERRORMESSAGE OUT VARCHAR2
    )
	IS

		RCDIRPARSEADA  AB_BOPARSER.TYRCDIRPARSEADA;
	BEGIN

        GE_BOUTILITIES.INITIALIZEOUTPUT(ONUERRORCODE,OSBERRORMESSAGE);

        AB_BOADDRESSPARSER.VALIDGEOGRALOCATION (INUGEOLOCATION);

        AB_BOPARSER.CHECKSYNTAX
        (
            ISBADDRESS,
            INUGEOLOCATION,
            RCDIRPARSEADA
        );

        OSBADDRESSPARSED     := RCDIRPARSEADA.SBDIRPARSEADA;
        ONUWAYID             := RCDIRPARSEADA.NUPRIMERAVIA;
        IF ONUWAYID IS NOT NULL THEN
            ONUWAYTYPE       := DAAB_WAY_BY_LOCATION.FNUGETWAY_TYPE_ID(ONUWAYID);
        END IF;

        ONUCROSSWAYID        := RCDIRPARSEADA.NUSEGUNDAVIA;
        IF ONUCROSSWAYID IS NOT NULL THEN
            ONUCROSSWAYTYPE  := DAAB_WAY_BY_LOCATION.FNUGETWAY_TYPE_ID(ONUCROSSWAYID);
        END IF;

        ONUHOUSENUMBER       := RCDIRPARSEADA.NUCASA;
        OSBHOUSELETTER       := RCDIRPARSEADA.SBCASA;
        OSBADDRESSCOMPLEMENT := RCDIRPARSEADA.SBCOMPLEMENTO;

        IF RCDIRPARSEADA.NUSEGMENTO IS NOT NULL THEN
            OSBSEGMENTDESC   := ' ';
        END IF;

        ONUERRORCODE    := 0;
        OSBERRORMESSAGE := NULL;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR  THEN
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
        WHEN OTHERS THEN
            ERRORS.SETERROR;
            ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END SPLITADDRESS;


    /**********************/
    PROCEDURE CREAACTUALIZADIRECCION
    (
        INUGEOGRAPLOCATIONID    IN  AB_ADDRESS.GEOGRAP_LOCATION_ID%TYPE,
        ISBADDRESS              IN  AB_ADDRESS.ADDRESS%TYPE,
        INUNEIGHBORTHOODID      IN  AB_ADDRESS.NEIGHBORTHOOD_ID%TYPE,
        ISBISURBAN              IN  VARCHAR2 DEFAULT NULL,
        ONUADDRESSID            OUT AB_ADDRESS.ADDRESS_ID%TYPE,
        OSBADDRESSPARSED        OUT AB_ADDRESS.ADDRESS_PARSED%TYPE,
        ONUFATHERADDID          out ab_address.address_id%type,
        ISBVERIFIED             IN  AB_ADDRESS.VERIFIED%TYPE DEFAULT 'N'
    )
    IS
        RCADDRESS   DAAB_ADDRESS.STYAB_ADDRESS;
        NUZIPCODE               NUMBER;
        NUERR                   NUMBER;
        SBERR                   VARCHAR2(10000);

        SBCHILDADDRESS          VARCHAR2(1) := GE_BOCONSTANTS.CSBYES;
    BEGIN
        UT_TRACE.TRACE('Inicia LDC_AB_BOAddressParser.CreaActualizaDireccion. Direcci?n:['||ISBADDRESS||']',2);
        UT_TRACE.TRACE('Ubicaci?n:['||INUGEOGRAPLOCATIONID||']Barrio:['||INUNEIGHBORTHOODID||']',3);

        VALIDARDATOSCREAACT(INUGEOGRAPLOCATIONID,ISBADDRESS,INUNEIGHBORTHOODID,ISBISURBAN );


        LDC_AB_BOPARSER.INSERTADDRESS
        (
            INUGEOGRAPLOCATIONID,
            ISBADDRESS,
            INUNEIGHBORTHOODID,
            ISBISURBAN,
            ONUADDRESSID,
            OSBADDRESSPARSED,
            ONUFATHERADDID,
            SBCHILDADDRESS,
            ISBVERIFIED
        );

        UT_TRACE.TRACE(ONUADDRESSID||' Direcci?n Parseada:['||OSBADDRESSPARSED||']',3);
        UT_TRACE.TRACE('Finaliza: LDC_AB_BOAddressParser.CreaActualizaDireccion',2);

    EXCEPTION
		WHEN EX.CONTROLLED_ERROR THEN
            RAISE;
		WHEN OTHERS THEN
			ERRORS.SETERROR;
			RAISE EX.CONTROLLED_ERROR;

    END CREAACTUALIZADIRECCION;


END LDC_AB_BOAddressParser;
/
Prompt Otorgando permisos sobre ADM_PERSON.LDC_AB_BOAddressParser
BEGIN
    pkg_Utilidades.prAplicarPermisos(upper('LDC_AB_BOAddressParser'), 'ADM_PERSON');
END;
/
GRANT EXECUTE on adm_person.LDC_AB_BOADDRESSPARSER to REXEOPEN;
/