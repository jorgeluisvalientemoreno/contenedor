CREATE OR REPLACE PROCEDURE adm_person.prguardatmpcausal IS
    /***************************************************************
    Historia de Modificaciones
    Fecha           Autor               Modificacion
    ============    =================== ====================
    08/05/2024      Adrianavg            OSF-2668: Se migra del esquema OPEN al esquema ADM_PERSON
    ******************************************************************/
 NUORDENINSTANCIA OPEN.OR_ORDER.ORDER_ID%TYPE;
 NUCAUSAL         OPEN.OR_ORDER.CAUSAL_ID%TYPE;
 NUTIPOTRAB       OPEN.OR_ORDER.TASK_TYPE_ID%TYPE;
 PTIPOCONT		    OPEN.LD_PARAMETER.VALUE_CHAIN%TYPE;
 VALTIPC          NUMBER;
BEGIN
  ut_trace.trace('PRGUARDATMPCAUSAL=> ENTRO',10);

  NUORDENINSTANCIA := OR_BOLEGALIZEORDER.FNUGETCURRENTORDER;
    NUCAUSAL         := DAOR_ORDER.FNUGETCAUSAL_ID(NUORDENINSTANCIA,NULL);
    NUTIPOTRAB       := DAOR_ORDER.FNUGETTASK_TYPE_ID(NUORDENINSTANCIA,NULL);
    ut_trace.trace('PRGUARDATMPCAUSAL=> NUORDENINSTANCIA' ||NUORDENINSTANCIA,10);
    ut_trace.trace('PRGUARDATMPCAUSAL=> NUCAUSAL' ||NUCAUSAL,10);
    ut_trace.trace('PRGUARDATMPCAUSAL=> NUTIPOTRAB' ||NUTIPOTRAB,10);


    IF  DALD_PARAMETER.FSBGETVALUE_CHAIN('LDC_ASIGCONT', NULL) ='S' THEN

        PTIPOCONT := OPEN.DALD_PARAMETER.FSBGETVALUE_CHAIN('LDC_CONTIPOCONT', NULL);

        IF PTIPOCONT IS NOT NULL THEN
          SELECT SUM(CANT)  INTO VALTIPC
          FROM (SELECT COUNT(1) CANT
          FROM OPEN.CT_TASKTYPE_CONTYPE CT, OPEN.GE_CONTRATO C
          WHERE CT.FLAG_TYPE IN ('C')
          AND CT.TASK_TYPE_ID = NUTIPOTRAB
          AND CT.CONTRACT_ID = C.ID_CONTRATO
          AND C.STATUS = CT_BOCONSTANTS.FSBGETOPENSTATUS
          AND C.ID_TIPO_CONTRATO  IN (SELECT TO_NUMBER(COLUMN_VALUE) FROM TABLE(OPEN.LDC_BOUTILITIES.SPLITSTRINGS(PTIPOCONT, ',')))
          UNION ALL
          SELECT COUNT(1) CANT
          FROM OPEN.CT_TASKTYPE_CONTYPE CT, OPEN.GE_CONTRATO C
          WHERE CT.FLAG_TYPE IN ('T')
          AND CT.TASK_TYPE_ID = NUTIPOTRAB
          AND C.ID_TIPO_CONTRATO = CT.CONTRACT_TYPE_ID
          AND C.STATUS = CT_BOCONSTANTS.FSBGETOPENSTATUS
          AND C.ID_TIPO_CONTRATO  IN (SELECT TO_NUMBER(COLUMN_VALUE) FROM TABLE(OPEN.LDC_BOUTILITIES.SPLITSTRINGS(PTIPOCONT, ',')))
          AND NOT EXISTS(SELECT NULL FROM OPEN.CT_TASKTYPE_CONTYPE CT2 WHERE CT2.CONTRACT_ID =C.ID_CONTRATO AND CT2.FLAG_TYPE IN ('C'))
          );

        END IF;

       IF (VALTIPC > 0 OR PTIPOCONT IS NULL) THEN

          ut_trace.trace('PRGUARDATMPCAUSAL=> REGISTRA ORDEN',10);
          IF NUCAUSAL IS NOT NULL THEN
            UPDATE OR_ORDER_CAUSAL_TMP
               SET CAUSAL_ID=NUCAUSAL
             WHERE ORDER_ID=NUORDENINSTANCIA;
             IF SQL%NOTFOUND THEN
                INSERT INTO OR_ORDER_CAUSAL_TMP(ORDER_ID, CAUSAL_ID) VALUES(NUORDENINSTANCIA,NUCAUSAL);
             END IF;
          END IF;
       END IF;
    END IF;
exception
     when others then
       null;

END Prguardatmpcausal;
/
PROMPT OTORGA PERMISOS ESQUEMA sobre funcion PRGUARDATMPCAUSAL
BEGIN
    pkg_utilidades.prAplicarPermisos('PRGUARDATMPCAUSAL', 'ADM_PERSON'); 
END;
/
