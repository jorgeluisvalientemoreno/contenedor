CREATE OR REPLACE PROCEDURE PR_CODEUDOR_ROLLOUT (nuInicio number, nuFinal number, nuBD number) AS
  /*******************************************************************
  PROGRAMA     : PR_CODEUDOR_ROLLOUT
  FECHA        : 01/09/2014
  AUTOR        : OLSoftware Jennifer Giraldo
  DESCRIPCION  : Migra la informacion de los Codeudores
  
  HISTORIA DE MODIFICACIONES
        AUTOR        FECHA        DESCRIPCION
  Jennifer Giraldo 09/11/2014  se agrega insert a la tabla LDC_CODEUDOR
  
  *******************************************************************/

  vfecha_ini      DATE;
  vprograma       VARCHAR2(100);
  nuREg           NUMBER := 0;
  vcontLec        NUMBER := 0;
  vcontIns        NUMBER := 0;
  nuSUSCRIPTOR    NUMBER := 0;
  nuPromi         NUMBER := 0;
  NOMBRE          VARCHAR2(100 BYTE);
  REFERENCIA      VARCHAR2(200 BYTE);
  SQPACKAGE       NUMBER;
  SQFIITEM        NUMBER;
  SQMOTIVE        NUMBER;
  nuitemWorkOr    NUMBER;
  NUORACTI        NUMBER;
  nuCodeu         NUMBER;
  nuComplementoPR NUMBER;
  nuComplementoSU NUMBER;
  nuComplementoFA NUMBER;
  nuComplementoCU NUMBER;
  nuComplementoDI NUMBER;

  CURSOR cuCodeudor IS
    SELECT A.*,
           A.PRODUCTO_RELACIONADO + nuComplementoPR PRODUCTO,
           CASE
             WHEN A.BASEDATO IN (1, 2, 3) THEN NULL
             WHEN A.BASEDATO IN (4, 5) THEN 7055
           END PRODUCT_TYPE_ID,
           B.SUBSCRIBER_ID,
           CASE
             WHEN A.DOC_DATE_OF_ISSUE IS NULL THEN SYSDATE
             ELSE A.DOC_DATE_OF_ISSUE
           END FECHA_EXP,
           CASE 
             WHEN A.CIVIL_STATE_ID IS NULL THEN -1
             ELSE A.CIVIL_STATE_ID
           END ESTADO_CIVIL,
           CASE 
             WHEN A.GENDER IS NULL THEN 'F'
             ELSE A.GENDER
           END GENERO,
           B.ADDRESS_ID,
           A.DIFECODI DIFEGASP,
           C.DIFECODI DIFEOSF,
           D.COLOHOMO LOCALIDAD,
	   (SELECT SESUSUSC
              FROM SERVSUSC
             WHERE SESUNUSE = A.PRODUCTO_RELACIONADO) CONTRATO
      FROM MIGRA.LDC_TEMP_PERSONAS_SGE A, GE_SUBSCRIBER B, DIFERIDO C, LDC_MIG_LOCALIDAD D
     WHERE TO_CHAR(A.IDENTIFICACION) = B.IDENTIFICATION
       AND A.NOMBRE = B.SUBSCRIBER_NAME
       AND A.APELLIDO = B.SUBS_LAST_NAME
       AND A.CODEUDOR = 'C'
       AND A.BASEDATO = nuBD
       AND A.DIFECODI + nuComplementoDI = C.DIFECODI
       AND C.DIFESAPE > 0
       AND A.DEPTO_EXP = D.CODIDEPA
       AND A.LOCA_EXP = D.CODILOCA;

  -- DECLARACION DE TIPOS.
  --
  TYPE tipo_cu_datos IS TABLE OF cuCodeudor%ROWTYPE;

  -- DECLARACION DE TABLAS TIPOS.
  --
  tbl_datos tipo_cu_datos := tipo_cu_datos();

  --- Control de errores
  nuLogError  NUMBER;
  NUTOTALREGS NUMBER := 0;
  NUERRORES   NUMBER := 0;
  sw          NUMBER := 0;

BEGIN
  vprograma  := 'PR_CODEUDOR_ROLLOUT';
  vfecha_ini := SYSDATE;

  PKLOG_MIGRACION.prInsLogMigra(509,509,1,vprograma,0,0,'Inicia Proceso','INICIO',nuLogError);

  UPDATE MIGR_RANGO_PROCESOS SET RAPRFEIN = SYSDATE, RAPRTERM = 'P' WHERE RAPRCODI = 509 AND RAPRBASE = nuBD AND RAPRRAIN = nuInicio AND RAPRRAFI = nuFinal;
  COMMIT;

  PKG_CONSTANTES.COMPLEMENTO(nuBD,nuComplementoPR,nuComplementoSU,nuComplementoFA,nuComplementoCU,nuComplementoDI);

  vcontIns := 0;
  vcontLec := 0;

  OPEN cuCodeudor;

  LOOP
    --
    -- Borrar tablas   tbl_datos.
    --
    tbl_datos.delete;
  
    FETCH cuCodeudor BULK COLLECT
      INTO tbl_datos LIMIT 1000;
  
    NUTOTALREGS := NUTOTALREGS + TBL_DATOS.COUNT;
  
    FOR nuindice IN 1 .. tbl_datos.COUNT LOOP
    sw := 0;
      nuReg := 1;
      -- nuSUSCRIPTOR := TBL_DATOS(NUINDICE).SUBSCRIPTION_ID;
    
      BEGIN
        vcontLec := vcontLec + 1;
      
        nuPromi    := SEQ_LD_PROMISSORY.NEXTVAL;
        NOMBRE     := TBL_DATOS(NUINDICE).NOMBRE || ' ' || TBL_DATOS(NUINDICE).APELLIDO;
        REFERENCIA := TBL_DATOS(NUINDICE).NAME_REFERENCIA_FAMILIAR || ' ' || TBL_DATOS(NUINDICE).APELLIDO_REFERENCIA_FAMILIAR;
        SQPACKAGE  := SEQ_MO_PACKAGES.NEXTVAL;
        nuCodeu    := SEQLDC_CODEUDOR.NEXTVAL;
      
        -- INSERTA SOLICITUD BRILLA DUMMY
        INSERT /*+ APPEND*/ INTO MO_PACKAGES
          (PACKAGE_ID, REQUEST_DATE, MESSAG_DELIVERY_DATE, USER_ID, TERMINAL_ID, CLIENT_PRIVACY_FLAG, PACKAGE_TYPE_ID, MOTIVE_STATUS_ID, SUBSCRIBER_ID,
           ATTENTION_DATE, COMM_EXCEPTION, CUST_CARE_REQUES_NUM, COMPANY_ID, ORDER_ID, TAG_NAME, LIQUIDATION_METHOD, RECEPTION_TYPE_ID)
        VALUES
          (SQPACKAGE, SYSDATE, SYSDATE, 'MIGRACION', 'MIGRACION', 'N', 100264, 14, TBL_DATOS(NUINDICE).SUBSCRIBER_ID, SYSDATE, 'N', SQPACKAGE,
           99, NULL, 'P_VENTA_FNB_100264', 2, 10);
      
        INSERT INTO LD_PROMISSORY
          (PROMISSORY_ID, HOLDER_BILL, DEBTORNAME, IDENTIFICATION, IDENT_TYPE_ID, CONTRACT_TYPE_ID, FORWARDINGPLACE, FORWARDINGDATE, GENDER, CIVIL_STATE_ID,
           CATEGORY_ID, SUBCATEGORY_ID, BIRTHDAYDATE, SCHOOL_DEGREE_, ADDRESS_ID, PROPERTYPHONE_ID, DEPENDENTSNUMBER, HOUSINGTYPE, HOUSINGMONTH, HOLDERRELATION,
           OCCUPATION, COMPANYNAME, COMPANYADDRESS_ID, PHONE1_ID, PHONE2_ID, MOVILPHONE_ID, OLDLABOR, ACTIVITY, MONTHLYINCOME, EXPENSESINCOME, COMMERREFERENCE,
           PHONECOMMREFE, MOVILPHOCOMMREFE, ADDRESSCOMMREFE, FAMILIARREFERENCE, PHONEFAMIREFE, MOVILPHOFAMIREFE, ADDRESSFAMIREFE, PERSONALREFERENCE, PHONEPERSREFE,
           MOVILPHOPERSREFE, ADDRESSPERSREFE, EMAIL, PACKAGE_ID, PROMISSORY_TYPE, LAST_NAME)
        VALUES
          (nuPromi, TBL_DATOS (NUINDICE).TITUFACT, NOMBRE, TBL_DATOS (NUINDICE).IDENTIFICACION, TBL_DATOS (NUINDICE).IDENT_TYPE_ID, NULL,
           TBL_DATOS (NUINDICE).LOCALIDAD, TBL_DATOS (NUINDICE).FECHA_EXP, TBL_DATOS (NUINDICE).GENERO, TBL_DATOS (NUINDICE).ESTADO_CIVIL, NULL, NULL,
           TBL_DATOS (NUINDICE).FECHA_NACIMIENTO, TBL_DATOS (NUINDICE).SCHOOL_DEGREE_ID, TBL_DATOS (NUINDICE).ADDRESS_ID, TBL_DATOS (NUINDICE).TELEFONO,
           TBL_DATOS (NUINDICE).NUMBER_DEPEND_PEOPLE, TBL_DATOS (NUINDICE).HOUSE_TYPE_ID, TBL_DATOS (NUINDICE).YEARS_LIVING_HOUSE, NULL, TBL_DATOS (NUINDICE).OCCUPATION,
           TBL_DATOS (NUINDICE).COMPANY, NULL, TBL_DATOS (NUINDICE).TELEOFIC, TBL_DATOS (NUINDICE).TELECELU, NULL, TBL_DATOS (NUINDICE).WORKED_TIME, NULL, TBL_DATOS (NUINDICE).WAGE_SCALE_ID,
           TBL_DATOS (NUINDICE).DEBIT_SCALE_ID, NULL, NULL, NULL, NULL, REFERENCIA, TBL_DATOS (NUINDICE).PHONE_REFERENCIA_FAMILIAR, NULL, NULL, NULL, NULL, NULL, NULL,
           TBL_DATOS (NUINDICE).MAIL, SQPACKAGE, TBL_DATOS (NUINDICE).CODEUDOR, NULL);
	   
	INSERT INTO LDC_CODEUDOR
	  (PACKAGE_ID, IDEN_TYPE_CODEUDOR, IDENT_TYPE_DEUDOR, IDENT_DEUDOR, IDEN_CODEUDOR, CONTRATO, CODIGO, CODEUDOR_SOLIDARIO)
	VALUES 
	  (SQPACKAGE, TBL_DATOS (NUINDICE).IDENT_TYPE_ID, TBL_DATOS (NUINDICE).ID_TYPE_DUEDOR, TBL_DATOS (NUINDICE).ID_DEUDOR , 
	  TBL_DATOS (NUINDICE).IDENTIFICACION, TBL_DATOS (NUINDICE).CONTRATO, nuCodeu, NULL);
      
        vcontIns := vcontIns + 1;
        COMMIT;
            EXCEPTION
              WHEN OTHERS THEN
                BEGIN
                  ROLLBACK;
                  sw        := 1;
                  NUERRORES := NUERRORES + 1;
                  PKLOG_MIGRACION.prInsLogMigra(509,509,2,'PASO1:',0,0,'Error: CEDULA: ' || TBL_DATOS(NUINDICE).IDENTIFICACION || ':: ' ||sqlerrm || ' ' ||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,to_char(sqlcode),nuLogError);
                END; 
      END;
      
      IF sw = 0 THEN
      
        BEGIN
        
          SQFIITEM := SEQ_LD_NON_BAN_FI_ITEM.NEXTVAL;
          SQMOTIVE := SEQ_MO_MOTIVE.NEXTVAL;
        
          INSERT INTO MO_MOTIVE
            (MOTIVE_ID, PRIVACY_FLAG, CLIENT_PRIVACY_FLAG, PROVISIONAL_FLAG, IS_MULT_PRODUCT_FLAG, AUTHORIZ_LETTER_FLAG, PARTIAL_FLAG, PROV_INITIAL_DATE,
             PROV_FINAL_DATE, INITIAL_PROCESS_DATE, PRIORITY, MOTIV_RECORDING_DATE, ESTIMATED_INST_DATE, ASSIGN_DATE, ATTENTION_DATE, ANNUL_DATE, STATUS_CHANGE_DATE,
             STUDY_NUM_TRANSFEREN, CUSTOM_DECISION_FLAG, EXECUTION_MAX_DATE, STANDARD_TIME, SERVICE_NUMBER, PRODUCT_MOTIVE_ID, DISTRIBUT_ADMIN_ID, DISTRICT_ID,
             BUILDING_ID, ANNUL_CAUSAL_ID, PRODUCT_ID, MOTIVE_TYPE_ID, PRODUCT_TYPE_ID, MOTIVE_STATUS_ID, SUBSCRIPTION_ID, PACKAGE_ID, UNDOASSIGN_CAUSAL_ID,
             GEOGRAP_LOCATION_ID, CREDIT_LIMIT, CREDIT_LIMIT_COVERED, CUST_CARE_REQUES_NUM, VALUE_TO_DEBIT, TAG_NAME, ORGANIZAT_AREA_ID, COMMERCIAL_PLAN_ID,
             PERMANENCE, COMPANY_ID, INCLUDED_FEATURES_ID, RECEPTION_TYPE_ID, CAUSAL_ID, ASSIGNED_PERSON_ID, ANSWER_ID, CATEGORY_ID, SUBCATEGORY_ID, IS_IMMEDIATE_ATTENT, ELEMENT_POSITION)
          VALUES
            (SQMOTIVE, 'N', 'N', 'N', 'N', 'N', 'N', NULL, NULL, NULL, 100, SYSDATE, NULL, NULL, NULL, NULL, NULL, NULL,'N', SYSDATE, 0, NULL, 100271, NULL,
             NULL, NULL, NULL, TBL_DATOS(NUINDICE).PRODUCTO, 145, TBL_DATOS(NUINDICE).PRODUCT_TYPE_ID, 11, NULL, SQPACKAGE, NULL, NULL, NULL, NULL, SQPACKAGE,
             NULL, 'M_INSTALACION_DE_GAS_100271', NULL, 38, NULL, 99, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Y', NULL);
        
          INSERT INTO LD_NON_BA_FI_REQU
            (NON_BA_FI_REQU_ID, FIRST_BILL_ID, SECOND_BILL_ID, CREDIT_QUOTA, USED_QUOTE, USED_EXTRA_QUOTE, MANUAL_QUOTA_USED, TAKE_GRACE_PERIOD,
             DELIVERY_POINT, PAYMENT, TRASFER_QUOTA, SALE_DATE, DIGITAL_PROM_NOTE_CONS, MANUAL_PROM_NOTE_CONS, SALES_STATUS, QUOTA_APROX_MONTH,
             VALUE_APROX_INSURANCE, VALUE_TOTAL)
          VALUES
            (SQPACKAGE, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
        
          INSERT INTO LD_NON_BAN_FI_ITEM
            (NON_BAN_FI_ITEM_ID, NON_BA_FI_REQU_ID, ARTICLE_ID, UNIT_VALUE, AMOUNT, QUOTAS_NUMBER, FIRST_PAYMENT_DATE, FINAN_PLAN_ID, VAT, SUPPLIER_ID)
          VALUES
            (SQMOTIVE, SQPACKAGE,
             3305, --SE DEBE DEINIFRI ARTICLE_ID
             100, --SE DEBE DEFINIR UNIT_VALUE
             12, --SE DEBE DEFINIR AMOUNT
             2, --SE DEBE DEFINIR QUOTAS_NUMBER
             SYSDATE, -- SE DEBE DEFINIR FIRST_PAYMENT_DATE
             80, --SE DEBE DEFINIR FINAN_PLAN_ID
             20, --SE DEBE DEFINIR VAT
             4); --SE DEBE DEFINIR SUPPLIER_ID
        
            EXCEPTION
              WHEN OTHERS THEN
                BEGIN
                  NUERRORES := NUERRORES + 1;
                  PKLOG_MIGRACION.prInsLogMigra(509,509,2,'PASO2:',0,0,'Error: CEDULA: ' || TBL_DATOS(NUINDICE).IDENTIFICACION || ':: ' ||sqlerrm || ' ' ||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,to_char(sqlcode),nuLogError);
                END;
        END;
      
        BEGIN
        
          nuitemWorkOr := SEQ_LD_ITEM_WORK_ORDER.NEXTVAL;
          NUORACTI     := SEQ_OR_ORDER_ACTIVITY.NEXTVAL;
        
          INSERT /*+ APPEND */
          INTO OR_ORDER_ACTIVITY
            (ORDER_ACTIVITY_ID, ORDER_ITEM_ID, ORDER_ID, STATUS, TASK_TYPE_ID, PACKAGE_ID, MOTIVE_ID, COMPONENT_ID, INSTANCE_ID, ADDRESS_ID, ELEMENT_ID,
             SUBSCRIBER_ID, SUBSCRIPTION_ID, PRODUCT_ID, OPERATING_SECTOR_ID, EXEC_ESTIMATE_DATE, OPERATING_UNIT_ID, COMMENT_, PROCESS_ID, ACTIVITY_ID,
             ORIGIN_ACTIVITY_ID, ACTIVITY_GROUP_ID, SEQUENCE_, REGISTER_DATE, FINAL_DATE, VALUE1, VALUE2, VALUE3, VALUE4, COMPENSATED, ORDER_TEMPLATE_ID,
             CONSECUTIVE, SERIAL_ITEMS_ID, LEGALIZE_TRY_TIMES, WF_TAG_NAME, VALUE_REFERENCE)
          VALUES
            (NUORACTI, NULL, NULL, 'F', 12590, SQPACKAGE, NULL, NULL, NULL, TBL_DATOS(NUINDICE).ADDRESS_ID, NULL, TBL_DATOS(NUINDICE).SUBSCRIBER_ID,
             NULL, TBL_DATOS(NUINDICE).PRODUCTO, NULL, NULL, NULL, NULL, NULL, 4000822, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
             NULL, NULL, NULL, NULL, NULL, NULL);
        
          INSERT INTO LD_ITEM_WORK_ORDER
            (ITEM_WORK_ORDER_ID, ARTICLE_ID, ORDER_ACTIVITY_ID, AMOUNT, VALUE, IVA, CREDIT_FEES, INSTALL_REQUIRED, SUPPLIER_ID, ORDER_ID, DIFECODI,
             STATE, FINAN_PLAN_ID)
          VALUES
            (nuitemWorkOr, 3305, NUORACTI, 1, 0, 0, 0, 'N', '20', NULL, TBL_DATOS(NUINDICE).DIFEOSF, 'RE', NULL);
        
            EXCEPTION
              WHEN OTHERS THEN
                BEGIN
                  NUERRORES := NUERRORES + 1;
                  PKLOG_MIGRACION.prInsLogMigra(509,509,2,'PASO3:',0,0,'Error: CEDULA: ' || TBL_DATOS(NUINDICE).IDENTIFICACION || ':: ' ||sqlerrm || ' ' ||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,to_char(sqlcode),nuLogError);
                END;
        END;
      
      END IF;
      COMMIT;
    END LOOP;
  
    COMMIT;
  
    EXIT WHEN cuCodeudor%NOTFOUND;
  
  END LOOP;

  -- Cierra CURSOR.
  IF (cuCodeudor%ISOPEN) THEN
    --{
    CLOSE cuCodeudor;
    --}
  END IF;

  commit;
  --- Termina log
  PKLOG_MIGRACION.PRINSLOGMIGRA(509,509,3,VPROGRAMA,NUTOTALREGS,NUERRORES,'TERMINO PROCESO #regs: ' || VCONTINS,'FIN',NULOGERROR);

  UPDATE MIGR_RANGO_PROCESOS SET RAPRFEFI = SYSDATE, RAPRTERM = 'T' WHERE RAPRCODI = 509 AND RAPRBASE = nuBD AND RAPRRAIN = nuInicio AND RAPRRAFI = nuFinal;
  COMMIT;

EXCEPTION
  WHEN OTHERS THEN
    BEGIN
    
      NUERRORES := NUERRORES + 1;
      PKLOG_MIGRACION.prInsLogMigra(509,509,2,vprograma || vcontIns,0,0,' - Error: ' || sqlerrm,to_char(sqlcode),nuLogError);
    END;
  
END PR_CODEUDOR_ROLLOUT; 
/
