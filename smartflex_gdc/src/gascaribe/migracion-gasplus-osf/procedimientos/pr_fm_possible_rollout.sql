CREATE OR REPLACE PROCEDURE PR_FM_POSSIBLE_ROLLOUT (nuInicio number, nuFinal number, nuBD number) AS
  
   
  CURSOR CUNTLFRAUDES IS
  SELECT 
  NULL                                 POSSIBLE_NTL_ID,
  'F'              		       STATUS,
  B.PRODUCT_ID     		       PRODUCT_ID,
  7014             		       PRODUCT_TYPE_ID,
  A.GEOGRAP_LOCATION_ID                GEOGRAP_LOCATION_ID,
  (SELECT F.ADDRESS_ID
     FROM PR_PRODUCT F 
    WHERE F.PRODUCT_ID = B.PRODUCT_ID) ADDRESS_ID,
  A.CREATED_DATE       		       REGISTER_DATE,
  4 				       DISCOVERY_TYPE_ID,
  NULL 				       PROJECT_ID,
  A.ORDER_ID 			       ORDER_ID,
  A.LEGALIZATION_DATE 		       REVIEW_DATE,
  NULL 				       COMMENT_,
  NULL 				       VALUE_,
  1 				       PERSON_ID,
  NULL 				       PACKAGE_ID,
  NULL 				       INFORMER_SUBS_ID,
  NULL 				       NORMALIZED_PROD_ID,
  'F' 				       NTL_TYPE,
  A.CREATED_DATE 		       FRAUD_START_DATE,
  A.LEGALIZATION_DATE 		       FRAUD_END_DATE,
  NULL 				       TCONCODI,
 (SELECT EMSSELME 
    FROM ELMESESU 
   WHERE EMSSSESU = B.PRODUCT_ID  
     AND EMSSSERV = 7014 
     AND ROWNUM < 2)                   COSSELME,
  NULL 				       PNOLIQ_VERSION,
  0 				       LAST_CONS_AVG
  FROM OR_ORDER A, OR_ORDER_ACTIVITY B
  WHERE A.TASK_TYPE_ID IN (SELECT DISTINCT TRABHOMO
                                      FROM MIGRA.LDC_MIG_PARATIPO G, LDC_MIG_TIPOTRAB A
                                      WHERE G.PARACODI = 'FRAUDES'
                                      AND G.PARATITA = A.ORTRTITR)
    AND A.ORDER_ID = B.ORDER_ID
  ORDER BY B.PRODUCT_ID;
  
  
    nuLogError  number;
    nuTotalRegs number := 0;
    nuErrores 	number := 0;
    nuNtlId   	number;
    vcontIns    number;
    sbError	varchar2(4000);
    
BEGIN
	-- Inserta registro de inicio en el log
    PKLOG_MIGRACION.prInsLogMigra (512,512,1,'FM_POSSIBLE_NTL',0,0,'Inicia Proceso','INICIO',nuLogError);
    
     UPDATE MIGR_RANGO_PROCESOS SET RAPRFEIN = SYSDATE, RAPRTERM = 'P' where RAPRCODI = 512 AND RAPRBASE = nuBD AND RAPRRAIN = nuInicio AND RAPRRAFI = nuFinal;
    COMMIT;
	
	  FOR rgFraude IN CUNTLFRAUDES LOOP 
		
	  -- inserta en REGISTROS 
		begin
			nuNtlId := SEQ_FM_POSSIBLE_NTL_123873.nextval;
			--rgFraude.POSSIBLE_NTL_ID
			INSERT INTO FM_POSSIBLE_NTL
			VALUES(
				NUNTLID,
				'F',--RGFRAUDE.STATUS,
				RGFRAUDE.PRODUCT_ID,
				RGFRAUDE.PRODUCT_TYPE_ID,
				RGFRAUDE.GEOGRAP_LOCATION_ID,
				RGFRAUDE.ADDRESS_ID,
				RGFRAUDE.REGISTER_DATE,
				RGFRAUDE.DISCOVERY_TYPE_ID,
				RGFRAUDE.PROJECT_ID,
				RGFRAUDE.ORDER_ID,
				RGFRAUDE.REVIEW_DATE,
				RGFRAUDE.COMMENT_,
				RGFRAUDE.VALUE_,
				RGFRAUDE.PERSON_ID,
				RGFRAUDE.PACKAGE_ID,
				RGFRAUDE.INFORMER_SUBS_ID,
				RGFRAUDE.NORMALIZED_PROD_ID,
				RGFRAUDE.NTL_TYPE,
				RGFRAUDE.FRAUD_START_DATE,
				RGFRAUDE.FRAUD_END_DATE,
				RGFRAUDE.TCONCODI,
				RGFRAUDE.COSSELME,
				RGFRAUDE.PNOLIQ_VERSION,
				RGFRAUDE.LAST_CONS_AVG);
		COMMIT;
		EXCEPTION 
		WHEN OTHERS THEN
			SBERROR := 'ERROR INSERT :'||SQLERRM;
			NUERRORES := NUERRORES + 1;
			PKLOG_MIGRACION.PRINSLOGMIGRA (512,512,2,'FM_POSSIBLE_NTL',0,0,SBERROR,NULL,NULOGERROR);
		END;
    
    UPDATE MIGR_RANGO_PROCESOS SET RAPRFEFI = SYSDATE, RAPRTERM = 'T' where RAPRCODI = 512 AND RAPRBASE = nuBD AND RAPRRAIN = nuInicio AND RAPRRAFI = nuFinal;
  COMMIT;
    
		-- CANTIDAD DE INSERTS 
		IF(SBERROR  IS  NULL) THEN
			VCONTINS := VCONTINS+1;
    END IF;
		
    END LOOP;
  
   -- TERMINA LOG
    PKLOG_MIGRACION.PRINSLOGMIGRA (512,512,3,'FM_POSSIBLE_NTL',VCONTINS,NUERRORES,'TERMINO PROCESO #REGS: '||VCONTINS,'FIN',NULOGERROR);
	
  END PR_FM_POSSIBLE_ROLLOUT; 
/
