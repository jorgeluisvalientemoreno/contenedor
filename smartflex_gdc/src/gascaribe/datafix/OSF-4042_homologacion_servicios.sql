BEGIN
    -- OSF-4042
    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'UT_SESSION.SETMODULE' as SERVICIO_ORIGEN,
      'Establece el valor del modulo en la sesion' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_SESSION.PRCESTABLECEVALORMODULO' as SERVICIO_DESTINO,
      'Establece el valor del modulo en la sesion' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    COMMIT;

    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'GE_BOITEMSCONSTANTS.CNUADJUSTMENTACTIVITY' as SERVICIO_ORIGEN,
      'Constante para la actividad de ajuste' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_GE_ITEMS.CNUADJUSTMENTACTIVITY' as SERVICIO_DESTINO,
      'Constante para la actividad de ajuste' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;
      
    COMMIT;      
    
    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'GE_BOITEMSCONSTANTS.CNUCLASIFICACION_HERR' as SERVICIO_ORIGEN,
      'Constante para la clasificación de herramientas' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_GE_ITEMS.CNUCLASIFICACION_HERR' as SERVICIO_DESTINO,
      'Constante para la clasificación de herramientas' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION; 
      
    COMMIT;  

    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'GE_BOITEMSCONSTANTS.CNUCLASIFICACION_MATER_INVE' as SERVICIO_ORIGEN,
      'Constante para la clasificación de material de inventario' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_GE_ITEMS.CNUCLASIFICACION_MATER_INVE' as SERVICIO_DESTINO,
      'Constante para la clasificación de material de inventario' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION; 
      
    COMMIT;  


    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'GE_BOITEMSCONSTANTS.CNUCLASIFICACION_EQUIPO' as SERVICIO_ORIGEN,
      'Constante para la clasificación de equipos' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_GE_ITEMS.CNUCLASIFICACION_EQUIPO' as SERVICIO_DESTINO,
      'Constante para la clasificación de equipos' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION; 
      
    COMMIT;  


    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'DAOR_ORDER_ITEMS.TYTBOR_ORDER_ITEMS' as SERVICIO_ORIGEN,
      'Tipo de tabla pl de items de orden' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_OR_ORDER_ITEMS.TYTBOR_ORDER_ITEMS' as SERVICIO_DESTINO,
      'SubTipo de tabla pl de items de orden' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    COMMIT;
    
    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'OR_BCORDER.FBLORDERHASACTIVITY' as SERVICIO_ORIGEN,
      'Retorna verdadero si la orden tiene la actividad' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_BCORDENES.FBLORDENTIENEACTIVIDAD' as SERVICIO_DESTINO,
      'Retorna verdadero si la orden tiene la actividad'  as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    COMMIT;                    

    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'OR_BCADJUSTMENTORDER.TYTBADJUSTEDITEMS' as SERVICIO_ORIGEN,
      'Tipo de tabla pl que contiene los items ajustados' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      UPPER('pkg_boordenajuste.TYTBADJUSTEDITEMS') as SERVICIO_DESTINO,
      'SubTipo de tabla pl que contiene los items ajustados'  as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    COMMIT;   
        
    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      upper('DAOR_ORDER.STYOR_ORDER') as SERVICIO_ORIGEN,
      'Tipo para registro de or_order con rowid' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      UPPER('PKG_OR_ORDER.STYOR_ORDER_SMF') as SERVICIO_DESTINO,
      'SubTipo para registro de or_order con rowid'  as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    COMMIT;  
    
    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      upper('OR_BOORDERCOST.GETORDERCOST') as SERVICIO_ORIGEN,
      'Obtiene el costo de la orden' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      UPPER('pkg_or_order.prObtieneCostoOrden') as SERVICIO_DESTINO,
      'Obtiene el costo de la orden'  as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    COMMIT;
    
    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      upper('OR_BOCONSTANTS.CNUITEMS_CLASS_TO_ACTIVITY') as SERVICIO_ORIGEN,
      'Constante para la clase de item actividad' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      UPPER('pkg_or_order.CNUITEMS_CLASS_TO_ACTIVITY') as SERVICIO_DESTINO,
      'Constante para la clase de item actividad'  as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    COMMIT; 
    
    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      upper('or_boitemvalue.fnugetitemprice') as SERVICIO_ORIGEN,
      'Obtiene el valor de un item' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      UPPER('PKG_BOGESTIONITEMS.fnuObtieneValorItem') as SERVICIO_DESTINO,
      'Obtiene el valor de un item'  as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO,
      A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    COMMIT;                                            
    
END;
/