column dt new_value vdt
column db new_value vdb
select to_char(sysdate,'yyyymmdd_hh24miss') dt, sys_context('userenv','db_name') db from dual;
set serveroutput on size unlimited
execute dbms_application_info.set_action('APLICANDO DATAFIX');
select to_char(sysdate,'yyyy-mm-dd hh:mi:ss p.m.') fecha_inicio from dual;

declare

	cursor cuOrdenesAnuladas
	IS
	SELECT oc.order_id, oc.initial_status_id, rownum Contador
	FROM or_order od,
	OR_ORDER_STAT_CHANGE oc
	WHERE od.order_id IN
	(
		242643386,
		245504709,
		247898803,
		252327489,
		256852059,
		257316798,
		259054699,
		269550726,
		269550801,
		269550838,
		269550883,
		269550910,
		269550917,
		269550925,
		269550928,
		269550978,
		269550987,
		269550993,
		269551035,
		270865225,
		271045332,
		271093082,
		271527760,
		271527765,
		271527829,
		271527842,
		271569485,
		271577283,
		271638162,
		271640421,
		271968630,
		271508058,
		271527924,
		271527939,
		271527944,
		271527968,
		271968416,
		271968475,
		271969014,
		271969026,
		271969053,
		271982780,
		271985693,
		272175621,
		272177574,
		272289449,
		272300972,
		272301092,
		272302643,
		272304632,
		272438299,
		272574666,
		272594285,
		272596737,
		272711354,
		272718132,
		272718140,
		273082229,
		273084904,
		273085598,
		273175417,
		273182018,
		273182019,
		273206951,
		273250462,
		273349405,
		273355595,
		273356781,
		273484207,
		273486760,
		273489218,
		273490049,
		273714091,
		273789281,
		273947979,
		273952020,
		273973965,
		273975282,
		273976946,
		273977116,
		274174526,
		274194342,
		274254332,
		274261652,
		274265571,
		274325041,
		274399519,
		274399738,
		274400453,
		274400634,
		274407384,
		274408206,
		274446047,
		274446200,
		274446925,
		274453628,
		274457136,
		274537622,
		274545430,
		274561070,
		274573725,
		274573743,
		274578429,
		274584151,
		274633181,
		274640629,
		274648046,
		274653819,
		274657078,
		274688630,
		274714878,
		274715576,
		274720339,
		274728169,
		274728249,
		274728819,
		274740578,
		274761727,
		274780883,
		274785911,
		274903225,
		274907353,
		274909312,
		274909417,
		274911038,
		274925766,
		274925848,
		274927610,
		274928459,
		274928943,
		274939362,
		274953798,
		275093553,
		275094012,
		275094230,
		275094880,
		275097726,
		275100959,
		275102343,
		275103367,
		275104240,
		275104960,
		275107578,
		275109687,
		275174897,
		275185145,
		275187710,
		275190140,
		275194088,
		275196745,
		275200617,
		275242629,
		275247006,
		275248608,
		275275856,
		275282365,
		275294379,
		275304886,
		275311452,
		275312397,
		275326567,
		275337280,
		275337294,
		275344652,
		275348717,
		275403460,
		275408702,
		275420871,
		275442446,
		275455088,
		275456294,
		275457120,
		275459204,
		275460866,
		275537324,
		275537635,
		275600743,
		275600811,
		275600828,
		275600878,
		275601124,
		275601813,
		275601840,
		275601874,
		275602026,
		275602156,
		275603016,
		275603801,
		275605644,
		275605894,
		275606250,
		275606675,
		275607561,
		275608310,
		275608378,
		275608403,
		275608649,
		275609247,
		275637621,
		275641823,
		275720297,
		275720477,
		275722039,
		275724274,
		275724455,
		275726075,
		275726083,
		275742812,
		275746338,
		275747478,
		275753421,
		275837425,
		275837597,
		275838571,
		275839284,
		275842233,
		275845363,
		275845663,
		275846439,
		275847877,
		275848259,
		275848690,
		275848735,
		275866139,
		275881400,
		276037702,
		276037910,
		276038453,
		276041020,
		276041293,
		276041809,
		276042448,
		276050960,
		276059738,
		276065886,
		276139953,
		276178612,
		276207052,
		276215522,
		276216544,
		276221198,
		276222406,
		276222557,
		276223303,
		276226088,
		276236448,
		276250264,
		276250449,
		276250626,
		276316755,
		276322627,
		276322648,
		276339771,
		276340760,
		276347028,
		276396643,
		276396796,
		276397447,
		276397525,
		276408559,
		276478053,
		276480785,
		276480858,
		276481302,
		276481382,
		276482530,
		276483837,
		276484194,
		276484524,
		276485174,
		276487366,
		276500127,
		276500331,
		276503156,
		276505729,
		276517092,
		276533633,
		276537580,
		276545086,
		276702131,
		276702237,
		276702612,
		276702740,
		276703075,
		276703268,
		276703971,
		276704641,
		276705277,
		276705453,
		276707723,
		276707883,
		276708145,
		276708890,
		276709602,
		276709802,
		276709930,
		276710039,
		276710616,
		276710763,
		276711758,
		276713134,
		276713856,
		276714716,
		276715396,
		276715868,
		276724681,
		276724966,
		276734750,
		276817189,
		276817533,
		276819209,
		276819352,
		276819554,
		276819999,
		276820420,
		276820829,
		276822043,
		276829497,
		276829981,
		276838771,
		276893460,
		276895857,
		276896656,
		276914556,
		276914619,
		276917540,
		276918145,
		276918780,
		276919063,
		276920568,
		276921698,
		276922860,
		276922893,
		276937888,
		276965670,
		276984622,
		276985573,
		276987706,
		277002165,
		277004422,
		277024183,
		277041804,
		277059378,
		277078550,
		277087782,
		277087795,
		277088212,
		277119369,
		277123872,
		277138544,
		277142940,
		277146587,
		277180245,
		277237340,
		277237591,
		277239263,
		277239328,
		277240900,
		277241097,
		277241187,
		277241458,
		277242019,
		277242045,
		277242603,
		277243100,
		277243440,
		277244048,
		277245188,
		277247493,
		277247716,
		277248714,
		277250577,
		277250578,
		277250665,
		277253114,
		277253183,
		277253886,
		277254953,
		277295845,
		277403963,
		277404393,
		277404951,
		277405653,
		277405812,
		277405892,
		277406618,
		277407087,
		277408540,
		277410405,
		277411918,
		277412124,
		277412211,
		277413746,
		277413764,
		277414123,
		277414171,
		277414989,
		277415014,
		277415021,
		277415362,
		277415480,
		277416176,
		277418455,
		277418880,
		277419255,
		277419513,
		277419811,
		277419937,
		277421206,
		277421707,
		277422076,
		277422235,
		277425215,
		277428267,
		277429475,
		277430903,
		277430946,
		277430997,
		277433466,
		277519860,
		277520413,
		277520584,
		277522723,
		277523013,
		277524134,
		277524254,
		277525560,
		277526083,
		277526477,
		277529030,
		277529374,
		277531945,
		277534062,
		277534150,
		277539103,
		277540469,
		277541007,
		277541825,
		277547160,
		277556049,
		277559258,
		277560114,
		277562543,
		277563673,
		277563820,
		277564108,
		277564441,
		277564936,
		277565119,
		277565120,
		277565316,
		277566035,
		277567536,
		277567769,
		277569012,
		277569338,
		277569846,
		277571088,
		277571098,
		277571123,
		277571157,
		277571512,
		277571513,
		277571529,
		277571538,
		277571547,
		277571574,
		277571686,
		277571975,
		277571979,
		277571980,
		277571982,
		277571986,
		277572013,
		277572279,
		277572319,
		277572381,
		277572383,
		277572388,
		277572938,
		277573177,
		277573195,
		277573209,
		277573785,
		277573788,
		277573796,
		277573799,
		277573860,
		277573904,
		277574018,
		277577820,
		277582240,
		277598877,
		277665458,
		277665636,
		277665713,
		277666154,
		277667812,
		277667871,
		277668075,
		277668984,
		277669018,
		277669373,
		277671823,
		277672213,
		277672234,
		277672637,
		277672913,
		277673051,
		277673092,
		277673872,
		277673943,
		277674071,
		277674164,
		277674335,
		277674353,
		277674482,
		277675828,
		277675955,
		277675959,
		277676806,
		277676880,
		277676933,
		277677033,
		277677044,
		277677172,
		277677342,
		277677417,
		277677422,
		277677938,
		277678218,
		277678499,
		277678813,
		277678905,
		277679087,
		277679293,
		277679378,
		277679403,
		277679663,
		277679775,
		277679787,
		277679840,
		277680208,
		277680277,
		277680281,
		277680284,
		277680393,
		277680498,
		277680567,
		277681904,
		277681927,
		277681936,
		277682232,
		277683422,
		277683499,
		277747174,
		277749355,
		277749693,
		277749757,
		277749798,
		277749869,
		277749917,
		277750031,
		277750278,
		277751260,
		277751665,
		277751749,
		277751776,
		277751790,
		277751847,
		277751856,
		277752445,
		277752578,
		277752598,
		277752893,
		277753493,
		277754051,
		277754153,
		277754208,
		277754582,
		277754592,
		277754652,
		277754667,
		277754988,
		277755322,
		277755452,
		277755457,
		277755484,
		277755654,
		277755693,
		277755758,
		277755861,
		277777209,
		277811570,
		277818873,
		277819027,
		277819073,
		277819454,
		277819656,
		277819832,
		277819837,
		277819843,
		277820080,
		277820091,
		277820204,
		277820408,
		277820550,
		277820598,
		277820607,
		277820615,
		277821147,
		277821466,
		277824625,
		277830382,
		277830520,
		277835160,
		277838865,
		277841668,
		277841968,
		277848743,
		277852711,
		277856807,
		277864475,
		277864749,
		277866000,
		277884078,
		277884278,
		277884308,
		277884441,
		277884570,
		277884932,
		277885431,
		277885670,
		277885813,
		277885907,
		277885927,
		277885933,
		277886018,
		277886056,
		277886105,
		277886227,
		277886339,
		277886371,
		277886421,
		277886426,
		277886546,
		277886633,
		277886860,
		277886901,
		277886924,
		277886937,
		277886959,
		277887043,
		277887106,
		277887139,
		277887159,
		277887379,
		277887833,
		277887961,
		277888112,
		277888141,
		277888225,
		277888438,
		277888525,
		277888564,
		277888589,
		277888603,
		277888663,
		277888691,
		277888719,
		277888726,
		277888737,
		277888791,
		277888909,
		277888966,
		277888995,
		277889115,
		277889456,
		277889525,
		277889548,
		277889576,
		277895837,
		277910735,
		277930919,
		277933775,
		277933817,
		277933819,
		277933852,
		277933895,
		277933896,
		277933972,
		277934048,
		277934065,
		277934117,
		277934133,
		277934142,
		277934407,
		277934769,
		277935006,
		277935395,
		277935742,
		277935770,
		277935801,
		277936442,
		277939186,
		277963581,
		277963601,
		277963621,
		277963636,
		277963651,
		277963672,
		277963677,
		277963682,
		277963694,
		277963697,
		277963724,
		277963764,
		277963824,
		277963826,
		277963831,
		277963894,
		277963895,
		277963907,
		277963926,
		277963976,
		277964485,
		277964498,
		277964535,
		277964710,
		277964873,
		277996310,
		277996418,
		277996450,
		277996700,
		277996708,
		277996785,
		277996883,
		277996936,
		277997126,
		277997160,
		277997776,
		277997961,
		277998207,
		277998453,
		277998537,
		277998648,
		277999453,
		277999526,
		277999565,
		277999573,
		277999609,
		278000587,
		278001213,
		278010987,
		278011048,
		278011058,
		278011071,
		278011357,
		278011383,
		278011451,
		278011562,
		278011675,
		278011937,
		278011951,
		278012119,
		278012221,
		278012249,
		278012484,
		278012490,
		278012880,
		278013160,
		278013290,
		278013576,
		278013712,
		278013796,
		278013809,
		278013932,
		278013956,
		278014118,
		278014126,
		278014218,
		278014344,
		278014535,
		278014623,
		278014630,
		278014682,
		278014733,
		278014855,
		278014862,
		278015929,
		278016240,
		278016253,
		278016310,
		278016401,
		278016403,
		278016660,
		278016745,
		278016878,
		278016881,
		278016973,
		278017009,
		278017147,
		278017160,
		278017182,
		278017244,
		278017415,
		278017610,
		278017634,
		278018572,
		278018688,
		278019051,
		278019090,
		278019215,
		278019262,
		278019581,
		278019615,
		278019799,
		278020086,
		278020368,
		278020403,
		278021251,
		278034226,
		278034408,
		278034411,
		278034412,
		278034414,
		278034419,
		278034424,
		278034467,
		278034477,
		278034478,
		278034487,
		278034488,
		278034495,
		278034543,
		278034555,
		278034560,
		278034566,
		278034571,
		278034575,
		278034640,
		278034645,
		278034647,
		278034648,
		278034670,
		278034718,
		278034778,
		278034784,
		278034789,
		278034793,
		278034794,
		278034796,
		278034812,
		278034816,
		278034817,
		278034818,
		278034819,
		278034821,
		278097876,
		278097912,
		278097954,
		278098034,
		278098147,
		278098328,
		278098375,
		278098396,
		278098407,
		278098416,
		278098475,
		278098952,
		278098974,
		278099056,
		278099069,
		278099250,
		278099303,
		278099309,
		278099541,
		278099813,
		278100011,
		278100184,
		278100315,
		278100337,
		278100366,
		278100573,
		278100896,
		278101212,
		278101311,
		278101550,
		278101559,
		278101595,
		278101616,
		278103141,
		278103440,
		278103690,
		278103710,
		278104095,
		278104158,
		278104200,
		278104378,
		278106609,
		278106628,
		278106696,
		278106839,
		278106919,
		278106979,
		278106982,
		278107035,
		278107043,
		278107718,
		278107722,
		278107842,
		278107907,
		278108006,
		278108069,
		278108451,
		278108602,
		278108621,
		278108623,
		278108656,
		278108667,
		278108705,
		278108750,
		278108872,
		278109038,
		278109268,
		278109323,
		278109610,
		278109636,
		278109667,
		278109713,
		278109960,
		278110076,
		278110280,
		278110487,
		278110568,
		278110581,
		278110586,
		278110640,
		278110642,
		278110844,
		278110928,
		278111046,
		278111151,
		278111155,
		278111209,
		278111282,
		278111540,
		278111565,
		278111798,
		278111810,
		278111969,
		278111970,
		278111989,
		278112154,
		278112180,
		278112213,
		278112299,
		278112553,
		278112611,
		278112670,
		278112700,
		278112808,
		278112873,
		278112892,
		278112901,
		278113095,
		278113098,
		278113187,
		278113258,
		278113341,
		278113700,
		278113751,
		278113775,
		278113781,
		278113840,
		278114049,
		278114354,
		278114608,
		278114631,
		278114737,
		278114804,
		278133978,
		278248758,
		278249049,
		278249094,
		278249283,
		278249358,
		278249406,
		278249482,
		278249499,
		278249516,
		278249545,
		278249564,
		278249668,
		278249674,
		278249695,
		278249709,
		278249955,
		278250467,
		278250475	
	)
	AND od.order_status_id = 12
	AND oc.order_id = od.order_id
	AND oc.final_status_id = 12
	AND TRUNC( oc.stat_chg_date ) = TO_DATE( '08/03/2023', 'dd/mm/yyyy' )
	UNION ALL
	SELECT oc.order_id, oc.initial_status_id, rownum Contador
	FROM or_order od,
		OR_ORDER_STAT_CHANGE oc
	WHERE od.order_id IN
	(
		278250484,
		278250601,
		278250677,
		278250877,
		278254192,
		278255763,
		278255782,
		278255802,
		273178115,
		273085616,
		273966945,
		273995245,
		274403696,
		274404999,
		274924415,
		275257844,
		275257847,
		275310650,
		275335155,
		275602173,
		275753481,
		275847479,
		275848515,
		275940407,
		276027815,
		272271792,
		272305282,
		272305306	
	)
	AND od.order_status_id = 12
	AND oc.order_id = od.order_id
	AND oc.final_status_id = 12
    AND TRUNC( oc.stat_chg_date ) = TO_DATE( '08/03/2023', 'dd/mm/yyyy' );
	
	PROCEDURE pDesAnulaOrden( inuOrden NUMBER, inuEstadoAnterior NUMBER )
	IS
  
        rcOrderComment  daor_order_comment.styor_order_comment;
        
        sbComment       or_order_comment.order_comment%TYPE := 'Se actualiza el estado de la orden al anterior - OSF-958';
        nuCommTypeId    or_order_comment.comment_type_id%TYPE := 83;
        
        nuCausal        or_order.causal_id%type;
        nuCodError      number;
        sbMensError     varchar2(4000);
  
	BEGIN

        dbms_output.put_line( 'Inicia pDesAnulaOrden' );
        
        CASE 
            WHEN inuEstadoAnterior IN ( 0, 5 ) THEN
                nuCausal := NULL;
            WHEN inuEstadoAnterior IN ( 7 ) THEN
                nuCausal := 9517; -- SOLICITUD ATENDIDA SV
            WHEN inuEstadoAnterior IN ( 8 ) THEN
                nuCausal := 9874; -- VERIFICACION FALLIDA
        END CASE;
		
        IF inuEstadoAnterior IN ( 0, 5, 7, 8 ) THEN
        
            UPDATE or_order
            SET order_status_id = inuEstadoAnterior,
                causal_id = nuCausal
            WHERE order_id = inuOrden;
                        
            rcOrderComment.order_comment_id := or_bosequences.fnuNextOr_Order_Comment;
            rcOrderComment.order_comment    := sbComment;
            rcOrderComment.order_id         := inuOrden;
            rcOrderComment.comment_type_id  := nuCommTypeId;
            rcOrderComment.register_date    := ut_date.fdtSysdate;
            rcOrderComment.legalize_comment := GE_BOConstants.csbNO;
            rcOrderComment.person_id        := ge_boPersonal.fnuGetPersonId;

            daor_order_comment.insRecord(rcOrderComment);
            
            IF inuEstadoAnterior IN ( 0, 5, 7 ) THEN
            
                UPDATE or_order_activity
                SET status = 'R',
                final_date = null
                WHERE order_id = inuOrden
                and trunc(final_date) = TO_DATE( '08/03/2023', 'dd/mm/yyyy' );
            
            END IF;
            
            commit;
            
            dbms_output.put_line( 'OK pDesAnulaOrden|Orden|' || inuOrden || '|Ok' );
            
        ELSE
        
            dbms_output.put_line( 'NOK pDesAnulaOrden|Orden|' || inuOrden || '|No se procesa. Estado anterior '||inuEstadoAnterior );
                    
        END IF;
						 
        dbms_output.put_line( 'Termina pDesAnulaOrden' );
		
	exception
        when LOGIN_DENIED OR pkConstante.exERROR_LEVEL2 OR ex.CONTROLLED_ERROR then
            pkerrors.geterrorvar(nuCodError, sbMensError);
			dbms_output.put_line( 'ERROR CONTR pDesAnulaOrden|Orden|' || inuOrden || '|' || sbMensError ); 
			rollback;           
		when others then
			dbms_output.put_line( 'ERROR NOCONTR pDesAnulaOrden|Orden|' || inuOrden || '|' || SQLERRM );
			rollback;	

	END pDesAnulaOrden;

BEGIN

	FOR reg IN cuOrdenesAnuladas LOOP

		pDesAnulaOrden( reg.order_id, reg.initial_status_id );
		
	END LOOP;
	
	COMMIT;
	
END;
/

select to_char(sysdate,'yyyy-mm-dd hh:mi:ss p.m.') fecha_fin from dual;
set serveroutput off
quit
/