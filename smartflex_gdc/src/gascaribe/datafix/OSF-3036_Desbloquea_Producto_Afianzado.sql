column dt new_value vdt
column db new_value vdb
select to_char(sysdate,'yyyymmdd_hh24miss') dt, sys_context('userenv','db_name') db from dual;
set serveroutput on size unlimited
execute dbms_application_info.set_action('APLICANDO DATAFIX');
select to_char(sysdate,'yyyy-mm-dd hh:mi:ss p.m.') fecha_inicio from dual;

DECLARE
/*
OSF-3032 Desbloqueo de productos de fianza
         Al realizar la venta de un credito Brilla con fianza, el producto asociado a ésta se le realiza un bloqueo, 
         para que no se le pueda realizar cambio de condiciones y refinanciaciones sin un control.
         Se solicita el desbloqueo masivo de ciertos productos de fianza, que se gestionarán para ser refinanciados, 
         la siguiente sería la instrucción a ejecutar: 
         UPDATE open.LDC_AFIANZADO SET block = 'N', UPDATED_AT = sysdate WHERE product_id in (.....);
         Adjunto archivo con los productos que se deben desbloquear: "Productos a desbloquear.xlsx"

Autor:   German Dario Guevara Alzate - GlobaMVM
Fecha:   29/07/2024
*/
    -- Tipo de dato de tabla PL
    TYPE tytbProd IS VARRAY(519) OF NUMBER;

    tbProd          tytbProd;
    nuIdx           NUMBER;
    nuCont          NUMBER;
    nuTotal         NUMBER;
    nuContExi       NUMBER;
    nuContNoExi     NUMBER;
    sbBloq          VARCHAR2(20);

BEGIN
    nuCont      := 0;
    nuTotal     := 0;
    nuContExi   := 0;
    nuContNoExi := 0;

    tbProd := tytbProd (52657384,52671614,52643485,52671320,52627891,52634945,52653166,52662609,52621159,52605630,52611121,52679348,52692371,52750208,52665600,52598100,52694488,52610130,52657379,
                        52665927,52709872,52665369,52722374,52586055,52601940,52610053,52640529,52635136,52466838,52641367,52641818,52622133,52744943,52657183,52493738,52606743,52576672,52493551,
                        52665524,52659342,52719496,52623459,52576663,52640017,52624163,52729223,52622454,52634993,52652557,52640848,52726445,52618883,52678847,52483602,52687826,52602379,52589468,
                        52632198,52758823,52592428,52619367,52662314,52614043,52722317,52661501,52659858,52609680,52654205,52647710,52616517,52682260,52661319,52605247,52668372,52655186,52729437,
                        52702916,52612947,52612952,52753487,52485539,52602030,52672165,52589463,52608280,52663479,52640157,52567003,52643466,52631808,52656943,52572089,52687820,52695217,52642048,
                        52724014,52600529,52707482,52751627,52633449,52661782,52668665,52687783,52617660,52619070,52637543,52640784,52652947,52496848,52573707,52650334,52692565,52626097,52607476,
                        52656896,52620372,52638304,52675605,52713068,52754558,52636321,52751447,52622610,52664173,52678158,52580593,52672996,52722222,52585509,52614041,52650735,52643482,52756952,
                        52677163,52662956,52652097,52654638,52630838,52661747,52610314,52761127,52661833,52643512,52589729,52675744,52617426,52614025,52669564,52641106,52632084,52619534,52665998,
                        52650844,52692064,52616436,52652346,52576300,52661061,52616673,52656988,52621730,52614535,52661141,52737517,52668744,52622238,52574940,52667949,52703489,52588533,52692265,
                        52647061,52661982,52740626,52692204,52675369,52576730,52675445,52710501,52643469,52605188,52613631,52694509,52687629,52679830,52600313,52610843,52729237,52653511,52647054,
                        52606804,52674384,52662655,52610129,52661449,52572001,52506032,52690176,52731621,52736216,52490017,52643928,52640037,52659700,52664521,52710390,52656783,52740236,52606259,
                        52660988,52699068,52575365,52648276,52717477,52626109,52651677,52621186,52631480,52770218,52657086,52652118,52731343,52600720,52675191,52679829,52660156,52737621,52656962,
                        52689146,52589870,52660975,52637972,52627733,52630771,52660822,52693852,52696787,52776815,52644066,52682063,52712769,52663453,52474869,52648697,52759948,52678285,52657452,
                        52600955,52667716,52613042,52680049,52696372,52720942,52636758,52675772,52631791,52712810,52720057,52712758,52488263,52714073,52616070,52592435,52658943,52678267,52589250,
                        52613836,52714891,51097274,52613935,52641385,52794520,52705679,52623498,52651520,52606465,52483904,52695689,52721363,52637174,52572565,52638904,52706526,52708142,52579448,
                        52680246,52487965,52607439,52659674,52665321,52703049,52682420,52628305,52620954,52593306,52604295,52633178,52618144,52606332,52647701,52623262,52628682,52666118,52632050,
                        52636911,52608285,52659341,52661614,52715740,52758355,52752358,52475442,52674111,52737965,52602033,52678628,52713632,52472659,52607556,52659291,52651516,52682427,52697101,
                        52661764,52473970,52573568,52622372,52674068,52623738,52662144,52494033,52606750,52723259,52659213,52655864,52614931,52734657,52601922,52613309,52668723,52709504,52738645,
                        52629864,52694484,52620464,52621689,52713864,52636925,52700628,52778412,52622637,52714194,52717478,52750206,52499769,52622803,52657932,52744632,52680305,52674361,52490603,
                        52592422,52643546,52622663,52627763,52585699,52617868,52757864,52662824,52671590,52681340,52647065,52714827,52584332,52628473,52576562,52622147,52651452,52696377,52729521,
                        52627681,52607496,52637994,52709144,52686686,52650335,52663317,52673801,52718163,52609989,52584330,52650603,52696342,52575021,52640786,52692027,52620959,52617875,52614734,
                        52624140,52614006,52630996,52641708,52652518,52628028,52714273,52659395,52609998,52675346,52697200,52585943,52661378,52677678,52629618,52747770,52586443,52612784,52725710,
                        52690145,52631644,52740897,52649129,52727822,52652256,52673634,52573860,52667154,52641545,52679460,52628979,52655960,52740327,52759289,52721522,52724880,52747853,52732988,
                        52626997,52662644,52696066,52715595,52648701,52621052,52643615,52621577,52722960,52754303,52757048,52643963,52613930,52751308,52674070,52614467,52653002,52641678,52718966,
                        52480584,52621157,52744442,52667969,52648984,52711742,52495352,52682207,52687612,52655081,52604487,52709958,52641311,52585386,52603778,52737203,52621342,52626927,52619177,
                        52662742,52732470,52719189,52673585,52604156,52705645,52580070,52714848,52627055,52483901,52679247,52605801,52729199,52624026,52686697,52716361,52576307,52686875,52622368,
                        52674999,52660280,52633211,52678894,52709226,52612881,52641365,52662297,52664324,52627078,52643713,52641107,52671642,52575261,52709596,52634850,52734480,52580081,52673770,
                        52681949,52660899,52719853,52675017,52588895,52659860);

    dbms_output.put_line('Inicia OSF-3036_Desbloquea_Producto_Afianzado');
    dbms_output.put_line('-----------------------------------------------------');

    -- Total de registros de la coleccion
    nuTotal := tbProd.COUNT;

    -- Primer registro
    nuIdx := tbProd.FIRST;
    
    -- Recorre la coleccion
    LOOP
        EXIT WHEN nuIdx IS NULL;

        BEGIN
            -- Trae datos del producto
            sbBloq := null;
            SELECT block INTO sbBloq
            FROM open.ldc_afianzado 
            WHERE product_id = tbProd(nuIdx);

            IF (sbBloq = 'N') THEN
                dbms_output.put_line('Producto: '||tbProd(nuIdx)||', ya estaba desbloqueado');
                nuContExi := nuContExi + 1;
            ELSE
                -- Actualiza el registro
                sbBloq := null;
                UPDATE open.LDC_AFIANZADO 
                   SET block = 'N', 
                   UPDATED_AT = sysdate
                WHERE product_id = tbProd(nuIdx)
                RETURNING block INTO sbBloq;

                IF sbBloq is not null THEN
                    dbms_output.put_line('Producto: '||tbProd(nuIdx)||', desbloqueado OK');
                    nuCont := nuCont + 1;
                    commit;
                END IF;
            END IF;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                rollback;
                nuContNoExi := nuContNoExi + 1;
                dbms_output.put_line('Producto: '||tbProd(nuIdx)||', no existe en la tabla LDC_AFIANZADO');
            WHEN OTHERS THEN
                rollback;
                dbms_output.put_line('ERROR actualizando Producto: '|| tbProd(nuIdx) ||', SQLERRM: '|| SQLERRM );
        END;
        -- Siguiente registro
        nuIdx := tbProd.NEXT(nuIdx);
    END LOOP;

    tbProd.DELETE;
    dbms_output.put_line('-----------------------------------------------------');
    dbms_output.put_line('Seleccionados:   '||nuTotal  ||', Actualizados OK: '||nuCont);
    dbms_output.put_line('Ya Actualizados:   '||nuContExi||', No existen:        '||nuContNoExi);
    dbms_output.put_line('Fin del Proceso. ');

EXCEPTION
    WHEN OTHERS THEN
        rollback;
        dbms_output.put_line('Error en OSF-3036_Desbloquea_Producto_Afianzado: '|| SQLERRM);
END;
/

select to_char(sysdate,'yyyy-mm-dd hh:mi:ss p.m.') fecha_fin from dual;
set serveroutput off
quit
/