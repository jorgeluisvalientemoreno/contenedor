BEGIN
  MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'DAOR_ORDER.UPDOPERATING_SECTOR_ID' as SERVICIO_ORIGEN,
  'Actualizar el sector operativo de la orden' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_OR_ORDER.PRCACTUALIZASECTOROPERATIVO' as SERVICIO_DESTINO,
  'Actualizar el sector operativo de la orden' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

  MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'DAOR_ORDER.UPDEXTERNAL_ADDRESS_ID' as SERVICIO_ORIGEN,
  'Actualizar el direcci贸n de la orden' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_OR_ORDER.PRCACTUALIZADIRECCIONORDEN' as SERVICIO_DESTINO,
  'Actualizar el direcci贸n de la orden' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;


  MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'DAOR_ORDER.UPDCAUSAL_ID' as SERVICIO_ORIGEN,
  'Actualizar la causal de una orden' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_OR_ORDER.PRC_ACTUALIZACAUSALORDEN' as SERVICIO_DESTINO,
  'Actualizar la causal de una orden' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

  MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'DAOR_ORDER.FRCGETRECORD' as SERVICIO_ORIGEN,
  'Obtener el regsitro de los datos de una orden' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_BCORDENES.FRCGETRECORD' as SERVICIO_DESTINO,
  'Obtener el regsitro de los datos de una orden' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

  MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
 (SELECT
  'OPEN' as ESQUEMA_ORIGEN,
  'DAOR_EXTERN_SYSTEMS_IS.UPDADDRESS_ID' as SERVICIO_ORIGEN,
  'Actualiza direcci贸n para sistema externo de la orden' as DESCRIPCION_ORIGEN,
  'ADM_PERSON' as ESQUEMA_DESTINO,
  'PKG_OR_EXTERN_SYSTEMS_ID.PRCACTUALIZADIRECCEXTERNA' as SERVICIO_DESTINO,
  'Actualiza direcci贸n para sistema externo de la orden' as DESCRIPCION_DESTINO,
  NULL as OBSERVACION
  FROM DUAL) B
ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO)
WHEN NOT MATCHED THEN 
INSERT (
  ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
  DESCRIPCION_DESTINO, OBSERVACION)
VALUES (
  B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
  B.DESCRIPCION_DESTINO, B.OBSERVACION)
WHEN MATCHED THEN
UPDATE SET 
  A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
  A.SERVICIO_DESTINO = B.SERVICIO_DESTINO,
  A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
  A.OBSERVACION = B.OBSERVACION;

COMMIT;

exception
  when others then
    rollback;
    dbms_output.put_line('Error: ' || sqlerrm);
END;
/
