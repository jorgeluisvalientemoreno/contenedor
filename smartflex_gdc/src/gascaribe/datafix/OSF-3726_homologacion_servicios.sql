declare
 nuConta  NUMBER;
 
 CURSOR cuExiste(fsbObjeto VARCHAR2) IS
  SELECT COUNT(1)
  FROM HOMOLOGACION_SERVICIOS
  WHERE SERVICIO_ORIGEN = fsbObjeto; 
  
BEGIN

    -- OSF-3726
    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'OR_BOEJECUTARORDEN.EJECUTARORDEN' as SERVICIO_ORIGEN,
      'Actualiza una orden como ejecutada' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_BOGESTION_ORDENES.PRCEJECUTARORDEN' as SERVICIO_DESTINO,
      'Actualiza una orden como ejecutada' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'DAOR_ORDER.UPDEXECUTION_FINAL_DATE' as SERVICIO_ORIGEN,
      'Actualiza la fecha final de ejecuci贸n de la orden' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_OR_ORDER.PRACEXECUTION_FINAL_DATE' as SERVICIO_DESTINO,
      'Actualiza la fecha final de ejecuci贸n de la orden' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

    MERGE INTO PERSONALIZACIONES.HOMOLOGACION_SERVICIOS A USING
     (SELECT
      'OPEN' as ESQUEMA_ORIGEN,
      'DAOR_ORDER.UPDEXEC_INITIAL_DATE' as SERVICIO_ORIGEN,
      'Actualiza la fecha inicial de ejecuci贸n de la orden' as DESCRIPCION_ORIGEN,
      'ADM_PERSON' as ESQUEMA_DESTINO,
      'PKG_OR_ORDER.PRACEXEC_INITIAL_DATE' as SERVICIO_DESTINO,
      'Actualiza la fecha inicial de ejecuci贸n de la orden' as DESCRIPCION_DESTINO,
      NULL as OBSERVACION
      FROM DUAL) B
    ON (A.ESQUEMA_ORIGEN = B.ESQUEMA_ORIGEN and A.SERVICIO_ORIGEN = B.SERVICIO_ORIGEN and A.ESQUEMA_DESTINO = B.ESQUEMA_DESTINO and A.SERVICIO_DESTINO = B.SERVICIO_DESTINO)
    WHEN NOT MATCHED THEN 
    INSERT (
      ESQUEMA_ORIGEN, SERVICIO_ORIGEN, DESCRIPCION_ORIGEN, ESQUEMA_DESTINO, SERVICIO_DESTINO, 
      DESCRIPCION_DESTINO, OBSERVACION)
    VALUES (
      B.ESQUEMA_ORIGEN, B.SERVICIO_ORIGEN, B.DESCRIPCION_ORIGEN, B.ESQUEMA_DESTINO, B.SERVICIO_DESTINO, 
      B.DESCRIPCION_DESTINO, B.OBSERVACION)
    WHEN MATCHED THEN
    UPDATE SET 
      A.DESCRIPCION_ORIGEN = B.DESCRIPCION_ORIGEN,
      A.DESCRIPCION_DESTINO = B.DESCRIPCION_DESTINO,
      A.OBSERVACION = B.OBSERVACION;

	OPEN cuExiste('DAOR_ORDER.FNUGETPRIOR_ORDER_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETPRIOR_ORDER_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.FNUOBTPRIOR_ORDER_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETNUMERATOR_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETNUMERATOR_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTNUMERATOR_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETSEQUENCE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETSEQUENCE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTSEQUENCE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETPRIORITY'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETPRIORITY','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTPRIORITY','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FDTGETEXEC_ESTIMATE_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FDTGETEXEC_ESTIMATE_DATE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FDTOBTEXEC_ESTIMATE_DATE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FDTGETARRANGED_HOUR'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FDTGETARRANGED_HOUR','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FDTOBTARRANGED_HOUR','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FDTGETREPROGRAM_LAST_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FDTGETREPROGRAM_LAST_DATE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FDTOBTREPROGRAM_LAST_DATE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETASSIGNED_WITH'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETASSIGNED_WITH','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTASSIGNED_WITH','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FDTGETMAX_DATE_TO_LEGALIZE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FDTGETMAX_DATE_TO_LEGALIZE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FDTOBTMAX_DATE_TO_LEGALIZE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETORDER_VALUE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETORDER_VALUE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTORDER_VALUE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETPRINTING_TIME_NUMBER'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETPRINTING_TIME_NUMBER','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTPRINTING_TIME_NUMBER','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETLEGALIZE_TRY_TIMES'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETLEGALIZE_TRY_TIMES','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTLEGALIZE_TRY_TIMES','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETADMINIST_DISTRIB_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETADMINIST_DISTRIB_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTADMINIST_DISTRIB_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETORDER_CLASSIF_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETORDER_CLASSIF_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTORDER_CLASSIF_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETIS_COUNTERMAND'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETIS_COUNTERMAND','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTIS_COUNTERMAND','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETREAL_TASK_TYPE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETREAL_TASK_TYPE_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTREAL_TASK_TYPE_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETSAVED_DATA_VALUES'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETSAVED_DATA_VALUES','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTSAVED_DATA_VALUES','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETFOR_AUTOMATIC_LEGA'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETFOR_AUTOMATIC_LEGA','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTFOR_AUTOMATIC_LEGA','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETORDER_COST_AVERAGE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETORDER_COST_AVERAGE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTORDER_COST_AVERAGE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETORDER_COST_BY_LIST'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETORDER_COST_BY_LIST','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTORDER_COST_BY_LIST','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETOPERATIVE_AIU_VALUE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETOPERATIVE_AIU_VALUE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTOPERATIVE_AIU_VALUE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETADMIN_AIU_VALUE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETADMIN_AIU_VALUE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTADMIN_AIU_VALUE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETCHARGE_STATUS'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETCHARGE_STATUS','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTCHARGE_STATUS','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETPREV_ORDER_STATUS_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETPREV_ORDER_STATUS_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTPREV_ORDER_STATUS_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETPROGRAMING_CLASS_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETPROGRAMING_CLASS_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTPROGRAMING_CLASS_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETPREVIOUS_WORK'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETPREVIOUS_WORK','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTPREVIOUS_WORK','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETAPPOINTMENT_CONFIRM'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETAPPOINTMENT_CONFIRM','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTAPPOINTMENT_CONFIRM','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETSTAGE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETSTAGE_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTSTAGE_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETLEGAL_IN_PROJECT'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETLEGAL_IN_PROJECT','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTLEGAL_IN_PROJECT','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETOFFERED'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETOFFERED','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTOFFERED','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETASSO_UNIT_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETASSO_UNIT_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTASSO_UNIT_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETSUBSCRIBER_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETSUBSCRIBER_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTSUBSCRIBER_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FSBGETADM_PENDING'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FSBGETADM_PENDING','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FSBOBTADM_PENDING','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETROUTE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETROUTE_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTROUTE_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETCONSECUTIVE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETCONSECUTIVE','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTCONSECUTIVE','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETSCHED_ITINERARY_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETSCHED_ITINERARY_ID','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTSCHED_ITINERARY_ID','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FNUGETESTIMATED_COST'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FNUGETESTIMATED_COST','Obtiene el valor de la columna a partir del ID de tabla','ADM_PERSON','PKG_OR_ORDER.FNUOBTESTIMATED_COST','Obtiene el valor de la columna a partir del ID de tabla',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDPRIOR_ORDER_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDPRIOR_ORDER_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACPRIOR_ORDER_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDNUMERATOR_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDNUMERATOR_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACNUMERATOR_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDSEQUENCE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDSEQUENCE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACSEQUENCE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDPRIORITY'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDPRIORITY','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACPRIORITY','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDCREATED_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDCREATED_DATE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACCREATED_DATE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDEXEC_INITIAL_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDEXEC_INITIAL_DATE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACEXEC_INITIAL_DATE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDEXECUTION_FINAL_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDEXECUTION_FINAL_DATE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACEXECUTION_FINAL_DATE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDEXEC_ESTIMATE_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDEXEC_ESTIMATE_DATE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACEXEC_ESTIMATE_DATE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDARRANGED_HOUR'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDARRANGED_HOUR','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACARRANGED_HOUR','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDLEGALIZATION_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDLEGALIZATION_DATE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACLEGALIZATION_DATE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDREPROGRAM_LAST_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDREPROGRAM_LAST_DATE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACREPROGRAM_LAST_DATE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDASSIGNED_DATE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDASSIGNED_DATE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACASSIGNED_DATE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDASSIGNED_WITH'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDASSIGNED_WITH','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACASSIGNED_WITH','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDMAX_DATE_TO_LEGALIZE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDMAX_DATE_TO_LEGALIZE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACMAX_DATE_TO_LEGALIZE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDORDER_VALUE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDORDER_VALUE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACORDER_VALUE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDPRINTING_TIME_NUMBER'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDPRINTING_TIME_NUMBER','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACPRINTING_TIME_NUMBER','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDLEGALIZE_TRY_TIMES'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDLEGALIZE_TRY_TIMES','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACLEGALIZE_TRY_TIMES','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDOPERATING_UNIT_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDOPERATING_UNIT_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACOPERATING_UNIT_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDORDER_STATUS_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDORDER_STATUS_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACORDER_STATUS_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDTASK_TYPE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDTASK_TYPE_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACTASK_TYPE_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDADMINIST_DISTRIB_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDADMINIST_DISTRIB_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACADMINIST_DISTRIB_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDORDER_CLASSIF_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDORDER_CLASSIF_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACORDER_CLASSIF_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDGEOGRAP_LOCATION_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDGEOGRAP_LOCATION_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACGEOGRAP_LOCATION_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDIS_COUNTERMAND'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDIS_COUNTERMAND','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACIS_COUNTERMAND','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDREAL_TASK_TYPE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDREAL_TASK_TYPE_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACREAL_TASK_TYPE_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDSAVED_DATA_VALUES'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDSAVED_DATA_VALUES','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACSAVED_DATA_VALUES','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDFOR_AUTOMATIC_LEGA'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDFOR_AUTOMATIC_LEGA','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACFOR_AUTOMATIC_LEGA','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDORDER_COST_AVERAGE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDORDER_COST_AVERAGE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACORDER_COST_AVERAGE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDORDER_COST_BY_LIST'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDORDER_COST_BY_LIST','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACORDER_COST_BY_LIST','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDOPERATIVE_AIU_VALUE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDOPERATIVE_AIU_VALUE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACOPERATIVE_AIU_VALUE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDADMIN_AIU_VALUE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDADMIN_AIU_VALUE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACADMIN_AIU_VALUE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDCHARGE_STATUS'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDCHARGE_STATUS','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACCHARGE_STATUS','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDPREV_ORDER_STATUS_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDPREV_ORDER_STATUS_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACPREV_ORDER_STATUS_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDPROGRAMING_CLASS_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDPROGRAMING_CLASS_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACPROGRAMING_CLASS_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDPREVIOUS_WORK'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDPREVIOUS_WORK','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACPREVIOUS_WORK','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDAPPOINTMENT_CONFIRM'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDAPPOINTMENT_CONFIRM','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACAPPOINTMENT_CONFIRM','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDSTAGE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDSTAGE_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACSTAGE_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDLEGAL_IN_PROJECT'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDLEGAL_IN_PROJECT','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACLEGAL_IN_PROJECT','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDOFFERED'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDOFFERED','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACOFFERED','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDASSO_UNIT_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDASSO_UNIT_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACASSO_UNIT_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDSUBSCRIBER_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDSUBSCRIBER_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACSUBSCRIBER_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDADM_PENDING'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDADM_PENDING','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACADM_PENDING','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDROUTE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDROUTE_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACROUTE_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDCONSECUTIVE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDCONSECUTIVE','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACCONSECUTIVE','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDDEFINED_CONTRACT_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDDEFINED_CONTRACT_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACDEFINED_CONTRACT_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDIS_PENDING_LIQ'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDIS_PENDING_LIQ','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACIS_PENDING_LIQ','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDSCHED_ITINERARY_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDSCHED_ITINERARY_ID','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACSCHED_ITINERARY_ID','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDESTIMATED_COST'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDESTIMATED_COST','Actualiza el valor de la columna con el ID','ADM_PERSON','PKG_OR_ORDER.PRACESTIMATED_COST','Actualiza el valor de la columna con el ID',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FRCGETRECORD'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FRCGETRECORD','Obtiene registro','ADM_PERSON','PKG_OR_ORDER.FRCOBTREGISTRORID','Obtiene registro',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.FBLEXISTE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.FBLEXISTE','Valida si existe','ADM_PERSON','PKG_OR_ORDER.FBLEXISTE','Valida si existe',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.PRVALEXISTE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.PRVALEXISTE','Valida si existe y genera excepcion','ADM_PERSON','PKG_OR_ORDER.PRVALEXISTE','Valida si existe y genera excepcion',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.INSRECORD'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.INSRECORD','inserta un registro','ADM_PERSON','PKG_OR_ORDER.PRINSREGISTRO','inserta un registro',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.DELRECORD'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.DELRECORD','Borra registro','ADM_PERSON','PKG_OR_ORDER.PRBORREGISTRO','Borra registro',NULL); END IF;	
	OPEN cuExiste('DAOR_ORDER.UPDRECORD'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values('OPEN','DAOR_ORDER.UPDRECORD','Actualiza registro','ADM_PERSON','PKG_OR_ORDER.PRACTREGISTRO','Actualiza registro',NULL); END IF;	
	commit;  
end;
/
