column dt new_value vdt
column db new_value vdb
select to_char(sysdate,'yyyymmdd_hh24miss') dt, sys_context('userenv','db_name') db from dual;
set serveroutput on size unlimited
execute dbms_application_info.set_action('APLICANDO DATAFIX');
select to_char(sysdate,'yyyy-mm-dd hh:mi:ss p.m.') fecha_inicio from dual;

DECLARE

    CURSOR cuDiferidos IS
		SELECT 	*
		FROM 	open.diferido
		WHERE 	difecodi in (99005007,99050288,99050889,98972710,98972722,98833544,98833567,98833580,98833591,98833632,98833634,98833639,98833653,98833657,98833660,99004995,99031853,98978758,98978759,98978775,99005000,98955143,98955164,98955167,99052655,99051390,98778286,98778288,99041575,99052484,99053241,99053351,99023040,99053784,99036397,99052842,99036675,99052914,99052286,99059767,99052366,99054255,99066111,98778290,99251779,99251788,99251811,99251814,99251913,99252062,99252063,99252113,99300783,99300787,99312722,99312747,99286266,99286290,99286298,99300209,99300212,99300255,99312715,99312720,99312711,98778289,98778293,98778312,99343647,99343658,99343678,99343693,99343698,99160126,99286306,99286307,99286265,99286299,99300765,99326095,99160116,99160122,99251000,99251040,99286216,99297180,99297182,99297190,99286274,99286284,99286285,99251169,99251250,99251304,99251328,99251348,99251397,99251418,99251494,99251509,99251577,99251636,99251785,99251861,99251868,99251876,99251877,99251919,99251934,99251943,99251986,99251998,99251999,99252007,99252013,99252019,99078352,99078368,99078395,99300223,99300247,99300259,99343747,99300785,99251442,99251600,99251721,99251773,99251860,99251867,99251991,99252100,99252171,99348107,99348109,99120222,99120237,99120244,99120245,99286235,99286247,99286250,99286305,98778295,98778299,99251052,99251576,99251722,99252103,99252128,99286215,99286219,99286226,99286233,99286237,99286256,99286276,99286297,99286311,99286315,99023036,99023041,99286258,99120212,99120243,99120256,99300221,99300228,99300253,99348091,99348108,99348110,98972712,98972716,98978738,98978745,99286229,
							
							
							99348125,99251143,98978746,98978762,99348090,99251223,99251286,99251400,99251439,99251781,99251786,99251858,99251946,99251994,99252015,99252044,99252064,99252074,98978753,98978755,99364445,99251391,99251395,99343636,99348112,99348120,99348122,99297188,99380242,99380245,99380251,99380253,99380254,99380261,99380263,99380268,99380282,98955165,99105233,99105241,99120233,99297170,99297175,99297178,99297181,99343639,99343665,99343666,99343667,99343675,99343680,99343728,99343731,99343736,99343738,98978752,98978761,99312732,99312740,99312750,99312751,99326091,98972714,98972725,98972729,98972733,99078357,99343653,99343656,99343671,99343727,99343749,99252179,99348093,99348094,99348124,99252086,99252087,99300230,99300242,99300257,99131472,99131475,99131476,99326087,99326094,99326102,98972711,99005011,99005014,99005015,99005020,99005023,99375955,99120231,99343650,99343654,99343657,99343720,99343632,99343645,99343703,99343705,99343708,99343712,99300771,99300782,99300788,99286234,99286254,99286257,99286281,99286286,99286291,99286292,99286294,99300236,99300776,99300781,99343648,99343649,99343725,99343737,99343739,99343748,99380248,99380281,99251111,99251343,99251465,99251518,99251703,99251772,99251995,99312721,99251251,99131439,99131448,99131461,99131482,99131484,99251121,99251429,99251501,99348100,99194417,99300203,99300218,99300240,99343631,99343668,99343669,99343679,99343688,99343692,99343704,99343633,99343702,99251480,99251491,99251619,99251657,99251755,99348092,99348121,99105230,99105234,99105249,99160111,99326089,98955147,98955149,98955162,98955163,99078377,99348123,98778315,
							99343730,99348101,99348102,99348103,99348106,99348115,99348116,98972719,98972720,98972726,98972728,98972734,98972753,98978750,98955129,99120211,99375926,99375954,99375959,99380239,99380250,99380262,99297183,99297186,99251358,99251419,99251505,99251528,99251536,99251677,99343638,99343640,99343670,99343682,99343714,99343719,99343734,99348117,99297195,99297198,99326099,99364435,99364452,99312719,99326090,99297191,99023050,99023056,99194415,99348105,99348111,99364438,99364441,99364442,99364447,99364448,99326086,99343699,99343718,99343735,99300211,99375919,99375920,99375921,99375922,99375927,99251001,99251009,99251033,99300243,99300252,99300256,99300258,99375933,99375951,99364450,99375914,99375924,99375948,99375953,99375967,99300763,99300780,99300786,99300789,99300768,99300773,99343744,99300775,99312754,99131450,99300250,99300254,99375937,99380241,99380244,99380274,99380285,99364455,99375930,99375932,99375934,99375938,99375942,99375971,99375945,99384538,98868653,99151494,98772900,98772335,98772330,98790045,99321517,99340039)
		AND 	exists (select 'x' from open.suscripc where difesusc = susccodi and suscnupr = 0);
		
	TYPE tytbDiferidos IS TABLE OF cuDiferidos%ROWTYPE INDEX BY BINARY_INTEGER;
	tbDiferidos tytbDiferidos;
	
	nuErrorCode 	NUMBER;
    sbErrorMessage 	VARCHAR2(4000);
	nuIndex 		BINARY_INTEGER;
	
	nuPorcentaje 	NUMBER := 0;
	nuInteresPorc	NUMBER := 0;
	nuDifemeca		diferido.difemeca%TYPE;
	nuDifespre		diferido.difespre%TYPE;
	nuDifesape		diferido.difesape%TYPE;
	nuDifenucu		diferido.difenucu%TYPE;
	nuDifecupa		diferido.difecupa%TYPE;
	nuDifefagr		diferido.difefagr%TYPE;
	nuDifesusc		diferido.difesusc%TYPE;
	nuDifecodi		diferido.difecodi%TYPE;
	nuQuotaValue  	diferido.difevacu%TYPE;
	nuDifevatd 		diferido.difevatd%TYPE;
	nuDifenuse		diferido.difenuse%TYPE;
	nuDifeinte		diferido.difeinte%TYPE;
	nuDifevacu		diferido.difevacu%TYPE;
	nuNominalPerc 	NUMBER;
	nuRoundFactor 	NUMBER;
	inuIdCompany  	NUMBER := 99;
	
	nuReporte		NUMBER;
	nuConsecutivo	NUMBER := 1;
BEGIN
	
	OPEN cuDiferidos;
	FETCH cuDiferidos BULK COLLECT INTO tbDiferidos;
	CLOSE cuDiferidos;
	
	nuIndex := tbDiferidos.FIRST;
	
	nuReporte := SQ_REPORTES.NEXTVAL;
	
	INSERT INTO REPORTES(REPONUME, REPOAPLI, REPOFECH, REPOUSER, REPODESC) VALUES (nuReporte,'OSF-768',SYSDATE,'OPEN','Datafix DIFERIDOS OSF-768');
	
	LOOP
		EXIT WHEN nuIndex IS NULL;

		BEGIN
		
			nuDifemeca := tbDiferidos(nuIndex).difemeca;
			nuDifespre := tbDiferidos(nuIndex).difespre;
			nuDifesape := tbDiferidos(nuIndex).difesape;
			nuDifenucu := tbDiferidos(nuIndex).difenucu;
			nuDifecupa := tbDiferidos(nuIndex).difecupa;
			nuDifefagr := tbDiferidos(nuIndex).difefagr;
			nuDifesusc := tbDiferidos(nuIndex).difesusc;
			nuDifecodi := tbDiferidos(nuIndex).difecodi;
			nuDifevatd := tbDiferidos(nuIndex).difevatd;
			nuDifenuse := tbDiferidos(nuIndex).difenuse;
			nuDifeinte := tbDiferidos(nuIndex).difeinte;
			nuDifevacu := tbDiferidos(nuIndex).difevacu;
			
			--Calcula el interes nominal
			pkDeferredMgr.ValInterestSpread(nuDifemeca, -- Metodo de Calculo
												nuInteresPorc, -- Porcentaje de Interes (Efectivo Anual)
												nuDifespre, -- Spread
												nuNominalPerc -- Interes Nominal (Salida)
												);

			-- Obtiene el valor de la cuota
			pkDeferredMgr.CalculatePayment(nuDifevatd, -- Saldo a Diferir (difesape)
											   nuDifenucu, --(nuDifenucu - nuDifecupa), -- Numero de Cuotas  diferido
											   nuNominalPerc, -- Interes Nominal
											   nuDifemeca, -- Metodo de Calculo
											   nuDifefagr, --nuDifespre,              -- Spread
											   nuInteresPorc + nuDifespre, -- Interes Efectivo mas Spread
											   nuQuotaValue -- Valor de la Cuota (Salida)
											   );

			--  Obtiene el factor de redondeo para la suscripcion
			FA_BOPoliticaRedondeo.ObtFactorRedondeo(nuDifesusc, nuRoundFactor, inuIdCompany);

			--  Aplica politica de redondeo al valor de la cuota
			nuQuotaValue := round(nuQuotaValue, nuRoundFactor);

			--Actualizar el valor de las cuotas en el diferido y asigna porcentaje 0 al diferido
			UPDATE	diferido
			SET 	difeinte = nuPorcentaje, difevacu = nuQuotaValue
			WHERE 	difecodi = nuDifecodi;
			
			nuIndex := tbDiferidos.NEXT(nuIndex);
			
			INSERT INTO REPOINCO(REINREPO, REINCODI, REINLON1, REINLON2, REINLON3, REINLON4, REINDES3, REINDES4, REINVAL1, REINVAL2)
			VALUES (nuReporte, nuConsecutivo, nuDifecodi, nuDifesusc, nuDifenuse, nuDifecupa, nuDifeinte, nuPorcentaje, nuDifevacu, nuQuotaValue);
			
			nuConsecutivo := nuConsecutivo + 1;
			
			COMMIT;
			
		EXCEPTION
			WHEN OTHERS THEN
				Errors.setError;
				Errors.getError(nuErrorCode, sbErrorMessage);
				ROLLBACK;
				INSERT INTO REPOINCO(REINREPO, REINCODI, REINLON1, REINLON2, REINLON3, REINLON4, REINDES3, REINDES4, REINVAL1, REINVAL2, REINOBSE)
				VALUES (nuReporte, nuConsecutivo, nuDifecodi, nuDifesusc, nuDifenuse, nuDifecupa, nuDifeinte, nuPorcentaje, nuDifevacu, nuQuotaValue, SUBSTR(sbErrorMessage, 0, 2000));
				nuConsecutivo := nuConsecutivo + 1;
				COMMIT;
		END;
	END LOOP;

	COMMIT;

EXCEPTION
    WHEN ex.CONTROLLED_ERROR  THEN
        Errors.getError(nuErrorCode, sbErrorMessage);
        dbms_output.put_line('ERROR CONTROLLED ');
        dbms_output.put_line('error onuErrorCode: '||nuErrorCode);
        dbms_output.put_line('error osbErrorMess: '||sbErrorMessage);
    WHEN OTHERS THEN
        Errors.setError;
        Errors.getError(nuErrorCode, sbErrorMessage);
        dbms_output.put_line('ERROR OTHERS ');
        dbms_output.put_line('error onuErrorCode: '||nuErrorCode);
        dbms_output.put_line('error osbErrorMess: '||sbErrorMessage);
END;
/
select to_char(sysdate,'yyyy-mm-dd hh:mi:ss p.m.') fecha_fin from dual;
set serveroutput off
quit
/