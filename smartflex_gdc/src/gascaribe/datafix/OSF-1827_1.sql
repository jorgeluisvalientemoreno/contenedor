declare
 nuConta  NUMBER;
 
 CURSOR cuExiste(fsbObjeto VARCHAR2) IS
  SELECT COUNT(1)
  FROM HOMOLOGACION_SERVICIOS
  WHERE SERVICIO_ORIGEN = fsbObjeto; 
  
BEGIN
OPEN cuExiste('DAOR_OPERATING_UNIT.FBLEXIST'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FBLEXIST','Retorna falso o verdadero si existe la unidad operativa consultada','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FBLEXISTE',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FSBNAME'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FSBNAME','Retorna nombre de usuario conectado','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FSBGETNOMBRE',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUASSIGN_TYPE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUASSIGN_TYPE','Retorna tipo de asignacion','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FSBGETTIPOASIGNACION',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FSBADDRESS'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FSBADDRESS','RetornaDireccion','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FSBGETDIRECCION',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FSBE_MAIL'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FSBE_MAIL','Retorna correo','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FSBGETCORREO',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUOPER_UNIT_STATUS_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUOPER_UNIT_STATUS_ID','Retorna Estado de la unidad','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETESTADOUNIOPER',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUOPERATING_SECTOR_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUOPERATING_SECTOR_ID','Retorna Sector','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETSECTOROPERATIVO',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUPERSON_IN_CHARGE'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUPERSON_IN_CHARGE','Retorna Persona a cargo','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETPERSONAACARGO',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUOPER_UNIT_CLASSIF_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUOPER_UNIT_CLASSIF_ID','RetornaClasificacion','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETCLASIFICACION',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUORGA_AREA_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUORGA_AREA_ID','Retorna Area organizacional','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETAREAORGANIZACIONAL',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FSBES_EXTERNA'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FSBES_EXTERNA','Retorna Si es Externa','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FSBGETESEXTERNA',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUCONTRACTOR_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUCONTRACTOR_ID','Retorna Contratista','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETCONTRATISTA',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUADMIN_BASE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUADMIN_BASE_ID','Retorna Base administrativa','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETBASEADMINISTRATIVA',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUAIU_VALUE_UTIL'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUAIU_VALUE_UTIL','Retorna Valor utilidad AIU','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETVALORAIUUTILIDAD',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUASSIGN_CAPACITY'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUASSIGN_CAPACITY','Retorna Capacidad de asignacion','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETCAPACIDADASIGNACION',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUUSED_ASSIGN_CAP'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUUSED_ASSIGN_CAP','Retorna  Capacodad Usada','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETCAPACIDADUSADA',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FNUOPERATING_ZONE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FNUOPERATING_ZONE_ID','Retorna  Zona operativa','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FNUGETZONAOPERATIVA',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FRCGETRECORD'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FRCGETRECORD','Retorna  Registro de la Unidad Operativa','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FRCGETRECORD',NULL,''	); END IF;
OPEN cuExiste('DAOR_OPERATING_UNIT.FRFGETRECORD'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAOR_OPERATING_UNIT.FRFGETRECORD','Retorna  Cursor referenciado con datos de la unidad operativa','ADM_PERSON','PKG_BCUNIDADOPERATIVA.FRFGETUNIDADOPERATIVA',NULL,''	); END IF;
OPEN cuExiste('SA_BOSYSTEM.FNUGETUSERCOMPANYID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','SA_BOSYSTEM.FNUGETUSERCOMPANYID','Retorna la empresa del usuario conectado','ADM_PERSON','PKG_SESSION.FNUGETEMPRESADEUSUARIO',NULL,''	); END IF;
OPEN cuExiste('DAMO_PACKAGES.FSBGETCOMMENT_'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAMO_PACKAGES.FSBGETCOMMENT_','Retorna Comentario','ADM_PERSON','PKG_BCSOLICITUDES.FSBGETCOMENTARIO',NULL,''	); END IF;
OPEN cuExiste('DAMO_PACKAGES.FNUGETRECEPTION_TYPE_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAMO_PACKAGES.FNUGETRECEPTION_TYPE_ID','Retorna Medio de recepcion','ADM_PERSON','PKG_BCSOLICITUDES.FNUGETMEDIORECEPCION',NULL,''	); END IF;
OPEN cuExiste('DAMO_PACKAGES.FNUGETPERSON_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAMO_PACKAGES.FNUGETPERSON_ID','Retorna Id de la persona relacionada en la solicitud','ADM_PERSON','PKG_BCSOLICITUDES.FNUGETPERSONA',NULL,''	); END IF;
OPEN cuExiste('DAMO_PACKAGES.FNUGETCONTACT_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAMO_PACKAGES.FNUGETCONTACT_ID','Retorna Id del conatcto relacionada en la solicitud','ADM_PERSON','PKG_BCSOLICITUDES.FNUGETCONTACTO',NULL,''	); END IF;
OPEN cuExiste('DAMO_PACKAGES.FNUGETCUST_CARE_REQUES_NUM'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAMO_PACKAGES.FNUGETCUST_CARE_REQUES_NUM','Retonra el id de la interaccion','ADM_PERSON','PKG_BCSOLICITUDES.FNUGETINTERACCION',NULL,''	); END IF;
OPEN cuExiste('DAMO_PACKAGES.FNUGETSUBSCRIPTION_PEND_ID'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAMO_PACKAGES.FNUGETSUBSCRIPTION_PEND_ID','Retorna la suscripcion','ADM_PERSON','PKG_BCSOLICITUDES.FNUGETSUSCRIPCION',NULL,''	); END IF;
OPEN cuExiste('DAMO_PACKAGES.FNUGETDOCUMENT_KEY'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAMO_PACKAGES.FNUGETDOCUMENT_KEY','Retorna el documento asociado a la solicitud','ADM_PERSON','PKG_BCSOLICITUDES.FNUGETDOCUMENTO',NULL,''	); END IF;
OPEN cuExiste('DAMO_PACKAGES.FRCGETRECORS'); FETCH cuExiste INTO nuConta; CLOSE cuExiste; IF nuConta = 0 THEN	insert into homologacion_servicios values(	'OPEN','DAMO_PACKAGES.FRCGETRECORS','Retorna el registro de mo_packages','ADM_PERSON','PKG_BCSOLICITUDES.FRCGETRECORD ',NULL,''	); END IF;

commit;
  
end;
/