CREATE OR REPLACE PROCEDURE PRASIGNARCPLANO(SBPATHFILE         IN VARCHAR2,
                                            SBFILE_NAME        IN VARCHAR2,
                                            NUPERSON           IN GE_PERSON.PERSON_ID%TYPE) IS
/*****************************************************************
  Unidad         : PRASIGNARCPLANO
  Descripcion    : Asignaci?n por archivo plano
  Fecha          : 13/03/2018

  Historia de Modificaciones
  Fecha             Autor             Modificacion
  =========       =========           ====================
  ******************************************************************/
  SUBTYPE STYSIZELINE           IS         VARCHAR2(32000);
  FPORDERSDATA        UTL_FILE.FILE_TYPE;
  SBLINE              STYSIZELINE;
  NURECORD            NUMBER;
  FPORDERERRORS       UTL_FILE.FILE_TYPE;
  SBERRORFILE         VARCHAR2(100);
  SBERRORLINE         STYSIZELINE;
  NUORDERID           OR_ORDER.ORDER_ID%TYPE;
  NUVALIDA            NUMBER;
  NUERRORCODE         NUMBER;
  SBERRORMESSAGE      VARCHAR2(2000);
  SBORDER             VARCHAR2(2000);
  SBOPERATING_UNIT    VARCHAR2(2000);
  NUOPERATINGUNITID   OR_ORDER.OPERATING_UNIT_ID%TYPE;
  RCORDER             DAOR_ORDER.STYOR_ORDER;
  RCPERSON            DAGE_PERSON.STYGE_PERSON;
  CSBFILE_SEPARATOR           CONSTANT VARCHAR2(1) := '/';
  CNUMAXLENGTHTOASSIG         CONSTANT  NUMBER:=32000;
  SBELIMCARACTER              LD_PARAMETER.VALUE_CHAIN%TYPE:=DALD_PARAMETER.fsbGetValue_Chain('ELIM_ORASAR');


  PROCEDURE LOCKORDER
    (
        INUORDER_ID IN OR_ORDER.ORDER_ID%TYPE,
        ONUERRORCODE    OUT NUMBER,
        OSBERRORMESSAGE OUT GE_MESSAGE.DESCRIPTION%TYPE
    )
    IS
    BEGIN
        OR_BOFWLEGALIZEORDERUTIL.LOCKORDER(INUORDER_ID);
    EXCEPTION
    WHEN EX.CONTROLLED_ERROR THEN
      ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    WHEN OTHERS THEN
      ERRORS.SETERROR;
      ERRORS.GETERROR(ONUERRORCODE, OSBERRORMESSAGE);
    END;
BEGIN
  UT_TRACE.TRACE('[PRASIGNARCPLANO] INICIO',3);

  RCPERSON := DAGE_PERSON.FRCGETRECORD(NUPERSON);
  IF RCPERSON.E_MAIL IS NOT NULL THEN
    LDC_SENDEMAIL(RCPERSON.E_MAIL,'ASIGNACIÿN POR ARCHIVO PLANO ','INICIA ASIGANCIÿN POR ARCHIVO PLANO');
  END IF;
  GE_BOFILEMANAGER.CHECKFILEISEXISTING (SBPATHFILE||CSBFILE_SEPARATOR||sbFILE_NAME);
  SBERRORFILE := SUBSTR(sbFILE_NAME,1,INSTR(sbFILE_NAME,'.')-1);

  IF SBERRORFILE IS NULL THEN
     SBERRORFILE := sbFILE_NAME;
  END IF;

  SBERRORFILE := SBERRORFILE||'.err';

  GE_BOFILEMANAGER.FILEOPEN (FPORDERSDATA, SBPATHFILE, sbFILE_NAME, GE_BOFILEMANAGER.CSBREAD_OPEN_FILE, CNUMAXLENGTHTOASSIG);
  UT_FILE.FILEOPEN(FPORDERERRORS,SBPATHFILE,SBERRORFILE,'w',CNUMAXLENGTHTOASSIG);
  NURECORD := 0;
    WHILE TRUE LOOP
        GE_BOFILEMANAGER.FILEREAD (FPORDERSDATA, SBLINE);
        EXIT WHEN SBLINE IS NULL;
        IF SBELIMCARACTER = 'S' THEN
           SBLINE:=TRIM(SUBSTR(SBLINE,1, LENGTH(SBLINE)-1));
        ELSE
           SBLINE:=TRIM(SBLINE);
        END IF;
        NURECORD := NURECORD + 1;
        NUVALIDA :=LENGTH(SBLINE)-LENGTH(REPLACE(SBLINE,';',''));
        IF NUVALIDA!= 1 THEN
          SBERRORLINE := '['||NURECORD ||'] LA ESTRUTURA DE LA LINEA NO CUMPLE';
          UT_TRACE.TRACE('Error '||NUERRORCODE||'-'|| SBERRORMESSAGE);
          UT_FILE.FILEWRITE(FPORDERERRORS,SBERRORLINE);
          SBERRORLINE := NULL;
        ELSE
          SBORDER := substr(SBLINE, 1, instr(SBLINE, ';')-1);
          SBOPERATING_UNIT := substr(SBLINE, instr(SBLINE, ';') +1 );
          BEGIN
            NUORDERID := TO_NUMBER(SBORDER);
            NUOPERATINGUNITID :=TO_NUMBER(TRIM(SBOPERATING_UNIT));
          EXCEPTION
            WHEN OTHERS THEN
              NUORDERID := NULL;
              NUOPERATINGUNITID :=NULL;
              SBERRORLINE := '['||NURECORD ||'] ERROR AL CONVERTIR LA ORDE O LA UNIDAD OPERATIVA';
              UT_FILE.FILEWRITE(FPORDERERRORS,SBERRORLINE);
              SBERRORLINE := NULL;
          END;
          IF NUORDERID IS NOT NULL AND NUOPERATINGUNITID IS NOT NULL THEN
              SAVEPOINT ASIGNA;
              LOCKORDER(NUORDERID, NUERRORCODE, SBERRORMESSAGE);
              IF NUERRORCODE <> GE_BOCONSTANTS.CNUSUCCESS THEN
                 SBERRORLINE := NUORDERID ||' '|| NUERRORCODE ||'-'|| SBERRORMESSAGE;
                 UT_TRACE.TRACE('Orden ['||NUORDERID||'] Error '||NUERRORCODE||'-'|| SBERRORMESSAGE);
                 UT_FILE.FILEWRITE(FPORDERERRORS,SBERRORLINE);
                 SBERRORLINE := NULL;
                 ROLLBACK TO ASIGNA;
              ELSE
                 RCORDER := DAOR_ORDER.FRCGETRECORD(NUORDERID);
                 IF RCORDER.ORDER_STATUS_ID != 0 THEN
                   SBERRORLINE := '['||NURECORD ||']['|| NUORDERID ||'] La ordend no se encuentra en estado 0-Registrada';
                   UT_TRACE.TRACE('Orden ['||NUORDERID||'] Error '||NUERRORCODE||'-'|| SBERRORMESSAGE);
                   UT_FILE.FILEWRITE(FPORDERERRORS,SBERRORLINE);
                   SBERRORLINE := NULL;
                   ROLLBACK TO ASIGNA;
                 ELSE
                   OS_ASSIGN_ORDER(NUORDERID, NUOPERATINGUNITID, SYSDATE, SYSDATE, NUERRORCODE, SBERRORMESSAGE);
                   IF NUERRORCODE <> GE_BOCONSTANTS.CNUSUCCESS THEN
                     SBERRORLINE := '['||NURECORD ||']['|| NUORDERID ||'] '|| NUERRORCODE ||'-'|| SBERRORMESSAGE;
                     UT_TRACE.TRACE('Error '||NUERRORCODE||'-'|| SBERRORMESSAGE);
                     UT_FILE.FILEWRITE(FPORDERERRORS,SBERRORLINE);
                     SBERRORLINE := NULL;

                     ROLLBACK TO ASIGNA;
                   ELSE
                     COMMIT;
                   END IF;
                 END IF;
              END IF;
          END IF;
        END IF;


    END LOOP;

    IF UTL_FILE.IS_OPEN (FPORDERSDATA) THEN
        GE_BOFILEMANAGER.FILECLOSE (FPORDERSDATA);
    END IF;

    IF UTL_FILE.IS_OPEN (FPORDERERRORS) THEN
        GE_BOFILEMANAGER.FILECLOSE (FPORDERERRORS);
    END IF;
    COMMIT;
    IF RCPERSON.E_MAIL IS NOT NULL THEN
       LDC_SENDEMAIL(RCPERSON.E_MAIL,'ASIGNACIÿN POR ARCHIVO PLANO ','TERMINÿ ASIGANCIÿN POR ARCHIVO PLANO. VALIDAR ARCHIVO: '||SBPATHFILE||'/'||SBERRORFILE);
    END IF;
    UT_TRACE.TRACE('[PRASIGNARCPLANO] FIN',3);
EXCEPTION
WHEN EX.CONTROLLED_ERROR THEN
            ERRORS.GETERROR(NUERRORCODE, SBERRORMESSAGE);
        	  LDC_SENDEMAIL(RCPERSON.E_MAIL,'NOTIFICACION DE ERROR [ORASAR]',SBERRORMESSAGE);
            ROLLBACK;
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
        	ERRORS.GETERROR(NUERRORCODE, SBERRORMESSAGE);
            SBERRORMESSAGE := SBERRORMESSAGE || 'Error no controlado '||sqlerrm;
        	  LDC_SENDEMAIL(RCPERSON.E_MAIL,'NOTIFICACION DE ERROR [ORASAR]',''||SBERRORMESSAGE);
            ROLLBACK;
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
END;
/
