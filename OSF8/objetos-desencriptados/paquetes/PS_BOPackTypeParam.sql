PACKAGE PS_BOPackTypeParam AS






































    
    
    

    
    
    

    
    
    

    
    
    

    FUNCTION FSBVERSION  RETURN UT_DATATYPES.STYSAOVERSION;
    






   	FUNCTION FSBGETPACKTYPEPARAM
    (
        INUPACKAGETYPEID    PS_PACKAGE_TYPE.PACKAGE_TYPE_ID%TYPE ,
        INUATTRIBUTEID      UT_DATATYPES.STYNUMBERINDEX,
        IBLVALIDATE         UT_DATATYPES.STYBOOLEAN DEFAULT FALSE
    ) RETURN UT_DATATYPES.STYMAXVARCHAR;
    
   	FUNCTION FSBGETPACTYPPARBYTAG
    (
        ISBPACKTYPETAG      PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        INUATTRIBUTEID      UT_DATATYPES.STYNUMBERINDEX,
        IBLVALIDATE         UT_DATATYPES.STYBOOLEAN DEFAULT FALSE
    ) RETURN UT_DATATYPES.STYMAXVARCHAR;
    
    





    FUNCTION FSBGETVALPARAMBYLEVEL
    (
        ISBPACKTYPETAG      IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBLEVELTAG         IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBTECHNAMEPARAM    IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE
    )RETURN UT_DATATYPES.STYMAXVARCHAR;
    
    





    FUNCTION FSBGETVALPARBYLEVERR
    (
        ISBPACKAGETYPETAG   IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBLEVELTAG         IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBTECHNAMEPARAM    IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        IBLERROR            IN  UT_DATATYPES.STYBOOLEAN
    )RETURN UT_DATATYPES.STYMAXVARCHAR;
    
     





    FUNCTION FSBGETPARAMETERVALUE
    (
        ISBPACKTYPETAG      IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBTECHNAMEPARAM    IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE
    )RETURN UT_DATATYPES.STYMAXVARCHAR;
    
    





    FUNCTION FSBGETPARAMVALUEERR
    (
        ISBPACKAGETYPETAG   IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBTECHNAMEPARAM    IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        IBLERROR            IN  UT_DATATYPES.STYBOOLEAN
    )RETURN UT_DATATYPES.STYMAXVARCHAR;


END PS_BOPACKTYPEPARAM;

PACKAGE BODY PS_BOPackTypeParam AS






































    
    
    
    
    CSBVERSION   CONSTANT UT_DATATYPES.STYSAOVERSION := 'SAO532633';
    
    
    CNUNOT_PM_PARAM  CONSTANT UT_DATATYPES.STYNUMBERINDEX:= 110662;
    CNUNOT_VALID     CONSTANT UT_DATATYPES.STYNUMBERINDEX:= 902515;
    
    
    
    
    FUNCTION FSBVERSION  RETURN UT_DATATYPES.STYSAOVERSION IS
    BEGIN
        RETURN CSBVERSION;
    END;
    

    
























   	FUNCTION FSBGETPARAM
    (
        INUPACKAGETYPEID    PS_PACK_TYPE_PARAM.PACKAGE_TYPE_ID%TYPE,
        INUATTRIBUTEID      UT_DATATYPES.STYNUMBERINDEX,
        IBLVALIDATE         UT_DATATYPES.STYBOOLEAN
    )
    RETURN VARCHAR2  IS
    
        CURSOR CUPARAMVALUE IS
        SELECT VALUE
        FROM PS_PACK_TYPE_PARAM
        WHERE PACKAGE_TYPE_ID = INUPACKAGETYPEID
        AND ATTRIBUTE_ID = INUATTRIBUTEID;
        
        SBVALUE         PS_PACK_TYPE_PARAM.VALUE%TYPE := NULL;
        SBATTRIBUTE     GE_ATTRIBUTES.NAME_ATTRIBUTE%TYPE := NULL;
        SBTIPOPACK      PS_PACKAGE_TYPE.DESCRIPTION%TYPE;
        
        PROCEDURE CLOSECURSORPARAM IS
        BEGIN
             IF (CUPARAMVALUE%ISOPEN) THEN
                 CLOSE CUPARAMVALUE;
             END IF;
        END;
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOPackTypeParam.fsbGetParam inuPackageTypeId:'||INUPACKAGETYPEID||
                       ' inuAttributeid: '|| INUATTRIBUTEID, 1);
        SBATTRIBUTE := DAGE_ATTRIBUTES.FSBGETDISPLAY_NAME(INUATTRIBUTEID);
        SBTIPOPACK  := DAPS_PACKAGE_TYPE.FSBGETDESCRIPTION(INUPACKAGETYPEID);
        
        OPEN CUPARAMVALUE;
        FETCH CUPARAMVALUE INTO SBVALUE;
        IF (CUPARAMVALUE%NOTFOUND AND IBLVALIDATE ) THEN
            ERRORS.SETERROR(CNUNOT_PM_PARAM, SBATTRIBUTE||'|'||SBTIPOPACK);
            RAISE EX.CONTROLLED_ERROR;
        END IF;
        CLOSECURSORPARAM;
        UT_TRACE.TRACE('END PS_BOPackTypeParam.fsbGetParam sbValue:'||SBVALUE, 1);
        RETURN SBVALUE;
        EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                UT_TRACE.TRACE('CONTROLLED_ERROR PS_BOPackTypeParam.fsbGetParam', 1);
                CLOSECURSORPARAM;
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                UT_TRACE.TRACE('others PS_BOPackTypeParam.fsbGetParam', 1);
                CLOSECURSORPARAM;
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END FSBGETPARAM;

    




















   	FUNCTION FSBGETPARAMBYXML
    (
        INUPACKAGETYPEID    PS_PACKAGE_TYPE.PACKAGE_TYPE_ID%TYPE ,
        INUATTRIBUTEID      UT_DATATYPES.STYNUMBERINDEX,
        IBLVALIDATE         UT_DATATYPES.STYBOOLEAN
    ) RETURN UT_DATATYPES.STYMAXVARCHAR
    IS
    XLREQUEST UT_DATATYPES.STYXML;
    SBVALUE UT_DATATYPES.STYMAXVARCHAR;
    SBPATH  UT_DATATYPES.STYMAXVARCHAR :=
            REPLACE('/APPLICATION/VIEW/INSTANCE/MODEL/PARAMETERS/PARAMETER[ATTRIBUTE_ID=:attribute_id]', ':attribute_id', COALESCE(TO_CHAR(INUATTRIBUTEID), ''''''));
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOPackTypeParam.fsbGetParamByXml inuPackageTypeId:'||INUPACKAGETYPEID||
                       ' ,inuAttributeid: '|| INUATTRIBUTEID || ' ,sbPath :' || SBPATH , 4);
        PS_BOLOADXMLCONFIGPACK.GETAPPXML
        (
            DAPS_PACKAGE_TYPE.FSBGETTAG_NAME(INUPACKAGETYPEID),
            XLREQUEST
        );
        
        IF (IBLVALIDATE AND XLREQUEST.EXISTSNODE(SBPATH) = 0) THEN
            ERRORS.SETERROR
            (
                CNUNOT_PM_PARAM, INUATTRIBUTEID||'|'||
                DAPS_PACKAGE_TYPE.FSBGETDESCRIPTION(INUPACKAGETYPEID)
            );
            RAISE EX.CONTROLLED_ERROR;
        END IF;
        
        SBVALUE := PS_BCLOADCONFIGPACKAGE.FSBGETVALPARAMBYIDATTR
        (
            XLREQUEST,
            PS_BCLOADCONFIGPACKAGE.CSBREQUEST_LEVEL,
            INUPACKAGETYPEID,
            INUATTRIBUTEID
        );

        UT_TRACE.TRACE('END PS_BOPackTypeParam.fsbGetParamByXml sbValue:'||SBVALUE, 4);
        RETURN  SBVALUE;
     EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                UT_TRACE.TRACE('CONTROLLED_ERROR PS_BOPackTypeParam.fsbGetParamByXml', 4);
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                UT_TRACE.TRACE('others PS_BOPackTypeParam.fsbGetParamByXml', 4);
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END;
    

















   	FUNCTION FSBGETPACKTYPEPARAM
    (
        INUPACKAGETYPEID    PS_PACKAGE_TYPE.PACKAGE_TYPE_ID%TYPE ,
        INUATTRIBUTEID      UT_DATATYPES.STYNUMBERINDEX,
        IBLVALIDATE         UT_DATATYPES.STYBOOLEAN DEFAULT FALSE
    ) RETURN UT_DATATYPES.STYMAXVARCHAR
    IS
    SBVALUE UT_DATATYPES.STYMAXVARCHAR;
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOPackTypeParam.fsbGetPackTypeParam inuPackageTypeId:'||INUPACKAGETYPEID||
                       ' inuAttributeid: '|| INUATTRIBUTEID, 1);

        IF PS_BOFLAGSFEATURESREQ.FBLISACTIVENEWREQMODEL(INUPACKAGETYPEID) THEN
          SBVALUE := FSBGETPARAMBYXML(INUPACKAGETYPEID,INUATTRIBUTEID,IBLVALIDATE);
        ELSE
          SBVALUE := FSBGETPARAM(INUPACKAGETYPEID,INUATTRIBUTEID,IBLVALIDATE);
        END IF;

        IF (SBVALUE = GE_BOCONSTANTS.CSBNULLSB) THEN
            ERRORS.SETERROR
            (
                CNUNOT_VALID,
                INUATTRIBUTEID||'|'||DAPS_PACKAGE_TYPE.FSBGETDESCRIPTION(INUPACKAGETYPEID)
            );
            RAISE EX.CONTROLLED_ERROR;
        END IF;
        UT_TRACE.TRACE('END PS_BOPackTypeParam.fsbGetPackTypeParam sbValue:'||SBVALUE, 1);
        RETURN SBVALUE;
     EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                UT_TRACE.TRACE('CONTROLLED_ERROR PS_BOPackTypeParam.fsbGetPackTypeParam', 1);
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                UT_TRACE.TRACE('others PS_BOPackTypeParam.fsbGetPackTypeParam', 1);
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END;
    

    





















   	FUNCTION FSBGETPACTYPPARBYTAG
    (
        ISBPACKTYPETAG      PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        INUATTRIBUTEID      UT_DATATYPES.STYNUMBERINDEX,
        IBLVALIDATE         UT_DATATYPES.STYBOOLEAN DEFAULT FALSE
    )
    RETURN UT_DATATYPES.STYMAXVARCHAR  IS
    
        SBVALUE             PS_PACK_TYPE_PARAM.VALUE%TYPE := NULL;
        NUPACKAGETYPEID     PS_PACK_TYPE_PARAM.PACKAGE_TYPE_ID%TYPE;

    BEGIN
    
        NUPACKAGETYPEID := PS_BOPACKAGETYPE.FNUGETPACKTYPEBYTAGNAME(ISBPACKTYPETAG);

        SBVALUE := FSBGETPACKTYPEPARAM( NUPACKAGETYPEID, INUATTRIBUTEID, IBLVALIDATE);
        
        RETURN  SBVALUE;

    EXCEPTION
            WHEN EX.CONTROLLED_ERROR THEN
                RAISE EX.CONTROLLED_ERROR;
            WHEN OTHERS THEN
                ERRORS.SETERROR;
                RAISE EX.CONTROLLED_ERROR;
    END FSBGETPACTYPPARBYTAG;
    
    
















    FUNCTION FSBGETVALPARAMBYLEVEL
    (
        ISBPACKTYPETAG      IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBLEVELTAG         IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBTECHNAMEPARAM    IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE
    )RETURN UT_DATATYPES.STYMAXVARCHAR
    IS
        SBVALUEPARAM    UT_DATATYPES.STYMAXVARCHAR;
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOPackTypeParam.fsbGetValParamByLevel [isbPackTypeTag: '||ISBPACKTYPETAG||'][isbLevelTag: '||ISBLEVELTAG||'][isbTechNameParam:'||ISBTECHNAMEPARAM||']',3);

        SBVALUEPARAM := PS_BCLOADCONFIGPACKAGE.FSBGETVALPARAMBYLEVEL(ISBPACKTYPETAG, ISBLEVELTAG, ISBTECHNAMEPARAM);

        UT_TRACE.TRACE('END PS_BOPackTypeParam.fsbGetValParamByLevel [nuValueParam: '||SBVALUEPARAM||']',3);
        RETURN SBVALUEPARAM;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR PS_BOPackTypeParam.fsbGetValParamByLevel',3);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('OTHERS PS_BOPackTypeParam.fsbGetValParamByLevel',3);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETVALPARAMBYLEVEL;
    
    


















    FUNCTION FSBGETVALPARBYLEVERR
    (
        ISBPACKAGETYPETAG   IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBLEVELTAG         IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBTECHNAMEPARAM    IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        IBLERROR            IN  UT_DATATYPES.STYBOOLEAN
    )RETURN UT_DATATYPES.STYMAXVARCHAR
    IS

        SBVALUEPARAM    UT_DATATYPES.STYMAXVARCHAR;
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOPackTypeParam.fsbGetValParByLevErr [isbPackageTypeTag: '||ISBPACKAGETYPETAG||'][isbLevelTag: '||ISBLEVELTAG||'][isbTechNameParam:'||ISBTECHNAMEPARAM||']',3);

        
        SBVALUEPARAM := PS_BCLOADCONFIGPACKAGE.FSBGETVALPARAMBYLEVEL(ISBPACKAGETYPETAG, ISBLEVELTAG, ISBTECHNAMEPARAM);
        
        IF (SBVALUEPARAM IS NULL AND IBLERROR ) THEN
            ERRORS.SETERROR
            (
                CNUNOT_VALID, 
                ISBTECHNAMEPARAM||'|'|| DAPS_PACKAGE_TYPE.FSBGETDESCRIPTION(PS_BOPACKAGETYPE.FNUGETPACKTYPEBYTAGNAME(ISBPACKAGETYPETAG))
            );
            RAISE EX.CONTROLLED_ERROR;
        END IF;

        UT_TRACE.TRACE('END PS_BOPackTypeParam.fsbGetValParByLevErr [sbValueParam: '||SBVALUEPARAM||']',3);
        RETURN SBVALUEPARAM;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR PS_BOPackTypeParam.fsbGetValParByLevErr',3);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('OTHERS PS_BOPackTypeParam.fsbGetValParByLevErr',3);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETVALPARBYLEVERR;
    
    
    















    FUNCTION FSBGETPARAMETERVALUE
    (
        ISBPACKTYPETAG      IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBTECHNAMEPARAM    IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE
    )RETURN UT_DATATYPES.STYMAXVARCHAR
    IS
        SBPARAMETERVALUE    UT_DATATYPES.STYMAXVARCHAR;
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOPackTypeParam.fsbGetParameterValue'||CHR(10)||
                        'isbPackTypeTag: '  ||ISBPACKTYPETAG    ||CHR(10)||
                        'isbTechNameParam: '||ISBTECHNAMEPARAM, 3);

        SBPARAMETERVALUE := FSBGETVALPARAMBYLEVEL(ISBPACKTYPETAG, ISBPACKTYPETAG, ISBTECHNAMEPARAM);

        UT_TRACE.TRACE('END PS_BOPackTypeParam.fsbGetParameterValue [sbParameterValue: '||SBPARAMETERVALUE||']',3);
        RETURN SBPARAMETERVALUE;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR PS_BOPackTypeParam.fsbGetParameterValue',3);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('OTHERS PS_BOPackTypeParam.fsbGetParameterValue',3);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETPARAMETERVALUE;
    
    

















    FUNCTION FSBGETPARAMVALUEERR
    (
        ISBPACKAGETYPETAG   IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        ISBTECHNAMEPARAM    IN  PS_PACKAGE_TYPE.TAG_NAME%TYPE,
        IBLERROR            IN  UT_DATATYPES.STYBOOLEAN
    )RETURN UT_DATATYPES.STYMAXVARCHAR
    IS
        SBPARAMETERVALUE    UT_DATATYPES.STYMAXVARCHAR;
        
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOPackTypeParam.fsbGetParamValueErr'   ||CHR(10)||
                        'isbPackageTypeTag: '   ||ISBPACKAGETYPETAG     ||CHR(10)||
                        'isbTechNameParam: '    ||ISBTECHNAMEPARAM,     3);

        
        SBPARAMETERVALUE := FSBGETVALPARBYLEVERR(ISBPACKAGETYPETAG, ISBPACKAGETYPETAG, ISBTECHNAMEPARAM, IBLERROR);

        IF (SBPARAMETERVALUE IS NULL AND IBLERROR ) THEN
            ERRORS.SETERROR
            (
                CNUNOT_VALID, 
                ISBTECHNAMEPARAM||'|'|| DAPS_PACKAGE_TYPE.FSBGETDESCRIPTION(PS_BOPACKAGETYPE.FNUGETPACKTYPEBYTAGNAME(ISBPACKAGETYPETAG))
            );
            RAISE EX.CONTROLLED_ERROR;
        END IF;

        UT_TRACE.TRACE('END PS_BOPackTypeParam.fsbGetParamValueErr [sbParameterValue: '||SBPARAMETERVALUE||']',3);
        RETURN SBPARAMETERVALUE;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR PS_BOPackTypeParam.fsbGetParamValueErr',3);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('OTHERS PS_BOPackTypeParam.fsbGetParamValueErr',3);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBGETPARAMVALUEERR;


END PS_BOPACKTYPEPARAM;