PACKAGE PS_BOLOADXMLCONFIGPACK
IS




















    
    FUNCTION FSBVERSION  RETURN UT_DATATYPES.STYSAOVERSION;
    
     




    PROCEDURE GETAPPXML
    (
        ISBTAGPACKAGE   IN  UT_DATATYPES.STYMAXVARCHAR,
        OXLAPPXML       OUT NOCOPY GE_DISTRIBUTION_FILE.APP_XML%TYPE
    );
    
    






    PROCEDURE GETREGRULENAMEBYPACK
    (
        INUPACKTYPE             IN  PS_PACKAGE_TYPE.PACKAGE_TYPE_ID%TYPE,
        OSBREGISTERRULENAME     OUT UT_DATATYPES.STYMAXVARCHAR
    );

END PS_BOLOADXMLCONFIGPACK;

PACKAGE BODY PS_BOLOADXMLCONFIGPACK
IS




















    
    
    
    

    
    CSBVERSION   CONSTANT UT_DATATYPES.STYSAOVERSION := 'SAO569766';

    
    
    
    TYPE TYTBAPPXML IS TABLE OF GE_DISTRIBUTION_FILE.APP_XML%TYPE INDEX BY UT_DATATYPES.STYMAXVARCHAR;
    
    GTBAPPXML TYTBAPPXML;

    














    FUNCTION FSBVERSION  RETURN UT_DATATYPES.STYSAOVERSION IS
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOLOADXMLCONFIGPACK.fsbVersion',6);
        UT_TRACE.TRACE('END PS_BOLOADXMLCONFIGPACK.fsbVersion',6);
        RETURN CSBVERSION;

    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('CONTROLLED_ERROR PS_BOLOADXMLCONFIGPACK.fsbVersion',6);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('others PS_BOLOADXMLCONFIGPACK.fsbVersion',6);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END FSBVERSION;
    
    




















    PROCEDURE GETAPPXML
    (
        ISBTAGPACKAGE   IN  UT_DATATYPES.STYMAXVARCHAR,
        OXLAPPXML       OUT NOCOPY GE_DISTRIBUTION_FILE.APP_XML%TYPE
    )
    IS
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOLOADXMLCONFIGPACK.GetAppXML isbTagPackage['||ISBTAGPACKAGE||']', 5);

        IF(GTBAPPXML.EXISTS(ISBTAGPACKAGE))THEN
            UT_TRACE.TRACE('Obtiene configuraci�n desde cach�', 5);
            OXLAPPXML := GTBAPPXML(ISBTAGPACKAGE);
        ELSE
            IF(DAPS_REQUEST_CONF.FBLEXIST(ISBTAGPACKAGE)) THEN
                UT_TRACE.TRACE('Obtiene configuraci�n desde  ps_request_conf', 5);
                OXLAPPXML := DAPS_REQUEST_CONF.FSBGETREQUEST_XML(ISBTAGPACKAGE);
            ELSE
                UT_TRACE.TRACE('Obtiene configuraci�n desde ge_distribution_file', 5);
                OXLAPPXML := DAGE_DISTRIBUTION_FILE.FSBGETAPP_XML(ISBTAGPACKAGE);
            END IF;
            GTBAPPXML(ISBTAGPACKAGE) := OXLAPPXML;
        END IF;

        UT_TRACE.TRACE('END PS_BOLOADXMLCONFIGPACK.GetAppXML', 5);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('ex.CONTROLLED_ERROR PS_BOLOADXMLCONFIGPACK.GetAppXML', 5);
            RAISE EX.CONTROLLED_ERROR;
        WHEN OTHERS THEN
            UT_TRACE.TRACE('others PS_BOLOADXMLCONFIGPACK.GetAppXML', 5);
            ERRORS.SETERROR;
            RAISE EX.CONTROLLED_ERROR;
    END GETAPPXML;
    
    
























    PROCEDURE GETREGRULENAMEBYPACK
    (
        INUPACKTYPE             IN  PS_PACKAGE_TYPE.PACKAGE_TYPE_ID%TYPE,
        OSBREGISTERRULENAME     OUT UT_DATATYPES.STYMAXVARCHAR
    )
    IS
        XLAPPXML        GE_DISTRIBUTION_FILE.APP_XML%TYPE;
        SBRULENAME      UT_DATATYPES.STYMAXVARCHAR := NULL;
        SBTAGNAME       UT_DATATYPES.STYMAXVARCHAR;
        SBPATHREGRULE   UT_DATATYPES.STYMAXVARCHAR := '/APPLICATION/VIEW/INSTANCE/CTRL/REGISTER_RULE/RULE/NAME/text()';
    BEGIN
        UT_TRACE.TRACE('BEGIN PS_BOLOADXMLCONFIGPACK.GetRegRuleNameByPack inuPackType['||INUPACKTYPE||']', 5);

        
        SBTAGNAME :=  PS_BOPACKAGETYPE.FRCGETRECORDWITHCACHE(INUPACKTYPE).TAG_NAME;
        
        
        PS_BOLOADXMLCONFIGPACK.GETAPPXML(SBTAGNAME,XLAPPXML);

        IF  XLAPPXML.EXISTSNODE(SBPATHREGRULE) = 1 THEN
            SBRULENAME :=  XLAPPXML.EXTRACT(SBPATHREGRULE).GETSTRINGVAL();
            UT_TRACE.TRACE('Rule register: '||SBRULENAME, 5);
        END IF;

        
        IF(SBRULENAME IS NOT NULL)THEN
        
            
            SBRULENAME := UT_STRING.FSBCONCAT(PS_BCLOADCONFIGPACKAGE.FSBGETNAMERULEBYPACK(INUPACKTYPE), 
                                              SUBSTR(SBRULENAME,INSTR(SBRULENAME, GE_BOCONSTANTS.CSBDOT)+1,LENGTH(SBRULENAME)), 
                                              GE_BOCONSTANTS.CSBDOT);    
        END IF;
        
        OSBREGISTERRULENAME := SBRULENAME;

        UT_TRACE.TRACE('END PS_BOLOADXMLCONFIGPACK.GetRegRuleNameByPack osbRegisterRuleName: '||OSBREGISTERRULENAME, 5);
    EXCEPTION
        WHEN EX.CONTROLLED_ERROR THEN
            UT_TRACE.TRACE('ex.CONTROLLED_ERROR PS_BOLOADXMLCONFIGPACK.GetRegRuleNameByPack', 5);
        WHEN OTHERS THEN
            UT_TRACE.TRACE('others PS_BOLOADXMLCONFIGPACK.GetRegRuleNameByPack', 5);
            ERRORS.SETERROR;
    END GETREGRULENAMEBYPACK;

END PS_BOLOADXMLCONFIGPACK;